Search.setIndex({"docnames": ["Saving Data with PopSummary", "Using Basis Splines", "api/gwinferno.cosmology", "api/gwinferno.cosmology.Cosmology", "api/gwinferno.distributions", "api/gwinferno.distributions.betadist", "api/gwinferno.distributions.ln_beta_fct", "api/gwinferno.distributions.log_logistic_unit", "api/gwinferno.distributions.logistic_unit", "api/gwinferno.distributions.powerlaw_logit_pdf", "api/gwinferno.distributions.powerlaw_pdf", "api/gwinferno.distributions.truncnorm_pdf", "api/gwinferno.interpolation", "api/gwinferno.interpolation.BSpline", "api/gwinferno.interpolation.BasisSpline", "api/gwinferno.interpolation.LogXBSpline", "api/gwinferno.interpolation.LogXLogYBSpline", "api/gwinferno.interpolation.LogYBSpline", "api/gwinferno.interpolation.NaturalCubicUnivariateSpline", "api/gwinferno.interpolation.RectBivariateBasisSpline", "api/gwinferno.models", "api/gwinferno.models.bsplines", "api/gwinferno.models.bsplines.joint", "api/gwinferno.models.bsplines.joint.BSplineJointMassRatioChiEffective", "api/gwinferno.models.bsplines.joint.Base2DBSplineModel", "api/gwinferno.models.bsplines.separable", "api/gwinferno.models.bsplines.separable.BSplineEffectiveSpinDims", "api/gwinferno.models.bsplines.separable.BSplineIIDComponentMasses", "api/gwinferno.models.bsplines.separable.BSplineIIDSpinMagnitudes", "api/gwinferno.models.bsplines.separable.BSplineIIDSpinTilts", "api/gwinferno.models.bsplines.separable.BSplineIndependentComponentMasses", "api/gwinferno.models.bsplines.separable.BSplineIndependentSpinMagnitudes", "api/gwinferno.models.bsplines.separable.BSplineIndependentSpinTilts", "api/gwinferno.models.bsplines.separable.BSplinePrimaryBSplineRatio", "api/gwinferno.models.bsplines.separable.BSplinePrimaryPowerlawRatio", "api/gwinferno.models.bsplines.separable.PLPeakPrimaryBSplineRatio", "api/gwinferno.models.bsplines.single", "api/gwinferno.models.bsplines.single.BSplineChiEffective", "api/gwinferno.models.bsplines.single.BSplineChiPrecess", "api/gwinferno.models.bsplines.single.BSplineMass", "api/gwinferno.models.bsplines.single.BSplineRatio", "api/gwinferno.models.bsplines.single.BSplineRedshift", "api/gwinferno.models.bsplines.single.BSplineSpinMagnitude", "api/gwinferno.models.bsplines.single.BSplineSpinTilt", "api/gwinferno.models.bsplines.single.BSplineSymmetricChiEffective", "api/gwinferno.models.bsplines.single.Base1DBSplineModel", "api/gwinferno.models.bsplines.smoothing", "api/gwinferno.models.bsplines.smoothing.apply_difference_prior", "api/gwinferno.models.bsplines.smoothing.apply_twod_difference_prior", "api/gwinferno.models.bsplines.smoothing.get_adaptive_Lambda", "api/gwinferno.models.bsplines.smoothing.mixture_smoothing_parameter", "api/gwinferno.models.gwpopulation", "api/gwinferno.models.gwpopulation.gwpopulation", "api/gwinferno.models.gwpopulation.gwpopulation.PowerlawRedshiftModel", "api/gwinferno.models.gwpopulation.gwpopulation.beta_spin_magnitude", "api/gwinferno.models.gwpopulation.gwpopulation.iid_spin_magnitude", "api/gwinferno.models.gwpopulation.gwpopulation.iid_spin_tilt", "api/gwinferno.models.gwpopulation.gwpopulation.independent_spin_magnitude", "api/gwinferno.models.gwpopulation.gwpopulation.independent_spin_tilt", "api/gwinferno.models.gwpopulation.gwpopulation.mixture_isoalign_spin_tilt", "api/gwinferno.models.gwpopulation.gwpopulation.plpeak_primary_pdf", "api/gwinferno.models.gwpopulation.gwpopulation.plpeak_primary_ratio_pdf", "api/gwinferno.models.gwpopulation.gwpopulation.powerlaw_primary_ratio_falloff_pdf", "api/gwinferno.models.gwpopulation.gwpopulation.powerlaw_primary_ratio_pdf", "api/gwinferno.models.mass_gap", "api/gwinferno.models.mass_gap.logistic_unit", "api/gwinferno.models.mass_gap.plpeak_gap_primary_ratio_pdf", "api/gwinferno.models.mass_gap.powerlaw_gap_cutoff_primary_ratio_pdf", "api/gwinferno.models.mass_gap.powerlaw_gap_logit_ben_primary_pdf", "api/gwinferno.models.mass_gap.powerlaw_gap_logit_primary_pdf", "api/gwinferno.models.mass_gap.powerlaw_gap_primary_ratio_pdf", "api/gwinferno.models.spline_perturbation", "api/gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio", "api/gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio", "api/gwinferno.models.spline_perturbation.PowerlawSplineRedshiftModel", "api/gwinferno.numpyro_distributions", "api/gwinferno.numpyro_distributions.BSplineDistribution", "api/gwinferno.numpyro_distributions.Cosine", "api/gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw", "api/gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw", "api/gwinferno.numpyro_distributions.NumericallyNormalizedDistribition", "api/gwinferno.numpyro_distributions.PSplineCoeficientPrior", "api/gwinferno.numpyro_distributions.Powerlaw", "api/gwinferno.numpyro_distributions.PowerlawRedshift", "api/gwinferno.numpyro_distributions.Sine", "api/gwinferno.numpyro_distributions.cumtrapz", "api/gwinferno.parameter_estimation", "api/gwinferno.parameter_estimation.detectors", "api/gwinferno.parameter_estimation.detectors.Detector", "api/gwinferno.parameter_estimation.detectors.H1", "api/gwinferno.parameter_estimation.detectors.L1", "api/gwinferno.parameter_estimation.detectors.V1", "api/gwinferno.parameter_estimation.detectors.construct_arm", "api/gwinferno.parameter_estimation.detectors.get_detector_tensor", "api/gwinferno.parameter_estimation.detectors.get_geocentric_vertex", "api/gwinferno.parameter_estimation.detectors.make_get_polarization_tensor", "api/gwinferno.parameter_estimation.likelihood", "api/gwinferno.parameter_estimation.likelihood.inner_product", "api/gwinferno.parameter_estimation.likelihood.log_likelihood", "api/gwinferno.parameter_estimation.likelihood.log_likelihood_det", "api/gwinferno.parameter_estimation.likelihood.matched_filter_snr", "api/gwinferno.parameter_estimation.likelihood.noise_log_likelihood", "api/gwinferno.parameter_estimation.likelihood.noise_log_likelihood_det", "api/gwinferno.parameter_estimation.likelihood.noise_weighted_inner_product", "api/gwinferno.parameter_estimation.likelihood.optimal_snr_squared", "api/gwinferno.pipeline", "api/gwinferno.pipeline.analysis", "api/gwinferno.pipeline.analysis.TotalVTCalculator", "api/gwinferno.pipeline.analysis.construct_hierarchical_model", "api/gwinferno.pipeline.analysis.find_map", "api/gwinferno.pipeline.analysis.hierarchical_likelihood", "api/gwinferno.pipeline.analysis.hierarchical_likelihood_in_log", "api/gwinferno.pipeline.analysis.logmu_logneff_injections_log", "api/gwinferno.pipeline.analysis.mu_neff_injections", "api/gwinferno.pipeline.analysis.per_event_log_bayes_factor_log_neffs", "api/gwinferno.pipeline.analysis.per_event_log_bayes_factor_log_neffs_log", "api/gwinferno.pipeline.parser", "api/gwinferno.pipeline.parser.ConfigReader", "api/gwinferno.pipeline.parser.PopMixtureModel", "api/gwinferno.pipeline.parser.PopModel", "api/gwinferno.pipeline.parser.PopPrior", "api/gwinferno.pipeline.parser.load_base_parser", "api/gwinferno.pipeline.parser.load_dist_from_string", "api/gwinferno.pipeline.parser.load_model_from_python_file", "api/gwinferno.postprocess", "api/gwinferno.postprocess.calculate_ppds", "api/gwinferno.postprocess.calculate_ppds.calculate_chieff_bspline_ppds", "api/gwinferno.postprocess.calculate_ppds.calculate_iid_spin_bspline_ppds", "api/gwinferno.postprocess.calculate_ppds.calculate_iid_spin_bspline_weights", "api/gwinferno.postprocess.calculate_ppds.calculate_ind_spin_bspline_ppds", "api/gwinferno.postprocess.calculate_ppds.calculate_m1_bspline_q_powerlaw_ppds", "api/gwinferno.postprocess.calculate_ppds.calculate_m1m2_bspline_ppds", "api/gwinferno.postprocess.calculate_ppds.calculate_m1q_bspline_ppds", "api/gwinferno.postprocess.calculate_ppds.calculate_m1q_bspline_weights", "api/gwinferno.postprocess.calculate_ppds.calculate_m1q_ppds_plbspline_model", "api/gwinferno.postprocess.calculate_ppds.calculate_powerbspline_rate_of_z_ppds", "api/gwinferno.postprocess.calculate_ppds.calculate_powerlaw_rate_of_z_ppds", "api/gwinferno.postprocess.plotting", "api/gwinferno.postprocess.plotting.plot_chieff_dist", "api/gwinferno.postprocess.plotting.plot_iid_spin_dist", "api/gwinferno.postprocess.plotting.plot_ind_spin_dist", "api/gwinferno.postprocess.plotting.plot_m1_vs_z_ppc", "api/gwinferno.postprocess.plotting.plot_mass_dist", "api/gwinferno.postprocess.plotting.plot_ppc_brontosaurus", "api/gwinferno.postprocess.plotting.plot_rofz", "api/gwinferno.preprocess", "api/gwinferno.preprocess.conversions", "api/gwinferno.preprocess.conversions.alpha_beta_from_mu_var", "api/gwinferno.preprocess.conversions.chieff_from_q_component_spins", "api/gwinferno.preprocess.conversions.chip_from_q_component_spins", "api/gwinferno.preprocess.conversions.mu_var_from_alpha_beta", "api/gwinferno.preprocess.data_collection", "api/gwinferno.preprocess.data_collection.apply_priors", "api/gwinferno.preprocess.data_collection.convert_component_spin_posteriors_to_chieff", "api/gwinferno.preprocess.data_collection.dl_2_prior_on_z", "api/gwinferno.preprocess.data_collection.downsample_posteriors_to_consistent_nsamps", "api/gwinferno.preprocess.data_collection.load_catalog_from_metadata", "api/gwinferno.preprocess.data_collection.load_posterior_samples", "api/gwinferno.preprocess.data_collection.p_m1src_q_z_lal_pe_prior", "api/gwinferno.preprocess.data_collection.preprocess_data", "api/gwinferno.preprocess.data_collection.setup_posterior_samples_and_injections", "api/gwinferno.preprocess.priors", "api/gwinferno.preprocess.priors.Di", "api/gwinferno.preprocess.priors.chi_effective_prior_from_aligned_spins", "api/gwinferno.preprocess.priors.chi_effective_prior_from_isotropic_spins", "api/gwinferno.preprocess.priors.chi_p_prior_from_isotropic_spins", "api/gwinferno.preprocess.priors.chi_p_prior_given_chi_eff_q", "api/gwinferno.preprocess.priors.joint_prior_from_isotropic_spins", "api/gwinferno.preprocess.selection", "api/gwinferno.preprocess.selection.convert_component_spin_injections_to_chieff", "api/gwinferno.preprocess.selection.get_injection_dict", "api/gwinferno.preprocess.selection.get_semianlytic_injection_dict", "api/gwinferno.preprocess.selection.load_injections", "api/gwinferno.preprocess.selection.resample_injections", "example_usage", "index", "installation"], "filenames": ["Saving Data with PopSummary.rst", "Using Basis Splines.rst", "api/gwinferno.cosmology.rst", "api/gwinferno.cosmology.Cosmology.rst", "api/gwinferno.distributions.rst", "api/gwinferno.distributions.betadist.rst", "api/gwinferno.distributions.ln_beta_fct.rst", "api/gwinferno.distributions.log_logistic_unit.rst", "api/gwinferno.distributions.logistic_unit.rst", "api/gwinferno.distributions.powerlaw_logit_pdf.rst", "api/gwinferno.distributions.powerlaw_pdf.rst", "api/gwinferno.distributions.truncnorm_pdf.rst", "api/gwinferno.interpolation.rst", "api/gwinferno.interpolation.BSpline.rst", "api/gwinferno.interpolation.BasisSpline.rst", "api/gwinferno.interpolation.LogXBSpline.rst", "api/gwinferno.interpolation.LogXLogYBSpline.rst", "api/gwinferno.interpolation.LogYBSpline.rst", "api/gwinferno.interpolation.NaturalCubicUnivariateSpline.rst", "api/gwinferno.interpolation.RectBivariateBasisSpline.rst", "api/gwinferno.models.rst", "api/gwinferno.models.bsplines.rst", "api/gwinferno.models.bsplines.joint.rst", "api/gwinferno.models.bsplines.joint.BSplineJointMassRatioChiEffective.rst", "api/gwinferno.models.bsplines.joint.Base2DBSplineModel.rst", "api/gwinferno.models.bsplines.separable.rst", "api/gwinferno.models.bsplines.separable.BSplineEffectiveSpinDims.rst", "api/gwinferno.models.bsplines.separable.BSplineIIDComponentMasses.rst", "api/gwinferno.models.bsplines.separable.BSplineIIDSpinMagnitudes.rst", "api/gwinferno.models.bsplines.separable.BSplineIIDSpinTilts.rst", "api/gwinferno.models.bsplines.separable.BSplineIndependentComponentMasses.rst", "api/gwinferno.models.bsplines.separable.BSplineIndependentSpinMagnitudes.rst", "api/gwinferno.models.bsplines.separable.BSplineIndependentSpinTilts.rst", "api/gwinferno.models.bsplines.separable.BSplinePrimaryBSplineRatio.rst", "api/gwinferno.models.bsplines.separable.BSplinePrimaryPowerlawRatio.rst", "api/gwinferno.models.bsplines.separable.PLPeakPrimaryBSplineRatio.rst", "api/gwinferno.models.bsplines.single.rst", "api/gwinferno.models.bsplines.single.BSplineChiEffective.rst", "api/gwinferno.models.bsplines.single.BSplineChiPrecess.rst", "api/gwinferno.models.bsplines.single.BSplineMass.rst", "api/gwinferno.models.bsplines.single.BSplineRatio.rst", "api/gwinferno.models.bsplines.single.BSplineRedshift.rst", "api/gwinferno.models.bsplines.single.BSplineSpinMagnitude.rst", "api/gwinferno.models.bsplines.single.BSplineSpinTilt.rst", "api/gwinferno.models.bsplines.single.BSplineSymmetricChiEffective.rst", "api/gwinferno.models.bsplines.single.Base1DBSplineModel.rst", "api/gwinferno.models.bsplines.smoothing.rst", "api/gwinferno.models.bsplines.smoothing.apply_difference_prior.rst", "api/gwinferno.models.bsplines.smoothing.apply_twod_difference_prior.rst", "api/gwinferno.models.bsplines.smoothing.get_adaptive_Lambda.rst", "api/gwinferno.models.bsplines.smoothing.mixture_smoothing_parameter.rst", "api/gwinferno.models.gwpopulation.rst", "api/gwinferno.models.gwpopulation.gwpopulation.rst", "api/gwinferno.models.gwpopulation.gwpopulation.PowerlawRedshiftModel.rst", "api/gwinferno.models.gwpopulation.gwpopulation.beta_spin_magnitude.rst", "api/gwinferno.models.gwpopulation.gwpopulation.iid_spin_magnitude.rst", "api/gwinferno.models.gwpopulation.gwpopulation.iid_spin_tilt.rst", "api/gwinferno.models.gwpopulation.gwpopulation.independent_spin_magnitude.rst", "api/gwinferno.models.gwpopulation.gwpopulation.independent_spin_tilt.rst", "api/gwinferno.models.gwpopulation.gwpopulation.mixture_isoalign_spin_tilt.rst", "api/gwinferno.models.gwpopulation.gwpopulation.plpeak_primary_pdf.rst", "api/gwinferno.models.gwpopulation.gwpopulation.plpeak_primary_ratio_pdf.rst", "api/gwinferno.models.gwpopulation.gwpopulation.powerlaw_primary_ratio_falloff_pdf.rst", "api/gwinferno.models.gwpopulation.gwpopulation.powerlaw_primary_ratio_pdf.rst", "api/gwinferno.models.mass_gap.rst", "api/gwinferno.models.mass_gap.logistic_unit.rst", "api/gwinferno.models.mass_gap.plpeak_gap_primary_ratio_pdf.rst", "api/gwinferno.models.mass_gap.powerlaw_gap_cutoff_primary_ratio_pdf.rst", "api/gwinferno.models.mass_gap.powerlaw_gap_logit_ben_primary_pdf.rst", "api/gwinferno.models.mass_gap.powerlaw_gap_logit_primary_pdf.rst", "api/gwinferno.models.mass_gap.powerlaw_gap_primary_ratio_pdf.rst", "api/gwinferno.models.spline_perturbation.rst", "api/gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio.rst", "api/gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio.rst", "api/gwinferno.models.spline_perturbation.PowerlawSplineRedshiftModel.rst", "api/gwinferno.numpyro_distributions.rst", "api/gwinferno.numpyro_distributions.BSplineDistribution.rst", "api/gwinferno.numpyro_distributions.Cosine.rst", "api/gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.rst", "api/gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.rst", "api/gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.rst", "api/gwinferno.numpyro_distributions.PSplineCoeficientPrior.rst", "api/gwinferno.numpyro_distributions.Powerlaw.rst", "api/gwinferno.numpyro_distributions.PowerlawRedshift.rst", "api/gwinferno.numpyro_distributions.Sine.rst", "api/gwinferno.numpyro_distributions.cumtrapz.rst", "api/gwinferno.parameter_estimation.rst", "api/gwinferno.parameter_estimation.detectors.rst", "api/gwinferno.parameter_estimation.detectors.Detector.rst", "api/gwinferno.parameter_estimation.detectors.H1.rst", "api/gwinferno.parameter_estimation.detectors.L1.rst", "api/gwinferno.parameter_estimation.detectors.V1.rst", "api/gwinferno.parameter_estimation.detectors.construct_arm.rst", "api/gwinferno.parameter_estimation.detectors.get_detector_tensor.rst", "api/gwinferno.parameter_estimation.detectors.get_geocentric_vertex.rst", "api/gwinferno.parameter_estimation.detectors.make_get_polarization_tensor.rst", "api/gwinferno.parameter_estimation.likelihood.rst", "api/gwinferno.parameter_estimation.likelihood.inner_product.rst", "api/gwinferno.parameter_estimation.likelihood.log_likelihood.rst", "api/gwinferno.parameter_estimation.likelihood.log_likelihood_det.rst", "api/gwinferno.parameter_estimation.likelihood.matched_filter_snr.rst", "api/gwinferno.parameter_estimation.likelihood.noise_log_likelihood.rst", "api/gwinferno.parameter_estimation.likelihood.noise_log_likelihood_det.rst", "api/gwinferno.parameter_estimation.likelihood.noise_weighted_inner_product.rst", "api/gwinferno.parameter_estimation.likelihood.optimal_snr_squared.rst", "api/gwinferno.pipeline.rst", "api/gwinferno.pipeline.analysis.rst", "api/gwinferno.pipeline.analysis.TotalVTCalculator.rst", "api/gwinferno.pipeline.analysis.construct_hierarchical_model.rst", "api/gwinferno.pipeline.analysis.find_map.rst", "api/gwinferno.pipeline.analysis.hierarchical_likelihood.rst", "api/gwinferno.pipeline.analysis.hierarchical_likelihood_in_log.rst", "api/gwinferno.pipeline.analysis.logmu_logneff_injections_log.rst", "api/gwinferno.pipeline.analysis.mu_neff_injections.rst", "api/gwinferno.pipeline.analysis.per_event_log_bayes_factor_log_neffs.rst", "api/gwinferno.pipeline.analysis.per_event_log_bayes_factor_log_neffs_log.rst", "api/gwinferno.pipeline.parser.rst", "api/gwinferno.pipeline.parser.ConfigReader.rst", "api/gwinferno.pipeline.parser.PopMixtureModel.rst", "api/gwinferno.pipeline.parser.PopModel.rst", "api/gwinferno.pipeline.parser.PopPrior.rst", "api/gwinferno.pipeline.parser.load_base_parser.rst", "api/gwinferno.pipeline.parser.load_dist_from_string.rst", "api/gwinferno.pipeline.parser.load_model_from_python_file.rst", "api/gwinferno.postprocess.rst", "api/gwinferno.postprocess.calculate_ppds.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_chieff_bspline_ppds.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_iid_spin_bspline_ppds.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_iid_spin_bspline_weights.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_ind_spin_bspline_ppds.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_m1_bspline_q_powerlaw_ppds.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_m1m2_bspline_ppds.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_m1q_bspline_ppds.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_m1q_bspline_weights.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_m1q_ppds_plbspline_model.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_powerbspline_rate_of_z_ppds.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_powerlaw_rate_of_z_ppds.rst", "api/gwinferno.postprocess.plotting.rst", "api/gwinferno.postprocess.plotting.plot_chieff_dist.rst", "api/gwinferno.postprocess.plotting.plot_iid_spin_dist.rst", "api/gwinferno.postprocess.plotting.plot_ind_spin_dist.rst", "api/gwinferno.postprocess.plotting.plot_m1_vs_z_ppc.rst", "api/gwinferno.postprocess.plotting.plot_mass_dist.rst", "api/gwinferno.postprocess.plotting.plot_ppc_brontosaurus.rst", "api/gwinferno.postprocess.plotting.plot_rofz.rst", "api/gwinferno.preprocess.rst", "api/gwinferno.preprocess.conversions.rst", "api/gwinferno.preprocess.conversions.alpha_beta_from_mu_var.rst", "api/gwinferno.preprocess.conversions.chieff_from_q_component_spins.rst", "api/gwinferno.preprocess.conversions.chip_from_q_component_spins.rst", "api/gwinferno.preprocess.conversions.mu_var_from_alpha_beta.rst", "api/gwinferno.preprocess.data_collection.rst", "api/gwinferno.preprocess.data_collection.apply_priors.rst", "api/gwinferno.preprocess.data_collection.convert_component_spin_posteriors_to_chieff.rst", "api/gwinferno.preprocess.data_collection.dl_2_prior_on_z.rst", "api/gwinferno.preprocess.data_collection.downsample_posteriors_to_consistent_nsamps.rst", "api/gwinferno.preprocess.data_collection.load_catalog_from_metadata.rst", "api/gwinferno.preprocess.data_collection.load_posterior_samples.rst", "api/gwinferno.preprocess.data_collection.p_m1src_q_z_lal_pe_prior.rst", "api/gwinferno.preprocess.data_collection.preprocess_data.rst", "api/gwinferno.preprocess.data_collection.setup_posterior_samples_and_injections.rst", "api/gwinferno.preprocess.priors.rst", "api/gwinferno.preprocess.priors.Di.rst", "api/gwinferno.preprocess.priors.chi_effective_prior_from_aligned_spins.rst", "api/gwinferno.preprocess.priors.chi_effective_prior_from_isotropic_spins.rst", "api/gwinferno.preprocess.priors.chi_p_prior_from_isotropic_spins.rst", "api/gwinferno.preprocess.priors.chi_p_prior_given_chi_eff_q.rst", "api/gwinferno.preprocess.priors.joint_prior_from_isotropic_spins.rst", "api/gwinferno.preprocess.selection.rst", "api/gwinferno.preprocess.selection.convert_component_spin_injections_to_chieff.rst", "api/gwinferno.preprocess.selection.get_injection_dict.rst", "api/gwinferno.preprocess.selection.get_semianlytic_injection_dict.rst", "api/gwinferno.preprocess.selection.load_injections.rst", "api/gwinferno.preprocess.selection.resample_injections.rst", "example_usage.rst", "index.rst", "installation.rst"], "titles": ["Saving Data in Popsummary Standard Output", "Using Basis Splines in Models", "gwinferno.cosmology", "gwinferno.cosmology.Cosmology", "gwinferno.distributions", "gwinferno.distributions.betadist", "gwinferno.distributions.ln_beta_fct", "gwinferno.distributions.log_logistic_unit", "gwinferno.distributions.logistic_unit", "gwinferno.distributions.powerlaw_logit_pdf", "gwinferno.distributions.powerlaw_pdf", "gwinferno.distributions.truncnorm_pdf", "gwinferno.interpolation", "gwinferno.interpolation.BSpline", "gwinferno.interpolation.BasisSpline", "gwinferno.interpolation.LogXBSpline", "gwinferno.interpolation.LogXLogYBSpline", "gwinferno.interpolation.LogYBSpline", "gwinferno.interpolation.NaturalCubicUnivariateSpline", "gwinferno.interpolation.RectBivariateBasisSpline", "gwinferno.models", "gwinferno.models.bsplines", "gwinferno.models.bsplines.joint", "gwinferno.models.bsplines.joint.BSplineJointMassRatioChiEffective", "gwinferno.models.bsplines.joint.Base2DBSplineModel", "gwinferno.models.bsplines.separable", "gwinferno.models.bsplines.separable.BSplineEffectiveSpinDims", "gwinferno.models.bsplines.separable.BSplineIIDComponentMasses", "gwinferno.models.bsplines.separable.BSplineIIDSpinMagnitudes", "gwinferno.models.bsplines.separable.BSplineIIDSpinTilts", "gwinferno.models.bsplines.separable.BSplineIndependentComponentMasses", "gwinferno.models.bsplines.separable.BSplineIndependentSpinMagnitudes", "gwinferno.models.bsplines.separable.BSplineIndependentSpinTilts", "gwinferno.models.bsplines.separable.BSplinePrimaryBSplineRatio", "gwinferno.models.bsplines.separable.BSplinePrimaryPowerlawRatio", "gwinferno.models.bsplines.separable.PLPeakPrimaryBSplineRatio", "gwinferno.models.bsplines.single", "gwinferno.models.bsplines.single.BSplineChiEffective", "gwinferno.models.bsplines.single.BSplineChiPrecess", "gwinferno.models.bsplines.single.BSplineMass", "gwinferno.models.bsplines.single.BSplineRatio", "gwinferno.models.bsplines.single.BSplineRedshift", "gwinferno.models.bsplines.single.BSplineSpinMagnitude", "gwinferno.models.bsplines.single.BSplineSpinTilt", "gwinferno.models.bsplines.single.BSplineSymmetricChiEffective", "gwinferno.models.bsplines.single.Base1DBSplineModel", "gwinferno.models.bsplines.smoothing", "gwinferno.models.bsplines.smoothing.apply_difference_prior", "gwinferno.models.bsplines.smoothing.apply_twod_difference_prior", "gwinferno.models.bsplines.smoothing.get_adaptive_Lambda", "gwinferno.models.bsplines.smoothing.mixture_smoothing_parameter", "gwinferno.models.gwpopulation", "gwinferno.models.gwpopulation.gwpopulation", "gwinferno.models.gwpopulation.gwpopulation.PowerlawRedshiftModel", "gwinferno.models.gwpopulation.gwpopulation.beta_spin_magnitude", "gwinferno.models.gwpopulation.gwpopulation.iid_spin_magnitude", "gwinferno.models.gwpopulation.gwpopulation.iid_spin_tilt", "gwinferno.models.gwpopulation.gwpopulation.independent_spin_magnitude", "gwinferno.models.gwpopulation.gwpopulation.independent_spin_tilt", "gwinferno.models.gwpopulation.gwpopulation.mixture_isoalign_spin_tilt", "gwinferno.models.gwpopulation.gwpopulation.plpeak_primary_pdf", "gwinferno.models.gwpopulation.gwpopulation.plpeak_primary_ratio_pdf", "gwinferno.models.gwpopulation.gwpopulation.powerlaw_primary_ratio_falloff_pdf", "gwinferno.models.gwpopulation.gwpopulation.powerlaw_primary_ratio_pdf", "gwinferno.models.mass_gap", "gwinferno.models.mass_gap.logistic_unit", "gwinferno.models.mass_gap.plpeak_gap_primary_ratio_pdf", "gwinferno.models.mass_gap.powerlaw_gap_cutoff_primary_ratio_pdf", "gwinferno.models.mass_gap.powerlaw_gap_logit_ben_primary_pdf", "gwinferno.models.mass_gap.powerlaw_gap_logit_primary_pdf", "gwinferno.models.mass_gap.powerlaw_gap_primary_ratio_pdf", "gwinferno.models.spline_perturbation", "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio", "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio", "gwinferno.models.spline_perturbation.PowerlawSplineRedshiftModel", "gwinferno.numpyro_distributions", "gwinferno.numpyro_distributions.BSplineDistribution", "gwinferno.numpyro_distributions.Cosine", "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw", "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw", "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition", "gwinferno.numpyro_distributions.PSplineCoeficientPrior", "gwinferno.numpyro_distributions.Powerlaw", "gwinferno.numpyro_distributions.PowerlawRedshift", "gwinferno.numpyro_distributions.Sine", "gwinferno.numpyro_distributions.cumtrapz", "gwinferno.parameter_estimation", "gwinferno.parameter_estimation.detectors", "gwinferno.parameter_estimation.detectors.Detector", "gwinferno.parameter_estimation.detectors.H1", "gwinferno.parameter_estimation.detectors.L1", "gwinferno.parameter_estimation.detectors.V1", "gwinferno.parameter_estimation.detectors.construct_arm", "gwinferno.parameter_estimation.detectors.get_detector_tensor", "gwinferno.parameter_estimation.detectors.get_geocentric_vertex", "gwinferno.parameter_estimation.detectors.make_get_polarization_tensor", "gwinferno.parameter_estimation.likelihood", "gwinferno.parameter_estimation.likelihood.inner_product", "gwinferno.parameter_estimation.likelihood.log_likelihood", "gwinferno.parameter_estimation.likelihood.log_likelihood_det", "gwinferno.parameter_estimation.likelihood.matched_filter_snr", "gwinferno.parameter_estimation.likelihood.noise_log_likelihood", "gwinferno.parameter_estimation.likelihood.noise_log_likelihood_det", "gwinferno.parameter_estimation.likelihood.noise_weighted_inner_product", "gwinferno.parameter_estimation.likelihood.optimal_snr_squared", "gwinferno.pipeline", "gwinferno.pipeline.analysis", "gwinferno.pipeline.analysis.TotalVTCalculator", "gwinferno.pipeline.analysis.construct_hierarchical_model", "gwinferno.pipeline.analysis.find_map", "gwinferno.pipeline.analysis.hierarchical_likelihood", "gwinferno.pipeline.analysis.hierarchical_likelihood_in_log", "gwinferno.pipeline.analysis.logmu_logneff_injections_log", "gwinferno.pipeline.analysis.mu_neff_injections", "gwinferno.pipeline.analysis.per_event_log_bayes_factor_log_neffs", "gwinferno.pipeline.analysis.per_event_log_bayes_factor_log_neffs_log", "gwinferno.pipeline.parser", "gwinferno.pipeline.parser.ConfigReader", "gwinferno.pipeline.parser.PopMixtureModel", "gwinferno.pipeline.parser.PopModel", "gwinferno.pipeline.parser.PopPrior", "gwinferno.pipeline.parser.load_base_parser", "gwinferno.pipeline.parser.load_dist_from_string", "gwinferno.pipeline.parser.load_model_from_python_file", "gwinferno.postprocess", "gwinferno.postprocess.calculate_ppds", "gwinferno.postprocess.calculate_ppds.calculate_chieff_bspline_ppds", "gwinferno.postprocess.calculate_ppds.calculate_iid_spin_bspline_ppds", "gwinferno.postprocess.calculate_ppds.calculate_iid_spin_bspline_weights", "gwinferno.postprocess.calculate_ppds.calculate_ind_spin_bspline_ppds", "gwinferno.postprocess.calculate_ppds.calculate_m1_bspline_q_powerlaw_ppds", "gwinferno.postprocess.calculate_ppds.calculate_m1m2_bspline_ppds", "gwinferno.postprocess.calculate_ppds.calculate_m1q_bspline_ppds", "gwinferno.postprocess.calculate_ppds.calculate_m1q_bspline_weights", "gwinferno.postprocess.calculate_ppds.calculate_m1q_ppds_plbspline_model", "gwinferno.postprocess.calculate_ppds.calculate_powerbspline_rate_of_z_ppds", "gwinferno.postprocess.calculate_ppds.calculate_powerlaw_rate_of_z_ppds", "gwinferno.postprocess.plotting", "gwinferno.postprocess.plotting.plot_chieff_dist", "gwinferno.postprocess.plotting.plot_iid_spin_dist", "gwinferno.postprocess.plotting.plot_ind_spin_dist", "gwinferno.postprocess.plotting.plot_m1_vs_z_ppc", "gwinferno.postprocess.plotting.plot_mass_dist", "gwinferno.postprocess.plotting.plot_ppc_brontosaurus", "gwinferno.postprocess.plotting.plot_rofz", "gwinferno.preprocess", "gwinferno.preprocess.conversions", "gwinferno.preprocess.conversions.alpha_beta_from_mu_var", "gwinferno.preprocess.conversions.chieff_from_q_component_spins", "gwinferno.preprocess.conversions.chip_from_q_component_spins", "gwinferno.preprocess.conversions.mu_var_from_alpha_beta", "gwinferno.preprocess.data_collection", "gwinferno.preprocess.data_collection.apply_priors", "gwinferno.preprocess.data_collection.convert_component_spin_posteriors_to_chieff", "gwinferno.preprocess.data_collection.dl_2_prior_on_z", "gwinferno.preprocess.data_collection.downsample_posteriors_to_consistent_nsamps", "gwinferno.preprocess.data_collection.load_catalog_from_metadata", "gwinferno.preprocess.data_collection.load_posterior_samples", "gwinferno.preprocess.data_collection.p_m1src_q_z_lal_pe_prior", "gwinferno.preprocess.data_collection.preprocess_data", "gwinferno.preprocess.data_collection.setup_posterior_samples_and_injections", "gwinferno.preprocess.priors", "gwinferno.preprocess.priors.Di", "gwinferno.preprocess.priors.chi_effective_prior_from_aligned_spins", "gwinferno.preprocess.priors.chi_effective_prior_from_isotropic_spins", "gwinferno.preprocess.priors.chi_p_prior_from_isotropic_spins", "gwinferno.preprocess.priors.chi_p_prior_given_chi_eff_q", "gwinferno.preprocess.priors.joint_prior_from_isotropic_spins", "gwinferno.preprocess.selection", "gwinferno.preprocess.selection.convert_component_spin_injections_to_chieff", "gwinferno.preprocess.selection.get_injection_dict", "gwinferno.preprocess.selection.get_semianlytic_injection_dict", "gwinferno.preprocess.selection.load_injections", "gwinferno.preprocess.selection.resample_injections", "Quick Start", "Welcome to GWInferno\u2019s documentation!", "Installation"], "terms": {"after": 0, "us": [0, 2, 3, 12, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 109, 110, 111, 137, 160, 161, 166, 167, 175, 176], "gwinferno": [0, 174, 176], "you": [0, 72, 174], "mai": [0, 174], "wish": [0, 72, 163, 164, 165], "your": [0, 176], "result": [0, 109, 168], "form": [0, 13, 14, 15, 16, 17, 19], "easi": 0, "other": [0, 174, 175], "read": [0, 168], "access": [0, 176], "thi": [0, 27, 30, 33, 34, 35, 39, 40, 41, 76, 77, 78, 79, 80, 81, 82, 83, 84, 174, 175], "can": [0, 174], "done": [0, 110, 111], "quickli": 0, "gwifnerno": 0, "postprocess": 0, "popsummarywriteout": 0, "befor": [0, 110, 111], "manner": 0, "make": [0, 175], "sure": 0, "posterior": [0, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 110, 111, 125, 134, 151, 152, 155, 160, 166, 167, 174], "sampl": [0, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 110, 111, 112, 113, 114, 115, 160, 166, 167, 174], "ar": [0, 3, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 76, 77, 78, 79, 80, 81, 82, 83, 84, 160, 174], "locat": 0, "dictionari": [0, 72, 73, 160], "easili": 0, "get_sampl": 0, "code": 0, "snippet": 0, "below": [0, 27, 30, 33, 34, 35, 39, 40], "kernel": [0, 174], "nut": [0, 174], "model": [0, 109, 110, 111, 118, 119, 126, 127, 128, 129, 135, 136, 174, 175], "mcmc": 0, "rng_kei": [0, 76, 77, 78, 79, 80, 81, 82, 83, 84, 109, 173], "random": [0, 76, 77, 78, 79, 80, 81, 82, 83, 84, 109, 110], "prngkei": [0, 76, 77, 78, 79, 80, 81, 82, 83, 84, 109, 110], "5": [0, 49, 50, 110, 111, 131, 134, 142, 174], "run": [0, 105, 109, 174], "rate": [0, 107, 109, 110, 111, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "frac": 0, "dn": 0, "d": [0, 13, 14, 15, 16, 17, 76, 77, 78, 79, 80, 81, 82, 83, 84], "theta": [0, 9, 11, 29, 32, 43], "popul": [0, 20, 21, 22, 25, 36, 45, 51, 64, 71, 106, 110, 125, 174], "pdf": [0, 4, 5, 9, 10, 34, 35], "p": [0, 9, 11, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 46, 110, 138, 163, 164, 165, 166, 167], "lambda": [0, 174], "should": [0, 76, 77, 78, 79, 80, 81, 82, 83, 84], "also": [0, 114, 115], "along": [0, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 112, 113, 174], "whatev": 0, "grid": [0, 72, 76, 80, 83, 125], "thei": [0, 28, 29, 31, 32, 174], "were": 0, "calcul": [0, 2, 4, 12, 46, 87, 96, 106, 107, 110, 111, 112, 113, 114, 115, 125, 148, 149, 166, 167, 174], "over": [0, 76, 77, 78, 79, 80, 81, 82, 83, 84, 110, 111, 112, 113, 114, 115, 174], "In": [0, 107], "exampl": [0, 76, 77, 78, 79, 80, 81, 82, 83, 84, 174], "alreadi": 0, "h5": [0, 160], "file": [0, 116, 160, 174], "deepdish": 0, "packag": [0, 149], "load": 0, "from": [0, 18, 21, 22, 25, 36, 48, 76, 77, 78, 79, 80, 81, 82, 83, 84, 110, 111, 112, 113, 114, 115, 148, 149, 166, 167, 170, 174], "import": [0, 174], "path_to_rate_fil": 0, "path": [0, 123, 160, 174], "path_to_posterior_fil": 0, "dd": 0, "io": 0, "print": 0, "ppd": 0, "name": [0, 76, 77, 78, 79, 80, 81, 82, 83, 84, 160], "write": [0, 174], "file_path": 0, "metadata": 0, "model_nam": 0, "power": [0, 9, 10, 72, 73, 74, 107], "law": [0, 9, 10, 72, 73, 74, 107], "primari": [0, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 72, 73, 110, 111, 148, 149, 174], "mass": [0, 9, 26, 27, 30, 33, 34, 35, 39, 40, 64, 72, 73, 110, 111, 148, 149, 163, 164, 165, 166, 167, 174], "ratio": [0, 26, 27, 30, 33, 34, 35, 40, 72, 73, 148, 149, 163, 164, 165, 166, 167], "hyperparamet": [0, 174], "alpha": [0, 5, 6, 9, 10, 54, 60, 61, 62, 63, 66, 67, 68, 69, 70, 72, 73, 78, 79, 82, 147, 150, 174], "beta": [0, 5, 6, 27, 30, 34, 54, 61, 62, 63, 66, 67, 68, 69, 70, 72, 73, 147, 150, 174], "event_param": 0, "mass_1": [0, 174], "mass_ratio": [0, 174], "event_nam": 0, "gw150914": 0, "gw151012": 0, "gw151226": 0, "gw170104": 0, "gw170608": 0, "hyperparameter_descript": 0, "slope": [0, 27, 30], "powerlaw": [0, 9, 10, 27, 30, 34, 35, 72, 174], "distribut": [0, 3, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 125, 147, 150, 174], "waveform": 0, "irphenomv2": 0, "specifi": [0, 3, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 160, 176], "dure": [0, 160], "initi": [0, 174], "step": 0, "ad": [0, 76, 77, 78, 79, 80, 81, 82, 83, 84], "later": 0, "popsum": 0, "set_metadata": 0, "see": [0, 6, 110, 111, 176], "sourc": [0, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175], "more": [0, 174, 176], "info": 0, "how": [0, 174], "do": [0, 8], "event": [0, 76, 77, 78, 79, 80, 81, 82, 83, 84, 110, 111, 114, 115, 160, 174], "event_waveform": 0, "primary_mass_r": 0, "mass_ratio_r": 0, "primary_spin_magnitide_r": 0, "overwrit": 0, "true": [0, 14, 15, 16, 17, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 76, 77, 78, 79, 80, 81, 82, 83, 84, 108, 110, 111, 152, 157, 160, 174], "flag": [0, 13, 14, 15, 16, 17, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 110, 111], "hypersampl": 0, "fals": [0, 3, 11, 13, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 76, 77, 78, 79, 80, 81, 82, 83, 84, 108, 110, 111, 143, 144, 152, 153, 157, 158, 159, 160, 169, 170, 172, 174], "caus": 0, "fail": 0, "save_hypersampl": 0, "save_reweighed_event_and_injection_sampl": 0, "save_rates_on_grid": 0, "modul": [2, 4, 12, 20, 21, 22, 25, 36, 46, 51, 64, 71, 75, 86, 87, 96, 105, 106, 116, 124, 125, 137, 145, 146, 149, 151, 161, 168], "basic": [2, 4], "jax": [2, 4, 12, 18, 51, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 96, 109, 110, 111, 112, 113, 114, 115, 160, 174, 175, 176], "class": [2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 52, 53, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 106, 107, 116, 117, 118, 119, 120, 130, 131], "ho": 3, "omega_matt": 3, "omega_radi": 3, "omega_lambda": 3, "distance_unit": 3, "mpc": 3, "initial_z_integ": 3, "2": [3, 27, 30, 34, 39, 41, 73, 81, 130, 131, 162, 174], "3": [3, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 72, 84, 107, 110, 111, 130, 132, 133, 134, 143, 174, 176], "base": [3, 13, 14, 15, 16, 17, 18, 19, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 107, 117, 118, 119, 120, 170], "object": [3, 14, 18, 19, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 53, 72, 73, 88, 107, 110, 111, 117, 119, 120], "implement": [3, 18], "specif": [3, 176], "cosmolog": 3, "comput": [3, 13, 14, 15, 16, 17, 41, 47, 48, 76, 77, 78, 79, 80, 81, 82, 83, 84, 163, 164, 165], "note": [3, 76, 77, 78, 79, 80, 81, 82, 83, 84, 162], "we": [3, 7, 8, 162, 163, 164, 165, 174, 175, 176], "work": 3, "cg": 3, "unit": [3, 7, 8, 9, 107], "throughout": 3, "so": 3, "must": [3, 174], "": [3, 18, 72, 73, 110, 111, 162, 174], "1": [3, 5, 8, 13, 14, 15, 16, 17, 19, 24, 45, 47, 48, 54, 55, 57, 76, 77, 78, 79, 80, 81, 82, 83, 84, 107, 110, 126, 127, 128, 129, 130, 131, 132, 141, 143, 147, 148, 149, 150, 163, 164, 165, 170, 172, 174], "distanc": 3, "cm": 3, "__init__": [3, 13, 14, 15, 16, 17, 18, 19, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 107, 117, 118, 119, 120, 149], "__call__": [3, 13, 14, 15, 16, 17, 18, 19, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 107, 117, 118, 119, 120], "arg": [3, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 147, 148, 149, 150, 174], "kwarg": [3, 15, 16, 17, 19, 23, 24, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 117, 118, 119, 120, 156, 173], "call": [3, 18, 19, 23, 24, 53, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 110, 111, 117, 118, 119, 120, 166], "self": [3, 18, 19, 23, 24, 53, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 117, 118, 119, 120], "function": [3, 4, 18, 19, 23, 24, 46, 52, 53, 64, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 96, 106, 110, 111, 116, 117, 118, 119, 120, 125, 137, 146, 151, 161, 162, 163, 164, 165, 166, 167, 168, 170, 174], "method": [3, 13, 14, 15, 16, 17, 18, 19, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 107, 117, 118, 119, 120], "attribut": [3, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91], "dl2z": 3, "dl": 3, "dz": 3, "0": [3, 5, 10, 13, 14, 15, 16, 17, 19, 24, 27, 33, 40, 45, 48, 49, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 107, 109, 110, 111, 127, 128, 129, 130, 131, 132, 133, 142, 148, 149, 174], "001": 3, "return": [3, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 107, 109, 112, 113, 114, 115, 147, 148, 149, 150, 160, 162, 163, 164, 165, 166, 167], "redshift": [3, 41, 74, 107, 110, 111, 174], "each": [3, 76, 77, 78, 79, 80, 81, 82, 83, 84, 110, 111, 160, 174], "ddcdz": 3, "z": [3, 41, 53, 74, 107, 144, 154, 162], "c": [3, 72, 73, 74, 76, 176], "e": [3, 13, 14, 15, 16, 17, 19, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 96, 125, 174], "dvcdz": 3, "dc": 3, "none": [3, 13, 14, 15, 16, 17, 18, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 110, 111, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 142, 143, 144, 157, 160, 170, 171, 172], "dvc": 3, "extend": 3, "max_dl": 3, "inf": 3, "max_dc": 3, "max_z": 3, "max_vc": 3, "integr": [3, 107, 110, 111, 112, 113, 114, 115], "solv": 3, "measur": 3, "logdvcdz": 3, "ln": 3, "when": [3, 76, 77, 78, 79, 80, 81, 82, 83, 84, 174], "construct": [3, 13, 14, 15, 16, 17, 19, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "probabl": [3, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 111], "without": [3, 76, 77, 78, 79, 80, 81, 82, 83, 84], "overflow": 3, "error": 3, "z2dl": 3, "luminos": 3, "z2dc": 3, "z2e": 3, "sqrt": 3, "omegalambda": 3, "omegakappa": 3, "omegamatt": 3, "omegaradi": 3, "4": [3, 8, 13, 14, 15, 16, 17, 19, 48, 72, 73, 126, 127, 128, 129, 141], "xx": [5, 9, 10, 11, 24, 45], "scale": [5, 8, 9, 174], "floor": [5, 10], "evalu": [5, 6, 9, 10, 13, 14, 15, 16, 17, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 76, 77, 78, 79, 80, 81, 82, 83, 84, 110, 111], "option": [5, 8, 10, 13, 14, 15, 16, 17, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 72, 73, 74, 107, 109, 110, 111, 147, 150], "max": [5, 9, 11], "vale": 5, "array_lik": [5, 7, 8, 9, 10, 13, 14, 15, 16, 17, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 147, 148, 149, 150], "point": [5, 9, 10], "float": [5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 19, 27, 30, 33, 34, 35, 39, 40, 41, 47, 48, 72, 73, 74, 107, 109, 110, 111], "shape": [5, 6, 13, 14, 15, 16, 17, 19, 76, 77, 78, 79, 80, 81, 82, 83, 84, 110, 147, 150, 174], "paramet": [5, 6, 26, 47, 48, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 109, 110, 111, 146, 147, 150, 160, 174], "maximum": [5, 27, 30, 33, 34, 39, 41, 72, 73, 76, 77, 78, 79, 80, 82, 83, 84, 107, 110, 111, 147, 150, 163, 164, 165, 174], "valu": [5, 7, 8, 13, 14, 15, 16, 17, 19, 27, 30, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 76, 77, 78, 79, 80, 81, 82, 83, 84, 163, 164, 165, 166, 167], "support": [5, 76, 77, 78, 79, 80, 81, 82, 83, 84, 174], "default": [5, 8, 10, 13, 14, 15, 16, 17, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 72, 73, 74, 107, 109, 110, 111, 147, 150], "lower": [5, 10], "bound": [5, 9, 10], "log": [6, 7, 11, 15, 16, 17, 47, 48, 76, 77, 78, 79, 80, 81, 82, 83, 84, 111, 112, 114, 115, 174], "fct": 6, "x": [7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 37, 38, 39, 40, 41, 42, 43, 44, 45, 65, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 128, 138, 163, 164, 165], "x0": [7, 8], "soft": [7, 8, 9], "truncat": [7, 8, 9, 10, 27, 30, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 174], "logist": [7, 8, 9], "input": [7, 8, 13, 14, 15, 16, 17, 19, 76, 77, 78, 79, 80, 81, 82, 83, 84, 147, 150, 151, 162, 163, 164, 165, 166, 167, 174], "arrai": [7, 8, 13, 14, 15, 16, 17, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 110, 111, 112, 113, 114, 115, 147, 150, 160, 162, 163, 164, 165, 167], "want": [7, 8, 174], "appli": [7, 8], "sgn": 8, "sc": 8, "int": [8, 13, 14, 15, 16, 17, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 107, 109, 110, 111, 112, 113], "which": [8, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 76, 77, 78, 79, 80, 81, 82, 83, 84, 163, 164, 165], "side": [8, 76, 77, 78, 79, 80, 81, 82, 83, 84], "right": 8, "left": [8, 76, 77, 78, 79, 80, 81, 82, 83, 84], "where": [8, 160, 174], "higher": 8, "i": [8, 13, 14, 15, 16, 17, 19, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 76, 77, 78, 79, 80, 81, 82, 83, 84, 96, 110, 125, 174, 175], "sharper": 8, "high": [9, 10, 11, 82, 174], "fall_off": [9, 62, 69], "propto": [9, 11], "lpha": 9, "x_": [9, 11], "mathrm": [9, 11], "min": [9, 11], "index": [9, 10, 72, 73, 160], "end": [9, 10], "low": [10, 11, 82, 174], "sharp": 10, "mu": [11, 113, 147, 150], "sig": 11, "mathcal": 11, "n": [11, 13, 14, 15, 16, 17, 81, 176], "sigma": 11, "n_df": [13, 14, 15, 16, 17], "knot": [13, 14, 15, 16, 17, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 72, 73, 74], "interior_knot": [13, 14, 15, 16, 17], "xrang": [13, 14, 15, 16, 17, 19, 24, 45], "k": [13, 14, 15, 16, 17, 19, 72, 73, 126, 127, 128, 129], "normal": [13, 14, 15, 16, 17, 19, 41, 72, 73, 74, 110, 111, 174], "basissplin": 13, "basi": [13, 14, 15, 16, 17, 19, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 72, 74, 130, 131, 175], "spline": [13, 14, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 71, 72, 73, 74, 175], "b": [13, 15, 16, 17, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 72, 73, 74], "number": [13, 14, 15, 16, 17, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 109, 110, 111, 112, 113, 160, 166, 167, 174], "degre": [13, 14, 15, 16, 17, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49], "freedom": [13, 14, 15, 16, 17, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45], "non": [13, 14, 15, 16, 17, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 76, 77, 78, 79, 80, 81, 82, 83, 84], "uniform": [13, 14, 15, 16, 17, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 107, 163, 164, 165, 174], "place": [13, 14, 15, 16, 17, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45], "prefer": [13, 14, 15, 16, 17, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45], "interior": [13, 14, 15, 16, 17], "tupl": [13, 14, 15, 16, 17, 19, 45, 76, 77, 78, 79, 80, 81, 82, 83, 84, 110, 147, 150], "domain": [13, 14, 15, 16, 17, 19, 37, 38, 39, 40, 41, 42, 43, 44, 45], "order": [13, 14, 15, 16, 17, 19, 47, 48], "cubcic": [13, 14, 15, 16, 17, 19, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45], "cubic": [13, 14, 15, 16, 17, 18, 19, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45], "bool": [13, 14, 15, 16, 17, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 76, 77, 78, 79, 80, 81, 82, 83, 84, 110, 111, 160], "whether": [13, 14, 15, 16, 17, 19], "numer": [13, 14, 15, 16, 17, 19, 166, 167], "coef": [13, 14, 15, 16, 17, 19, 23, 24, 27, 28, 29, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 126, 127, 128, 129], "evalul": [13, 14, 15, 16, 17], "given": [13, 14, 15, 16, 17, 19, 37, 38, 39, 40, 41, 42, 43, 44, 45, 76, 77, 78, 79, 80, 81, 82, 83, 84, 109, 147, 148, 149, 150, 166, 167, 174], "coeffici": [13, 14, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 72, 73, 74], "compon": [13, 14, 15, 16, 17, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 110, 111, 118, 163, 164, 165, 166, 167, 174], "The": [13, 14, 15, 16, 17, 19, 37, 38, 39, 40, 41, 42, 43, 44, 45, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 174], "linear": [13, 14, 15, 16, 17, 19, 37, 38, 39, 40, 41, 42, 43, 44, 45], "combin": [13, 14, 15, 16, 17, 19, 37, 38, 39, 40, 41, 42, 43, 44, 45], "design": [13, 14, 15, 16, 17, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45], "matrix": [13, 14, 15, 16, 17, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45], "eval": [13, 14, 15, 16, 17], "get_coeffici": [13, 14, 15, 16, 17], "y": [13, 14, 15, 16, 17, 18, 19, 85], "data": [13, 14, 15, 16, 17, 76, 77, 78, 79, 80, 81, 82, 83, 84, 110, 111, 151, 160, 174, 175], "norm": [13, 14, 15, 16, 17, 41, 174], "factor": [13, 14, 15, 16, 17, 19], "project": [13, 14, 15, 16, 17, 19, 37, 38, 39, 40, 41, 42, 43, 44, 45, 175], "onto": [13, 14, 15, 16, 17, 19, 37, 38, 39, 40, 41, 42, 43, 44, 45], "set": [13, 14, 15, 16, 17, 19, 110, 160, 167, 176], "m": [14, 39, 72, 133, 142, 176], "01": [15, 16, 109], "bspline": [15, 17, 19, 72], "space": [15, 16, 17], "logybsplin": [16, 33, 34, 41, 45], "rang": [16, 17], "minim": 18, "port": 18, "scipi": [18, 162], "univariatesplin": 18, "restrict": 18, "onli": [18, 76, 77, 78, 79, 80, 81, 82, 83, 84, 176], "natur": 18, "boundari": 18, "condit": [18, 163, 164, 165, 166, 167], "jax_cosmo": 18, "xdf": 19, "ydf": 19, "yrang": [19, 24], "kx": 19, "ky": 19, "xbasi": 19, "ybasi": 19, "2d": [19, 22, 25, 48], "bivari": 19, "rectangular": 19, "direct": 19, "choic": 19, "norm_2d": 19, "store": [20, 21, 22, 25, 36, 46, 51, 64, 71, 106, 116, 137, 146, 151, 160, 161, 168], "defin": [20, 75, 148, 149, 162, 163, 164, 165, 174], "chiknot": 23, "qknot": [23, 73, 132, 133], "chieff": [23, 26, 37, 44, 143], "q": [23, 26, 27, 30, 33, 34, 35, 40, 61, 62, 63, 66, 67, 68, 69, 70, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 133, 142, 148, 149, 163, 164, 165, 166, 167], "chieff_inj": [23, 26, 37, 44], "q_inj": [23, 33, 35, 40], "base2dbsplinemodel": 23, "ndim": [23, 24], "xnknot": 24, "ynknot": 24, "yy": 24, "xx_inj": [24, 45], "yy_inj": 24, "interpol": [24, 33, 34, 41, 45, 72, 74, 130, 131, 166, 167], "rectbivariatebasissplin": 24, "seper": 25, "independ": [25, 27, 76, 77, 78, 79, 80, 81, 82, 83, 84], "n_splines_": 26, "n_splines_p": 26, "chip": [26, 38, 153, 169], "chip_inj": [26, 38], "knots": 26, "knotsp": 26, "degree_": 26, "degree_p": 26, "chi": [26, 37, 44], "effect": [26, 37, 38, 44, 112, 113, 114, 115, 148, 149, 161, 166, 167], "precess": [26, 38, 149, 166, 167], "chi_p": [26, 38, 160, 165], "n_splines1": [26, 30, 31, 32], "n_splines2": [26, 30, 31, 32], "secondari": [26, 27, 28, 29, 30, 31, 32, 33, 72, 110, 111, 148, 149], "pe": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 110, 111, 174], "evalut": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45], "inject": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 72, 73, 74, 110, 111, 112, 113, 151, 160, 168, 174], "ecoef": 26, "pcoef": [26, 30, 31, 32], "pe_sampl": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45], "joint": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "densiti": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 76, 77, 78, 79, 80, 81, 82, 83, 84], "type": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84], "being": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45], "m1": [26, 27, 30, 33, 34, 35, 60, 61, 62, 63, 66, 67, 68, 69, 70, 72, 73], "m2": [26, 27, 30], "chi_eff": [26, 160, 163, 164], "If": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 174, 175], "n_spline": [27, 28, 29, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45], "m1_inj": [27, 30, 33, 34, 35], "m2_inj": [27, 30], "mmin": [27, 34, 35, 39, 60, 61, 62, 63, 66, 67, 68, 69, 70, 72, 73, 130, 131, 132, 133, 134, 142, 174], "mmax": [27, 33, 34, 39, 60, 61, 62, 63, 66, 67, 68, 69, 70, 72, 73, 110, 111, 130, 131, 132, 133, 134, 141, 142, 143, 174], "100": [27, 30, 33, 34, 39, 72, 73, 109, 110, 111, 130, 131, 132, 133, 134, 141, 142, 143, 174], "assum": [27, 28, 29, 30, 31, 32, 76, 77, 78, 79, 80, 81, 82, 83, 84, 174], "two": [27, 30, 174], "binari": [27, 28, 29, 30, 31, 32, 37, 38, 39, 40, 42, 43, 44, 174], "ident": [27, 28, 29], "iid": [27, 28, 29, 76, 77, 78, 79, 80, 81, 82, 83, 84, 174], "minimum": [27, 30, 33, 34, 35, 39, 40, 72, 73, 76, 77, 78, 79, 80, 82, 83, 84, 174], "abov": [27, 30, 33, 34, 39, 41], "a1": [28, 31, 55, 57, 148, 149], "a2": [28, 31, 55, 57, 148, 149], "a1_inj": [28, 31], "a2_inj": [28, 31], "spin": [28, 29, 31, 42, 147, 148, 149, 150, 152, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 170, 172, 174], "magnitud": [28, 29, 31, 42, 148, 149, 160, 163, 164, 165, 166, 167, 174], "both": [28, 29, 31, 32], "indipend": [28, 29, 31, 32], "magntiud": [28, 31, 42], "ct1": [29, 32, 56, 58, 148, 149], "ct2": [29, 32, 56, 58, 148, 149], "ct1_inj": [29, 32], "ct2_inj": [29, 32], "cosin": [29, 32, 43], "tilt": [29, 32, 43, 139, 140, 148, 149, 174], "co": [29, 32, 41, 43, 74, 107, 148, 149], "knots1": [30, 31, 32], "knots2": [30, 31, 32], "mmin1": 30, "mmax1": 30, "mmin2": 30, "mmax2": 30, "degree1": [30, 31, 32], "degree2": [30, 31, 32], "idepend": 30, "scoef": [30, 31, 32, 129], "n_splines_m": 33, "n_splines_q": 33, "knots_m": 33, "knots_q": 33, "degree_m": 33, "degree_q": 33, "m1min": [33, 110, 111, 141, 143, 174], "m2min": [33, 72, 110, 111, 134, 174], "basis_m": 33, "basis_q": 33, "q1": 33, "q1_inj": 33, "ex": [33, 34, 41, 45], "mcoef": [33, 130, 131, 132, 133], "qcoef": [33, 132, 133], "gaussian": 35, "peak": [35, 174], "1d": [36, 174], "base1dbsplinemodel": [37, 38, 39, 40, 41, 42, 43, 44], "either": [37, 38, 39, 40, 41, 42, 43, 44, 45, 174], "eval_splin": [37, 38, 39, 40, 41, 42, 43, 44, 45], "inj_pdf": [37, 38, 39, 40, 41, 42, 43, 44, 45], "pe_pdf": [37, 38, 39, 40, 41, 42, 43, 44, 45], "truncate_dmat": [37, 38, 39, 40, 41, 42, 43, 44, 45], "dmat": [37, 38, 39, 40, 41, 42, 43, 44, 45], "ensur": [37, 38, 39, 40, 41, 42, 43, 44, 45, 110, 111], "outsid": [37, 38, 39, 40, 41, 42, 43, 44, 45], "interv": [37, 38, 39, 40, 41, 42, 43, 44, 45], "xmin": [37, 38, 39, 40, 41, 42, 43, 44, 45, 126, 127, 128, 129], "xmax": [37, 38, 39, 40, 41, 42, 43, 44, 45, 126, 127, 128, 129], "an": [38, 76, 77, 78, 79, 80, 81, 82, 83, 84, 160, 176], "m_inj": 39, "qmin": 40, "z_inj": [41, 53, 74], "dvdc": 41, "dvdc_inj": 41, "zmax": [41, 107, 141, 143], "differenti": [41, 74], "move": [41, 74, 107], "volum": [41, 74, 107], "a_inj": 42, "ct": [43, 59], "ct_inj": 43, "symmetr": 44, "about": 44, "zero": 44, "infer": [45, 76, 77, 78, 79, 80, 81, 82, 83, 84, 106, 109, 160, 174], "prior": [46, 47, 48, 138, 139, 140, 142, 144, 174], "inv_var": [47, 81], "differ": [47, 48, 174], "penalti": [47, 48], "invers": [47, 48, 76, 77, 78, 79, 80, 81, 82, 83, 84], "tune": 47, "inv_var_row": 48, "inv_var_col": 48, "degree_row": 48, "degree_col": 48, "equat": 48, "19": 48, "practic": 48, "eiler": 48, "marx": 48, "varianc": [48, 76, 77, 78, 79, 80, 81, 82, 83, 84, 147, 150], "axi": 48, "row": 48, "column": 48, "label": [49, 50, 174], "nknot": [49, 72, 73, 74, 126, 127, 128, 129, 130, 131, 132, 133, 134], "omega": 49, "n_mix": 50, "20": 50, "log10bmin": 50, "log10bmax": 50, "reimplement": 51, "like": 51, "z_pe": [53, 74], "lamb": [53, 74, 83, 107, 110, 111, 135, 136, 174], "amax": [54, 55, 147, 150, 163, 164, 165, 166, 167], "alpha_mag": 55, "beta_mag": 55, "xi_tilt": [56, 58, 59], "sigma_tilt": [56, 59], "alpha_mag1": 57, "beta_mag1": 57, "alpha_mag2": 57, "beta_mag2": 57, "amax1": 57, "amax2": 57, "sigma_tilt1": 58, "sigma_tilt2": 58, "mpp": [60, 61, 66], "sigpp": [60, 61, 66], "lam": [60, 61, 66], "gap": 64, "relat": [64, 71], "gapmin": [66, 67, 68, 69, 70], "gapmax": 66, "gapwidth": 69, "perturb": [71, 74], "m1pe": [72, 73], "dict": [72, 73, 74, 110, 111, 160], "m1inj": [72, 73], "creat": [72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 176], "estim": [72, 73, 74, 86, 109], "cutoff": [72, 73], "polynomi": [72, 73], "jnp": [72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 174], "ndarrai": [72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84], "_description_": 72, "norm_p_m1": 72, "_type_": [72, 73, 74], "p_m1": [72, 73], "p_q": [72, 73], "smooth": 72, "delta_m": 72, "black": 72, "hole": 72, "size": [72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 110, 111, 112, 113, 114, 115], "bh": 72, "qpe": 73, "qinj": 73, "norm_pm1q": 73, "v": 73, "logxbsplin": 74, "powerlawredshiftmodel": 74, "expon": [74, 107], "prob": [74, 112, 115], "dv_cdz": 74, "element": 74, "respect": 74, "addit": 75, "numpyro": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 109, 174, 176], "grid_dmat": 76, "validate_arg": [76, 77, 78, 79, 80, 81, 82, 83, 84], "properti": [76, 77, 78, 79, 80, 81, 82, 83, 84], "batch_shap": [76, 77, 78, 79, 80, 81, 82, 83, 84], "batch": [76, 77, 78, 79, 80, 81, 82, 83, 84], "cdf": [76, 77, 78, 79, 80, 81, 82, 83, 84], "cummul": [76, 77, 78, 79, 80, 81, 82, 83, 84], "output": [76, 77, 78, 79, 80, 81, 82, 83, 84, 160, 175], "enumerate_support": [76, 77, 78, 79, 80, 81, 82, 83, 84], "expand": [76, 77, 78, 79, 80, 81, 82, 83, 84], "len": [76, 77, 78, 79, 80, 81, 82, 83, 84], "contain": [76, 77, 78, 79, 80, 81, 82, 83, 84, 109, 174], "all": [76, 77, 78, 79, 80, 81, 82, 83, 84, 124, 145, 174], "event_dim": [76, 77, 78, 79, 80, 81, 82, 83, 84], "dimens": [76, 77, 78, 79, 80, 81, 82, 83, 84], "individu": [76, 77, 78, 79, 80, 81, 82, 83, 84], "event_shap": [76, 77, 78, 79, 80, 81, 82, 83, 84], "singl": [76, 77, 78, 79, 80, 81, 82, 83, 84, 166, 174], "new": [76, 77, 78, 79, 80, 81, 82, 83, 84, 160], "expandeddistribut": [76, 77, 78, 79, 80, 81, 82, 83, 84], "instanc": [76, 77, 78, 79, 80, 81, 82, 83, 84], "expand_bi": [76, 77, 78, 79, 80, 81, 82, 83, 84], "sample_shap": [76, 77, 78, 79, 80, 81, 82, 83, 84], "its": [76, 77, 78, 79, 80, 81, 82, 83, 84], "To": [76, 77, 78, 79, 80, 81, 82, 83, 84, 176], "intern": [76, 77, 78, 79, 80, 81, 82, 83, 84], "dim": [76, 77, 78, 79, 80, 81, 82, 83, 84], "someth": [76, 77, 78, 79, 80, 81, 82, 83, 84], "larger": [76, 77, 78, 79, 80, 81, 82, 83, 84], "instead": [76, 77, 78, 79, 80, 81, 82, 83, 84], "drawn": [76, 77, 78, 79, 80, 81, 82, 83, 84], "version": [76, 77, 78, 79, 80, 81, 82, 83, 84, 176], "icdf": [76, 77, 78, 79, 80, 81, 82, 83, 84], "cumul": [76, 77, 78, 79, 80, 81, 82, 83, 84], "quantil": [76, 77, 78, 79, 80, 81, 82, 83, 84], "belong": [76, 77, 78, 79, 80, 81, 82, 83, 84], "whose": [76, 77, 78, 79, 80, 81, 82, 83, 84], "equal": [76, 77, 78, 79, 80, 81, 82, 83, 84], "classmethod": [76, 77, 78, 79, 80, 81, 82, 83, 84], "infer_shap": [76, 77, 78, 79, 80, 81, 82, 83, 84], "depend": [76, 77, 78, 79, 80, 81, 82, 83, 84], "tensor": [76, 77, 78, 79, 80, 81, 82, 83, 84], "those": [76, 77, 78, 79, 80, 81, 82, 83, 84], "posit": [76, 77, 78, 79, 80, 81, 82, 83, 84, 174], "replac": [76, 77, 78, 79, 80, 81, 82, 83, 84], "repres": [76, 77, 78, 79, 80, 81, 82, 83, 84, 147, 150], "keyword": [76, 77, 78, 79, 80, 81, 82, 83, 84], "map": [76, 77, 78, 79, 80, 81, 82, 83, 84, 109], "A": [76, 77, 78, 79, 80, 81, 82, 83, 84, 162], "pair": [76, 77, 78, 79, 80, 81, 82, 83, 84], "would": [76, 77, 78, 79, 80, 81, 82, 83, 84, 174], "log_prob": [76, 77, 78, 79, 80, 81, 82, 83, 84, 174], "numpi": [76, 77, 78, 79, 80, 81, 82, 83, 84, 149, 160, 174], "mask": [76, 77, 78, 79, 80, 81, 82, 83, 84], "boolean": [76, 77, 78, 79, 80, 81, 82, 83, 84], "broadcast": [76, 77, 78, 79, 80, 81, 82, 83, 84], "includ": [76, 77, 78, 79, 80, 81, 82, 83, 84, 160, 174], "site": [76, 77, 78, 79, 80, 81, 82, 83, 84, 149], "exclud": [76, 77, 78, 79, 80, 81, 82, 83, 84], "copi": [76, 77, 78, 79, 80, 81, 82, 83, 84], "maskeddistribut": [76, 77, 78, 79, 80, 81, 82, 83, 84], "mean": [76, 77, 78, 79, 80, 81, 82, 83, 84, 147, 150], "kei": [76, 77, 78, 79, 80, 81, 82, 83, 84, 109, 110], "have": [76, 77, 78, 79, 80, 81, 82, 83, 84, 174], "empti": [76, 77, 78, 79, 80, 81, 82, 83, 84], "lead": [76, 77, 78, 79, 80, 81, 82, 83, 84], "fill": [76, 77, 78, 79, 80, 81, 82, 83, 84], "draw": [76, 77, 78, 79, 80, 81, 82, 83, 84, 166, 167], "sample_with_intermedi": [76, 77, 78, 79, 80, 81, 82, 83, 84], "same": [76, 77, 78, 79, 80, 81, 82, 83, 84, 147, 150], "except": [76, 77, 78, 79, 80, 81, 82, 83, 84], "ani": [76, 77, 78, 79, 80, 81, 82, 83, 84], "intermedi": [76, 77, 78, 79, 80, 81, 82, 83, 84], "transformeddistribut": [76, 77, 78, 79, 80, 81, 82, 83, 84], "to_ev": [76, 77, 78, 79, 80, 81, 82, 83, 84], "reinterpreted_batch_ndim": [76, 77, 78, 79, 80, 81, 82, 83, 84], "interpret": [76, 77, 78, 79, 80, 81, 82, 83, 84], "rightmost": [76, 77, 78, 79, 80, 81, 82, 83, 84], "5707963267948966": 77, "xinterp": [78, 79], "yinterp": [78, 79], "ngrid": [78, 79, 80, 83, 126, 127, 128, 129], "1000": [78, 79, 80, 83], "linearinterpolatedpowerlaw": 78, "numericallynormalizeddistribit": [79, 83], "diff_ord": 81, "1e": 83, "11": [83, 170, 172], "141592653589793": 84, "tool": [86, 116, 124, 145], "need": [86, 110, 111, 174, 176], "gw": [86, 87, 96, 151, 160, 174], "interferomet": 87, "respons": 87, "freq_domain_strain": [88, 89, 90, 91], "freq_arrai": [88, 89, 90, 91], "psd_arrai": [88, 89, 90, 91], "start_tim": [88, 89, 90, 91], "durat": [88, 89, 90, 91, 100, 103, 104], "latitud": 92, "longitud": 92, "arm_tilt": 92, "arm_azimuth": 92, "arm1": 93, "arm2": 93, "lat": 94, "lon": 94, "elev": 94, "mode": 95, "likleihood": [96, 174], "whittl": 96, "aa": [97, 103], "bb": [97, 103], "frequenc": 97, "psd": [97, 100, 103, 104], "ifo": [98, 99, 101, 102], "hp": [98, 99], "hc": [98, 99], "ra": [98, 99], "dec": [98, 99], "time": [98, 99, 110, 111, 160, 174], "psi": [98, 99], "signal": [100, 104], "fd_strain": 100, "util": [105, 125], "analysi": [105, 116, 160, 174], "meat": 106, "hierarh": 106, "maxz": 107, "9": [107, 149, 176], "survei": 107, "hyper": [107, 174], "out": 107, "perfrom": 107, "trapezoid": 107, "get": 107, "total": [107, 110, 111, 112, 113, 160, 174], "hypervolum": 107, "evolut": 107, "gpc": 107, "yr": [107, 110, 111, 174], "model_dict": 108, "prior_dict": 108, "min_neff_cut": [108, 110, 111, 174], "marginalize_select": [108, 110, 111, 174], "posterior_predictive_check": [108, 110, 111, 174], "numpyro_model": 109, "model_arg": 109, "niter": 109, "lr": 109, "find": 109, "svi": 109, "adam": 109, "optim": 109, "elbo": 109, "rng": [109, 110], "pass": [109, 110, 174], "callabl": [109, 110, 111], "python": [109, 174, 176], "primit": 109, "iter": [109, 110, 111], "variat": 109, "learn": 109, "svirunresult": 109, "param": [109, 119, 120, 143, 148, 149], "pe_weight": [110, 174], "inj_weight": [110, 174], "total_inj": [110, 111, 174], "nob": [110, 111, 141, 143, 174], "tob": [110, 111, 174], "categor": 110, "marginal_q": 110, "indv_weight": 110, "rngkei": 110, "pop_frac": [110, 127, 128, 130, 131, 132], "surv_hypervolume_fct": [110, 111, 174], "totalvtcalcul": [110, 111], "vtfct_kwarg": [110, 111, 174], "reconstruct_r": [110, 111], "param_nam": [110, 111, 160, 174], "pedata": [110, 111, 153, 160, 174], "injdata": [110, 111, 160, 169, 173, 174], "perform": [110, 111, 112, 115, 174], "hierarch": [110, 111], "likeihood": [110, 111], "resampl": [110, 111], "indiviud": [110, 111], "analays": [110, 111], "f": 110, "refer": [110, 111, 162], "devicearrai": [110, 111, 112, 113, 114, 115], "weight": [110, 111, 112, 113, 114, 174], "expect": [110, 111, 112, 113, 114, 115], "n_event": [110, 111, 114, 115], "n_sampl": [110, 111, 114, 115], "found": [110, 111, 112, 113, 174], "n_found_inject": [110, 111, 112, 113], "gener": [110, 111, 160], "cut": [110, 111], "observ": [110, 111, 174], "analyz": [110, 111], "spent": [110, 111], "produc": [110, 111], "catalog": [110, 111, 174], "variabl": 110, "astrophys": 110, "fraction": 110, "subpopulaton": 110, "sum": 110, "vt": [110, 111], "diction": [110, 111], "margin": [110, 111], "uncertainti": [110, 111], "select": [110, 111], "mont": [110, 111, 112, 113, 114, 115], "carlo": [110, 111, 112, 113, 114, 115], "reconstruct": [110, 111], "merger": [110, 111], "min_neff": [110, 111], "likelihood": [110, 111, 174], "converg": [110, 111, 114, 115], "erform": 110, "predict": [110, 111], "check": [110, 111, 114, 115], "ppc": [110, 111], "mininmum": [110, 111], "solar": [110, 111], "6": [110, 111], "logpe_weight": 111, "loginj_weight": 111, "hierarchical_likelihood_log": 111, "logweight": [112, 115], "ninj": [112, 113, 174], "detect": [112, 113], "efficeni": [112, 113], "log_mu": 112, "effici": [112, 113], "n_eff": [112, 113, 114, 115], "per": [114, 115], "bf": [114, 115], "via": [114, 115], "montecarlo": [114, 115], "logbf": [114, 115], "pars": 116, "cli": 116, "argument": [116, 174], "config": [116, 174], "mix_dist": 118, "mix_param": 118, "component_param": 118, "popmodel": 118, "dist": [120, 122, 174], "750": [126, 129], "model_kwarg": [126, 127, 128, 129, 130, 131, 132, 133, 134], "500": [127, 128, 174], "pop_num": [127, 128, 130, 131], "mass_model": [130, 131, 132, 133, 134], "m1mmin": [130, 132, 133], "logxlogybsplin": [130, 131], "num": [132, 133], "z_c": 135, "pmag": [139, 140], "ptilt": [139, 140], "mag": [139, 140, 147, 148, 149, 150], "psmag": 140, "pstilt": 140, "po": [141, 143], "pm1": 142, "pq": 142, "drdz": 144, "logx": 144, "help": 146, "between": [146, 174], "var": [147, 150], "convert": [147, 150, 160], "angl": [148, 149], "bk": 149, "usr": 149, "share": [149, 174], "miniconda": 149, "env": 149, "__setup_conda": 149, "lib": 149, "python3": 149, "py": [149, 170, 174], "collect": 151, "downsampl": 152, "max_sampl": [152, 155, 157, 159], "10000": [152, 155, 157, 159, 166, 167], "param_map": [153, 160, 169, 173], "catalog_summary_fil": 156, "data_dir": [157, 159, 160], "run_map": [157, 159], "keyfil": 157, "ignor": [157, 159], "bbh": 157, "no_downsampl": [157, 159], "post": 158, "inj_fil": 160, "save": [160, 175], "jax_devic": 160, "up": [160, 176], "them": [160, 175], "str": 160, "directori": 160, "list": 160, "desir": [160, 174], "datafil": 160, "associ": 160, "inj_attribut": 160, "evaul": 161, "term": 161, "paramt": 161, "wrapper": 162, "implment": 162, "spenc": 162, "adher": 162, "mathematica": 162, "convent": [162, 163, 164, 165], "detail": [162, 176], "http": [162, 170, 176], "wolfram": 162, "com": [162, 176], "languag": 162, "ref": 162, "polylog": 162, "html": 162, "possibli": 162, "complex": [162, 174], "scalar": 162, "equival": 162, "correspond": [163, 164, 165], "align": 163, "accord": [163, 164, 165], "allow": [163, 164, 165], "dimensionless": [163, 164, 165], "chi_effect": [163, 164], "isotrop": [164, 165], "xeff": [166, 167], "xp": [166, 167], "ndraw": [166, 167, 173], "bw_method": [166, 167], "scott": [166, 167], "joint_prior_from_isotropic_spin": 166, "maximimum": [166, 167], "consid": [166, 167], "inspir": [166, 167], "build": [166, 167, 175], "p_chi_p": [166, 167], "process": 168, "search": 168, "fi": [170, 171], "ifar": 170, "snr": [170, 171], "additional_cut": [170, 171, 172], "load_injection_data": 170, "git": [170, 176], "ligo": 170, "org": 170, "ratesandpopul": 170, "gwpopulation_pip": 170, "blob": 170, "master": 170, "vt_helper": 170, "l66": 170, "8": 171, "injfil": 172, "ifar_threshold": 172, "snr_threshold": 172, "semianalyt": 172, "model_prob": 173, "standard": [174, 175], "pesummari": 174, "format": 174, "json": 174, "one": 174, "yaml": 174, "auxiliari": 174, "configur": 174, "For": [174, 176], "simpl": 174, "yml": 174, "truncated_powerlaw_mass_1": 174, "numpyro_distribut": 174, "hyper_param": 174, "prior_param": 174, "loc": 174, "10": [174, 176], "50": 174, "sampler": 174, "kernel_kwarg": 174, "dense_mass": 174, "mcmc_kwarg": 174, "num_warmup": 174, "num_sampl": 174, "1500": 174, "num_chain": 174, "catalog_summary_json": 174, "summari": 174, "With": 174, "written": 174, "readi": 174, "go": 174, "command": 174, "gwinferno_run_from_config": 174, "now": 174, "wai": 174, "abl": 174, "handl": 174, "declar": 174, "correl": 174, "mixtur": 174, "current": 174, "usual": 174, "probabilist": 174, "follow": 174, "python_fil": 174, "pipelin": 174, "config_fil": 174, "example_python_model": 174, "requir": [174, 176], "definit": 174, "within": 174, "least": [174, 176], "take": 174, "pesampl": 174, "interfac": 174, "hierarchical_likelihood_in_log": 174, "main": 174, "calcaul": 174, "n_pesampl": 174, "nubmber": 174, "posteror": 174, "n_found": 174, "remain": 174, "here": 174, "infrastructur": 174, "powerlawredshift": 174, "def": 174, "samp": 174, "inj": 174, "m1dist": 174, "qdist": 174, "02": 174, "zdist": 174, "_": 174, "instal": 175, "quick": 175, "start": 175, "popsummari": 175, "pleas": 175, "cite": 175, "paper": 175, "upon": 175, "open": 175, "softwar": 175, "gwpopul": 175, "bruce": 175, "edelman": 175, "bedelman": 175, "uoregon": 175, "edu": 175, "jaxen": 175, "godfrei": 175, "jaxeng": 175, "gino": 175, "carrillo": 175, "gcarrilo3": 175, "ben": 175, "farr": 175, "bfarr": 175, "clone": 176, "repositori": 176, "github": 176, "farroutlab": 176, "cd": 176, "recommend": 176, "conda": 176, "environ": 176, "newer": 176, "than": 176, "cpu": 176, "usag": 176, "activ": 176, "forg": 176, "h5py": 176, "pip": 176, "upgrad": 176, "r": 176, "pip_requir": 176, "txt": 176, "enabl": 176, "cuda": 176, "gpu": 176, "instruct": 176, "gwinferno_gpu": 176, "nvidia": 176, "jaxlib": 176, "nvcc": 176}, "objects": {"": [[175, 0, 0, "-", "gwinferno"]], "gwinferno": [[2, 0, 0, "-", "cosmology"], [4, 0, 0, "-", "distributions"], [12, 0, 0, "-", "interpolation"], [20, 0, 0, "-", "models"], [75, 0, 0, "-", "numpyro_distributions"], [86, 0, 0, "-", "parameter_estimation"], [105, 0, 0, "-", "pipeline"], [124, 0, 0, "-", "postprocess"], [145, 0, 0, "-", "preprocess"]], "gwinferno.cosmology": [[3, 1, 1, "", "Cosmology"]], "gwinferno.cosmology.Cosmology": [[3, 2, 1, "", "DL2z"], [3, 2, 1, "", "__call__"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "dDcdz"], [3, 2, 1, "", "dVcdz"], [3, 2, 1, "", "extend"], [3, 2, 1, "", "logdVcdz"], [3, 2, 1, "", "z2DL"], [3, 2, 1, "", "z2Dc"], [3, 2, 1, "", "z2E"]], "gwinferno.distributions": [[5, 3, 1, "", "betadist"], [6, 3, 1, "", "ln_beta_fct"], [7, 3, 1, "", "log_logistic_unit"], [8, 3, 1, "", "logistic_unit"], [9, 3, 1, "", "powerlaw_logit_pdf"], [10, 3, 1, "", "powerlaw_pdf"], [11, 3, 1, "", "truncnorm_pdf"]], "gwinferno.interpolation": [[13, 1, 1, "", "BSpline"], [14, 1, 1, "", "BasisSpline"], [15, 1, 1, "", "LogXBSpline"], [16, 1, 1, "", "LogXLogYBSpline"], [17, 1, 1, "", "LogYBSpline"], [18, 1, 1, "", "NaturalCubicUnivariateSpline"], [19, 1, 1, "", "RectBivariateBasisSpline"]], "gwinferno.interpolation.BSpline": [[13, 2, 1, "", "__call__"], [13, 2, 1, "", "__init__"], [13, 2, 1, "", "bases"], [13, 2, 1, "", "eval"], [13, 2, 1, "", "get_coefficients"], [13, 2, 1, "", "norm"], [13, 2, 1, "", "project"]], "gwinferno.interpolation.BasisSpline": [[14, 2, 1, "", "__call__"], [14, 2, 1, "", "__init__"], [14, 2, 1, "", "bases"], [14, 2, 1, "", "eval"], [14, 2, 1, "", "get_coefficients"], [14, 2, 1, "", "norm"], [14, 2, 1, "", "project"]], "gwinferno.interpolation.LogXBSpline": [[15, 2, 1, "", "__call__"], [15, 2, 1, "", "__init__"], [15, 2, 1, "", "bases"], [15, 2, 1, "", "eval"], [15, 2, 1, "", "get_coefficients"], [15, 2, 1, "", "norm"], [15, 2, 1, "", "project"]], "gwinferno.interpolation.LogXLogYBSpline": [[16, 2, 1, "", "__call__"], [16, 2, 1, "", "__init__"], [16, 2, 1, "", "bases"], [16, 2, 1, "", "eval"], [16, 2, 1, "", "get_coefficients"], [16, 2, 1, "", "norm"], [16, 2, 1, "", "project"]], "gwinferno.interpolation.LogYBSpline": [[17, 2, 1, "", "__call__"], [17, 2, 1, "", "__init__"], [17, 2, 1, "", "bases"], [17, 2, 1, "", "eval"], [17, 2, 1, "", "get_coefficients"], [17, 2, 1, "", "norm"], [17, 2, 1, "", "project"]], "gwinferno.interpolation.NaturalCubicUnivariateSpline": [[18, 2, 1, "", "__call__"], [18, 2, 1, "", "__init__"]], "gwinferno.interpolation.RectBivariateBasisSpline": [[19, 2, 1, "", "__call__"], [19, 2, 1, "", "__init__"], [19, 2, 1, "", "bases"], [19, 2, 1, "", "norm_2d"], [19, 2, 1, "", "project"]], "gwinferno.models": [[21, 0, 0, "-", "bsplines"], [51, 0, 0, "-", "gwpopulation"], [64, 0, 0, "-", "mass_gap"], [71, 0, 0, "-", "spline_perturbation"]], "gwinferno.models.bsplines": [[22, 0, 0, "-", "joint"], [25, 0, 0, "-", "separable"], [36, 0, 0, "-", "single"], [46, 0, 0, "-", "smoothing"]], "gwinferno.models.bsplines.joint": [[23, 1, 1, "", "BSplineJointMassRatioChiEffective"], [24, 1, 1, "", "Base2DBSplineModel"]], "gwinferno.models.bsplines.joint.BSplineJointMassRatioChiEffective": [[23, 2, 1, "", "__call__"], [23, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.joint.Base2DBSplineModel": [[24, 2, 1, "", "__call__"], [24, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.separable": [[26, 1, 1, "", "BSplineEffectiveSpinDims"], [27, 1, 1, "", "BSplineIIDComponentMasses"], [28, 1, 1, "", "BSplineIIDSpinMagnitudes"], [29, 1, 1, "", "BSplineIIDSpinTilts"], [30, 1, 1, "", "BSplineIndependentComponentMasses"], [31, 1, 1, "", "BSplineIndependentSpinMagnitudes"], [32, 1, 1, "", "BSplineIndependentSpinTilts"], [33, 1, 1, "", "BSplinePrimaryBSplineRatio"], [34, 1, 1, "", "BSplinePrimaryPowerlawRatio"], [35, 1, 1, "", "PLPeakPrimaryBSplineRatio"]], "gwinferno.models.bsplines.separable.BSplineEffectiveSpinDims": [[26, 2, 1, "", "__call__"], [26, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.separable.BSplineIIDComponentMasses": [[27, 2, 1, "", "__call__"], [27, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.separable.BSplineIIDSpinMagnitudes": [[28, 2, 1, "", "__call__"], [28, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.separable.BSplineIIDSpinTilts": [[29, 2, 1, "", "__call__"], [29, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.separable.BSplineIndependentComponentMasses": [[30, 2, 1, "", "__call__"], [30, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.separable.BSplineIndependentSpinMagnitudes": [[31, 2, 1, "", "__call__"], [31, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.separable.BSplineIndependentSpinTilts": [[32, 2, 1, "", "__call__"], [32, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.separable.BSplinePrimaryBSplineRatio": [[33, 2, 1, "", "__call__"], [33, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.separable.BSplinePrimaryPowerlawRatio": [[34, 2, 1, "", "__call__"], [34, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.separable.PLPeakPrimaryBSplineRatio": [[35, 2, 1, "", "__call__"], [35, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.single": [[37, 1, 1, "", "BSplineChiEffective"], [38, 1, 1, "", "BSplineChiPrecess"], [39, 1, 1, "", "BSplineMass"], [40, 1, 1, "", "BSplineRatio"], [41, 1, 1, "", "BSplineRedshift"], [42, 1, 1, "", "BSplineSpinMagnitude"], [43, 1, 1, "", "BSplineSpinTilt"], [44, 1, 1, "", "BSplineSymmetricChiEffective"], [45, 1, 1, "", "Base1DBSplineModel"]], "gwinferno.models.bsplines.single.BSplineChiEffective": [[37, 2, 1, "", "__call__"], [37, 2, 1, "", "__init__"], [37, 2, 1, "", "eval_spline"], [37, 2, 1, "", "inj_pdf"], [37, 2, 1, "", "pe_pdf"], [37, 2, 1, "", "truncate_dmat"]], "gwinferno.models.bsplines.single.BSplineChiPrecess": [[38, 2, 1, "", "__call__"], [38, 2, 1, "", "__init__"], [38, 2, 1, "", "eval_spline"], [38, 2, 1, "", "inj_pdf"], [38, 2, 1, "", "pe_pdf"], [38, 2, 1, "", "truncate_dmat"]], "gwinferno.models.bsplines.single.BSplineMass": [[39, 2, 1, "", "__call__"], [39, 2, 1, "", "__init__"], [39, 2, 1, "", "eval_spline"], [39, 2, 1, "", "inj_pdf"], [39, 2, 1, "", "pe_pdf"], [39, 2, 1, "", "truncate_dmat"]], "gwinferno.models.bsplines.single.BSplineRatio": [[40, 2, 1, "", "__call__"], [40, 2, 1, "", "__init__"], [40, 2, 1, "", "eval_spline"], [40, 2, 1, "", "inj_pdf"], [40, 2, 1, "", "pe_pdf"], [40, 2, 1, "", "truncate_dmat"]], "gwinferno.models.bsplines.single.BSplineRedshift": [[41, 2, 1, "", "__call__"], [41, 2, 1, "", "__init__"], [41, 2, 1, "", "eval_spline"], [41, 2, 1, "", "inj_pdf"], [41, 2, 1, "", "norm"], [41, 2, 1, "", "pe_pdf"], [41, 2, 1, "", "truncate_dmat"]], "gwinferno.models.bsplines.single.BSplineSpinMagnitude": [[42, 2, 1, "", "__call__"], [42, 2, 1, "", "__init__"], [42, 2, 1, "", "eval_spline"], [42, 2, 1, "", "inj_pdf"], [42, 2, 1, "", "pe_pdf"], [42, 2, 1, "", "truncate_dmat"]], "gwinferno.models.bsplines.single.BSplineSpinTilt": [[43, 2, 1, "", "__call__"], [43, 2, 1, "", "__init__"], [43, 2, 1, "", "eval_spline"], [43, 2, 1, "", "inj_pdf"], [43, 2, 1, "", "pe_pdf"], [43, 2, 1, "", "truncate_dmat"]], "gwinferno.models.bsplines.single.BSplineSymmetricChiEffective": [[44, 2, 1, "", "__call__"], [44, 2, 1, "", "__init__"], [44, 2, 1, "", "eval_spline"], [44, 2, 1, "", "inj_pdf"], [44, 2, 1, "", "pe_pdf"], [44, 2, 1, "", "truncate_dmat"]], "gwinferno.models.bsplines.single.Base1DBSplineModel": [[45, 2, 1, "", "__call__"], [45, 2, 1, "", "__init__"], [45, 2, 1, "", "eval_spline"], [45, 2, 1, "", "inj_pdf"], [45, 2, 1, "", "pe_pdf"], [45, 2, 1, "", "truncate_dmat"]], "gwinferno.models.bsplines.smoothing": [[47, 3, 1, "", "apply_difference_prior"], [48, 3, 1, "", "apply_twod_difference_prior"], [49, 3, 1, "", "get_adaptive_Lambda"], [50, 3, 1, "", "mixture_smoothing_parameter"]], "gwinferno.models.gwpopulation": [[52, 0, 0, "-", "gwpopulation"]], "gwinferno.models.gwpopulation.gwpopulation": [[53, 1, 1, "", "PowerlawRedshiftModel"], [54, 3, 1, "", "beta_spin_magnitude"], [55, 3, 1, "", "iid_spin_magnitude"], [56, 3, 1, "", "iid_spin_tilt"], [57, 3, 1, "", "independent_spin_magnitude"], [58, 3, 1, "", "independent_spin_tilt"], [59, 3, 1, "", "mixture_isoalign_spin_tilt"], [60, 3, 1, "", "plpeak_primary_pdf"], [61, 3, 1, "", "plpeak_primary_ratio_pdf"], [62, 3, 1, "", "powerlaw_primary_ratio_falloff_pdf"], [63, 3, 1, "", "powerlaw_primary_ratio_pdf"]], "gwinferno.models.gwpopulation.gwpopulation.PowerlawRedshiftModel": [[53, 2, 1, "", "__call__"], [53, 2, 1, "", "__init__"]], "gwinferno.models.mass_gap": [[65, 3, 1, "", "logistic_unit"], [66, 3, 1, "", "plpeak_gap_primary_ratio_pdf"], [67, 3, 1, "", "powerlaw_gap_cutoff_primary_ratio_pdf"], [68, 3, 1, "", "powerlaw_gap_logit_ben_primary_pdf"], [69, 3, 1, "", "powerlaw_gap_logit_primary_pdf"], [70, 3, 1, "", "powerlaw_gap_primary_ratio_pdf"]], "gwinferno.models.spline_perturbation": [[72, 1, 1, "", "PowerlawBasisSplinePrimaryPowerlawRatio"], [73, 1, 1, "", "PowerlawBasisSplinePrimaryRatio"], [74, 1, 1, "", "PowerlawSplineRedshiftModel"]], "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio": [[72, 2, 1, "", "__call__"], [72, 2, 1, "", "__init__"], [72, 2, 1, "", "norm_p_m1"], [72, 2, 1, "", "p_m1"], [72, 2, 1, "", "p_q"], [72, 2, 1, "", "smoothing"]], "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio": [[73, 2, 1, "", "__call__"], [73, 2, 1, "", "__init__"], [73, 2, 1, "", "norm_pm1q"], [73, 2, 1, "", "p_m1"], [73, 2, 1, "", "p_q"]], "gwinferno.models.spline_perturbation.PowerlawSplineRedshiftModel": [[74, 2, 1, "", "__call__"], [74, 2, 1, "", "__init__"], [74, 2, 1, "", "normalization"], [74, 2, 1, "", "prob"]], "gwinferno.numpyro_distributions": [[76, 1, 1, "", "BSplineDistribution"], [77, 1, 1, "", "Cosine"], [78, 1, 1, "", "CubicInterpolatedPowerlaw"], [79, 1, 1, "", "LinearInterpolatedPowerlaw"], [80, 1, 1, "", "NumericallyNormalizedDistribition"], [81, 1, 1, "", "PSplineCoeficientPrior"], [82, 1, 1, "", "Powerlaw"], [83, 1, 1, "", "PowerlawRedshift"], [84, 1, 1, "", "Sine"], [85, 3, 1, "", "cumtrapz"]], "gwinferno.numpyro_distributions.BSplineDistribution": [[76, 2, 1, "", "__call__"], [76, 2, 1, "", "__init__"], [76, 4, 1, "", "batch_shape"], [76, 2, 1, "", "cdf"], [76, 2, 1, "", "enumerate_support"], [76, 4, 1, "", "event_dim"], [76, 4, 1, "", "event_shape"], [76, 2, 1, "", "expand"], [76, 2, 1, "", "expand_by"], [76, 2, 1, "", "icdf"], [76, 2, 1, "", "infer_shapes"], [76, 2, 1, "", "log_prob"], [76, 2, 1, "", "mask"], [76, 4, 1, "", "mean"], [76, 2, 1, "", "sample"], [76, 2, 1, "", "sample_with_intermediates"], [76, 2, 1, "", "shape"], [76, 2, 1, "", "to_event"], [76, 4, 1, "", "variance"]], "gwinferno.numpyro_distributions.Cosine": [[77, 2, 1, "", "__call__"], [77, 2, 1, "", "__init__"], [77, 4, 1, "", "batch_shape"], [77, 2, 1, "", "cdf"], [77, 2, 1, "", "enumerate_support"], [77, 4, 1, "", "event_dim"], [77, 4, 1, "", "event_shape"], [77, 2, 1, "", "expand"], [77, 2, 1, "", "expand_by"], [77, 2, 1, "", "icdf"], [77, 2, 1, "", "infer_shapes"], [77, 2, 1, "", "log_prob"], [77, 2, 1, "", "mask"], [77, 4, 1, "", "mean"], [77, 2, 1, "", "sample"], [77, 2, 1, "", "sample_with_intermediates"], [77, 2, 1, "", "shape"], [77, 2, 1, "", "to_event"], [77, 4, 1, "", "variance"]], "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw": [[78, 2, 1, "", "__call__"], [78, 2, 1, "", "__init__"], [78, 4, 1, "", "batch_shape"], [78, 2, 1, "", "cdf"], [78, 2, 1, "", "enumerate_support"], [78, 4, 1, "", "event_dim"], [78, 4, 1, "", "event_shape"], [78, 2, 1, "", "expand"], [78, 2, 1, "", "expand_by"], [78, 2, 1, "", "icdf"], [78, 2, 1, "", "infer_shapes"], [78, 2, 1, "", "log_prob"], [78, 2, 1, "", "mask"], [78, 4, 1, "", "mean"], [78, 2, 1, "", "sample"], [78, 2, 1, "", "sample_with_intermediates"], [78, 2, 1, "", "shape"], [78, 2, 1, "", "to_event"], [78, 4, 1, "", "variance"]], "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw": [[79, 2, 1, "", "__call__"], [79, 2, 1, "", "__init__"], [79, 4, 1, "", "batch_shape"], [79, 2, 1, "", "cdf"], [79, 2, 1, "", "enumerate_support"], [79, 4, 1, "", "event_dim"], [79, 4, 1, "", "event_shape"], [79, 2, 1, "", "expand"], [79, 2, 1, "", "expand_by"], [79, 2, 1, "", "icdf"], [79, 2, 1, "", "infer_shapes"], [79, 2, 1, "", "log_prob"], [79, 2, 1, "", "mask"], [79, 4, 1, "", "mean"], [79, 2, 1, "", "sample"], [79, 2, 1, "", "sample_with_intermediates"], [79, 2, 1, "", "shape"], [79, 2, 1, "", "to_event"], [79, 4, 1, "", "variance"]], "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition": [[80, 2, 1, "", "__call__"], [80, 2, 1, "", "__init__"], [80, 4, 1, "", "batch_shape"], [80, 2, 1, "", "cdf"], [80, 2, 1, "", "enumerate_support"], [80, 4, 1, "", "event_dim"], [80, 4, 1, "", "event_shape"], [80, 2, 1, "", "expand"], [80, 2, 1, "", "expand_by"], [80, 2, 1, "", "icdf"], [80, 2, 1, "", "infer_shapes"], [80, 2, 1, "", "log_prob"], [80, 2, 1, "", "mask"], [80, 4, 1, "", "mean"], [80, 2, 1, "", "sample"], [80, 2, 1, "", "sample_with_intermediates"], [80, 2, 1, "", "shape"], [80, 2, 1, "", "to_event"], [80, 4, 1, "", "variance"]], "gwinferno.numpyro_distributions.PSplineCoeficientPrior": [[81, 2, 1, "", "__call__"], [81, 2, 1, "", "__init__"], [81, 4, 1, "", "batch_shape"], [81, 2, 1, "", "cdf"], [81, 2, 1, "", "enumerate_support"], [81, 4, 1, "", "event_dim"], [81, 4, 1, "", "event_shape"], [81, 2, 1, "", "expand"], [81, 2, 1, "", "expand_by"], [81, 2, 1, "", "icdf"], [81, 2, 1, "", "infer_shapes"], [81, 2, 1, "", "log_prob"], [81, 2, 1, "", "mask"], [81, 4, 1, "", "mean"], [81, 2, 1, "", "sample"], [81, 2, 1, "", "sample_with_intermediates"], [81, 2, 1, "", "shape"], [81, 2, 1, "", "to_event"], [81, 4, 1, "", "variance"]], "gwinferno.numpyro_distributions.Powerlaw": [[82, 2, 1, "", "__call__"], [82, 2, 1, "", "__init__"], [82, 4, 1, "", "batch_shape"], [82, 2, 1, "", "cdf"], [82, 2, 1, "", "enumerate_support"], [82, 4, 1, "", "event_dim"], [82, 4, 1, "", "event_shape"], [82, 2, 1, "", "expand"], [82, 2, 1, "", "expand_by"], [82, 2, 1, "", "icdf"], [82, 2, 1, "", "infer_shapes"], [82, 2, 1, "", "log_prob"], [82, 2, 1, "", "mask"], [82, 4, 1, "", "mean"], [82, 2, 1, "", "sample"], [82, 2, 1, "", "sample_with_intermediates"], [82, 2, 1, "", "shape"], [82, 2, 1, "", "to_event"], [82, 4, 1, "", "variance"]], "gwinferno.numpyro_distributions.PowerlawRedshift": [[83, 2, 1, "", "__call__"], [83, 2, 1, "", "__init__"], [83, 4, 1, "", "batch_shape"], [83, 2, 1, "", "cdf"], [83, 2, 1, "", "enumerate_support"], [83, 4, 1, "", "event_dim"], [83, 4, 1, "", "event_shape"], [83, 2, 1, "", "expand"], [83, 2, 1, "", "expand_by"], [83, 2, 1, "", "icdf"], [83, 2, 1, "", "infer_shapes"], [83, 2, 1, "", "log_prob"], [83, 2, 1, "", "mask"], [83, 4, 1, "", "mean"], [83, 2, 1, "", "sample"], [83, 2, 1, "", "sample_with_intermediates"], [83, 2, 1, "", "shape"], [83, 2, 1, "", "to_event"], [83, 4, 1, "", "variance"]], "gwinferno.numpyro_distributions.Sine": [[84, 2, 1, "", "__call__"], [84, 2, 1, "", "__init__"], [84, 4, 1, "", "batch_shape"], [84, 2, 1, "", "cdf"], [84, 2, 1, "", "enumerate_support"], [84, 4, 1, "", "event_dim"], [84, 4, 1, "", "event_shape"], [84, 2, 1, "", "expand"], [84, 2, 1, "", "expand_by"], [84, 2, 1, "", "icdf"], [84, 2, 1, "", "infer_shapes"], [84, 2, 1, "", "log_prob"], [84, 2, 1, "", "mask"], [84, 4, 1, "", "mean"], [84, 2, 1, "", "sample"], [84, 2, 1, "", "sample_with_intermediates"], [84, 2, 1, "", "shape"], [84, 2, 1, "", "to_event"], [84, 4, 1, "", "variance"]], "gwinferno.parameter_estimation": [[87, 0, 0, "-", "detectors"], [96, 0, 0, "-", "likelihood"]], "gwinferno.parameter_estimation.detectors": [[88, 1, 1, "", "Detector"], [89, 1, 1, "", "H1"], [90, 1, 1, "", "L1"], [91, 1, 1, "", "V1"], [92, 3, 1, "", "construct_arm"], [93, 3, 1, "", "get_detector_tensor"], [94, 3, 1, "", "get_geocentric_vertex"], [95, 3, 1, "", "make_get_polarization_tensor"]], "gwinferno.parameter_estimation.detectors.Detector": [[88, 2, 1, "", "__call__"], [88, 2, 1, "", "__init__"]], "gwinferno.parameter_estimation.detectors.H1": [[89, 2, 1, "", "__call__"], [89, 2, 1, "", "__init__"]], "gwinferno.parameter_estimation.detectors.L1": [[90, 2, 1, "", "__call__"], [90, 2, 1, "", "__init__"]], "gwinferno.parameter_estimation.detectors.V1": [[91, 2, 1, "", "__call__"], [91, 2, 1, "", "__init__"]], "gwinferno.parameter_estimation.likelihood": [[97, 3, 1, "", "inner_product"], [98, 3, 1, "", "log_likelihood"], [99, 3, 1, "", "log_likelihood_det"], [100, 3, 1, "", "matched_filter_snr"], [101, 3, 1, "", "noise_log_likelihood"], [102, 3, 1, "", "noise_log_likelihood_det"], [103, 3, 1, "", "noise_weighted_inner_product"], [104, 3, 1, "", "optimal_snr_squared"]], "gwinferno.pipeline": [[106, 0, 0, "-", "analysis"], [116, 0, 0, "-", "parser"]], "gwinferno.pipeline.analysis": [[107, 1, 1, "", "TotalVTCalculator"], [108, 3, 1, "", "construct_hierarchical_model"], [109, 3, 1, "", "find_map"], [110, 3, 1, "", "hierarchical_likelihood"], [111, 3, 1, "", "hierarchical_likelihood_in_log"], [112, 3, 1, "", "logmu_logneff_injections_log"], [113, 3, 1, "", "mu_neff_injections"], [114, 3, 1, "", "per_event_log_bayes_factor_log_neffs"], [115, 3, 1, "", "per_event_log_bayes_factor_log_neffs_log"]], "gwinferno.pipeline.analysis.TotalVTCalculator": [[107, 2, 1, "", "__call__"], [107, 2, 1, "", "__init__"]], "gwinferno.pipeline.parser": [[117, 1, 1, "", "ConfigReader"], [118, 1, 1, "", "PopMixtureModel"], [119, 1, 1, "", "PopModel"], [120, 1, 1, "", "PopPrior"], [121, 3, 1, "", "load_base_parser"], [122, 3, 1, "", "load_dist_from_string"], [123, 3, 1, "", "load_model_from_python_file"]], "gwinferno.pipeline.parser.ConfigReader": [[117, 2, 1, "", "__call__"], [117, 2, 1, "", "__init__"]], "gwinferno.pipeline.parser.PopMixtureModel": [[118, 2, 1, "", "__call__"], [118, 2, 1, "", "__init__"]], "gwinferno.pipeline.parser.PopModel": [[119, 2, 1, "", "__call__"], [119, 2, 1, "", "__init__"]], "gwinferno.pipeline.parser.PopPrior": [[120, 2, 1, "", "__call__"], [120, 2, 1, "", "__init__"]], "gwinferno.postprocess": [[125, 0, 0, "-", "calculate_ppds"], [137, 0, 0, "-", "plotting"]], "gwinferno.postprocess.calculate_ppds": [[126, 3, 1, "", "calculate_chieff_bspline_ppds"], [127, 3, 1, "", "calculate_iid_spin_bspline_ppds"], [128, 3, 1, "", "calculate_iid_spin_bspline_weights"], [129, 3, 1, "", "calculate_ind_spin_bspline_ppds"], [130, 3, 1, "", "calculate_m1_bspline_q_powerlaw_ppds"], [131, 3, 1, "", "calculate_m1m2_bspline_ppds"], [132, 3, 1, "", "calculate_m1q_bspline_ppds"], [133, 3, 1, "", "calculate_m1q_bspline_weights"], [134, 3, 1, "", "calculate_m1q_ppds_plbspline_model"], [135, 3, 1, "", "calculate_powerbspline_rate_of_z_ppds"], [136, 3, 1, "", "calculate_powerlaw_rate_of_z_ppds"]], "gwinferno.postprocess.plotting": [[138, 3, 1, "", "plot_chieff_dist"], [139, 3, 1, "", "plot_iid_spin_dist"], [140, 3, 1, "", "plot_ind_spin_dist"], [141, 3, 1, "", "plot_m1_vs_z_ppc"], [142, 3, 1, "", "plot_mass_dist"], [143, 3, 1, "", "plot_ppc_brontosaurus"], [144, 3, 1, "", "plot_rofz"]], "gwinferno.preprocess": [[146, 0, 0, "-", "conversions"], [151, 0, 0, "-", "data_collection"], [161, 0, 0, "-", "priors"], [168, 0, 0, "-", "selection"]], "gwinferno.preprocess.conversions": [[147, 3, 1, "", "alpha_beta_from_mu_var"], [148, 3, 1, "", "chieff_from_q_component_spins"], [149, 3, 1, "", "chip_from_q_component_spins"], [150, 3, 1, "", "mu_var_from_alpha_beta"]], "gwinferno.preprocess.data_collection": [[152, 3, 1, "", "apply_priors"], [153, 3, 1, "", "convert_component_spin_posteriors_to_chieff"], [154, 3, 1, "", "dl_2_prior_on_z"], [155, 3, 1, "", "downsample_posteriors_to_consistent_nsamps"], [156, 3, 1, "", "load_catalog_from_metadata"], [157, 3, 1, "", "load_posterior_samples"], [158, 3, 1, "", "p_m1src_q_z_lal_pe_prior"], [159, 3, 1, "", "preprocess_data"], [160, 3, 1, "", "setup_posterior_samples_and_injections"]], "gwinferno.preprocess.priors": [[162, 3, 1, "", "Di"], [163, 3, 1, "", "chi_effective_prior_from_aligned_spins"], [164, 3, 1, "", "chi_effective_prior_from_isotropic_spins"], [165, 3, 1, "", "chi_p_prior_from_isotropic_spins"], [166, 3, 1, "", "chi_p_prior_given_chi_eff_q"], [167, 3, 1, "", "joint_prior_from_isotropic_spins"]], "gwinferno.preprocess.selection": [[169, 3, 1, "", "convert_component_spin_injections_to_chieff"], [170, 3, 1, "", "get_injection_dict"], [171, 3, 1, "", "get_semianlytic_injection_dict"], [172, 3, 1, "", "load_injections"], [173, 3, 1, "", "resample_injections"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"]}, "titleterms": {"save": 0, "data": 0, "popsummari": 0, "standard": 0, "output": 0, "us": 1, "basi": 1, "spline": 1, "model": [1, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "gwinferno": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175], "cosmologi": [2, 3], "distribut": [4, 5, 6, 7, 8, 9, 10, 11], "betadist": 5, "ln_beta_fct": 6, "log_logistic_unit": 7, "logistic_unit": [8, 65], "powerlaw_logit_pdf": 9, "powerlaw_pdf": 10, "truncnorm_pdf": 11, "interpol": [12, 13, 14, 15, 16, 17, 18, 19], "bspline": [13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "basissplin": 14, "logxbsplin": 15, "logxlogybsplin": 16, "logybsplin": 17, "naturalcubicunivariatesplin": 18, "rectbivariatebasissplin": 19, "joint": [22, 23, 24], "bsplinejointmassratiochieffect": 23, "base2dbsplinemodel": 24, "separ": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "bsplineeffectivespindim": 26, "bsplineiidcomponentmass": 27, "bsplineiidspinmagnitud": 28, "bsplineiidspintilt": 29, "bsplineindependentcomponentmass": 30, "bsplineindependentspinmagnitud": 31, "bsplineindependentspintilt": 32, "bsplineprimarybsplineratio": 33, "bsplineprimarypowerlawratio": 34, "plpeakprimarybsplineratio": 35, "singl": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "bsplinechieffect": 37, "bsplinechiprecess": 38, "bsplinemass": 39, "bsplineratio": 40, "bsplineredshift": 41, "bsplinespinmagnitud": 42, "bsplinespintilt": 43, "bsplinesymmetricchieffect": 44, "base1dbsplinemodel": 45, "smooth": [46, 47, 48, 49, 50], "apply_difference_prior": 47, "apply_twod_difference_prior": 48, "get_adaptive_lambda": 49, "mixture_smoothing_paramet": 50, "gwpopul": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "powerlawredshiftmodel": 53, "beta_spin_magnitud": 54, "iid_spin_magnitud": 55, "iid_spin_tilt": 56, "independent_spin_magnitud": 57, "independent_spin_tilt": 58, "mixture_isoalign_spin_tilt": 59, "plpeak_primary_pdf": 60, "plpeak_primary_ratio_pdf": 61, "powerlaw_primary_ratio_falloff_pdf": 62, "powerlaw_primary_ratio_pdf": 63, "mass_gap": [64, 65, 66, 67, 68, 69, 70], "plpeak_gap_primary_ratio_pdf": 66, "powerlaw_gap_cutoff_primary_ratio_pdf": 67, "powerlaw_gap_logit_ben_primary_pdf": 68, "powerlaw_gap_logit_primary_pdf": 69, "powerlaw_gap_primary_ratio_pdf": 70, "spline_perturb": [71, 72, 73, 74], "powerlawbasissplineprimarypowerlawratio": 72, "powerlawbasissplineprimaryratio": 73, "powerlawsplineredshiftmodel": 74, "numpyro_distribut": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "bsplinedistribut": 76, "cosin": 77, "cubicinterpolatedpowerlaw": 78, "linearinterpolatedpowerlaw": 79, "numericallynormalizeddistribit": 80, "psplinecoeficientprior": 81, "powerlaw": 82, "powerlawredshift": 83, "sine": 84, "cumtrapz": 85, "parameter_estim": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "detector": [87, 88, 89, 90, 91, 92, 93, 94, 95], "h1": 89, "l1": 90, "v1": 91, "construct_arm": 92, "get_detector_tensor": 93, "get_geocentric_vertex": 94, "make_get_polarization_tensor": 95, "likelihood": [96, 97, 98, 99, 100, 101, 102, 103, 104], "inner_product": 97, "log_likelihood": 98, "log_likelihood_det": 99, "matched_filter_snr": 100, "noise_log_likelihood": 101, "noise_log_likelihood_det": 102, "noise_weighted_inner_product": 103, "optimal_snr_squar": 104, "pipelin": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "analysi": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "totalvtcalcul": 107, "construct_hierarchical_model": 108, "find_map": 109, "hierarchical_likelihood": 110, "hierarchical_likelihood_in_log": 111, "logmu_logneff_injections_log": 112, "mu_neff_inject": 113, "per_event_log_bayes_factor_log_neff": 114, "per_event_log_bayes_factor_log_neffs_log": 115, "parser": [116, 117, 118, 119, 120, 121, 122, 123], "configread": 117, "popmixturemodel": 118, "popmodel": 119, "popprior": 120, "load_base_pars": 121, "load_dist_from_str": 122, "load_model_from_python_fil": 123, "postprocess": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "calculate_ppd": [125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "calculate_chieff_bspline_ppd": 126, "calculate_iid_spin_bspline_ppd": 127, "calculate_iid_spin_bspline_weight": 128, "calculate_ind_spin_bspline_ppd": 129, "calculate_m1_bspline_q_powerlaw_ppd": 130, "calculate_m1m2_bspline_ppd": 131, "calculate_m1q_bspline_ppd": 132, "calculate_m1q_bspline_weight": 133, "calculate_m1q_ppds_plbspline_model": 134, "calculate_powerbspline_rate_of_z_ppd": 135, "calculate_powerlaw_rate_of_z_ppd": 136, "plot": [137, 138, 139, 140, 141, 142, 143, 144], "plot_chieff_dist": 138, "plot_iid_spin_dist": 139, "plot_ind_spin_dist": 140, "plot_m1_vs_z_ppc": 141, "plot_mass_dist": 142, "plot_ppc_brontosauru": 143, "plot_rofz": 144, "preprocess": [145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "convers": [146, 147, 148, 149, 150], "alpha_beta_from_mu_var": 147, "chieff_from_q_component_spin": 148, "chip_from_q_component_spin": 149, "mu_var_from_alpha_beta": 150, "data_collect": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "apply_prior": 152, "convert_component_spin_posteriors_to_chieff": 153, "dl_2_prior_on_z": 154, "downsample_posteriors_to_consistent_nsamp": 155, "load_catalog_from_metadata": 156, "load_posterior_sampl": 157, "p_m1src_q_z_lal_pe_prior": 158, "preprocess_data": 159, "setup_posterior_samples_and_inject": 160, "prior": [161, 162, 163, 164, 165, 166, 167], "di": 162, "chi_effective_prior_from_aligned_spin": 163, "chi_effective_prior_from_isotropic_spin": 164, "chi_p_prior_from_isotropic_spin": 165, "chi_p_prior_given_chi_eff_q": 166, "joint_prior_from_isotropic_spin": 167, "select": [168, 169, 170, 171, 172, 173], "convert_component_spin_injections_to_chieff": 169, "get_injection_dict": 170, "get_semianlytic_injection_dict": 171, "load_inject": 172, "resample_inject": 173, "quick": 174, "start": 174, "welcom": 175, "": 175, "document": 175, "gravit": 175, "wave": 175, "hierarch": 175, "infer": 175, "numpyro": 175, "content": 175, "tutori": 175, "api": 175, "citat": 175, "author": 175, "instal": 176}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Saving Data in Popsummary Standard Output": [[0, "saving-data-in-popsummary-standard-output"]], "Using Basis Splines in Models": [[1, "using-basis-splines-in-models"]], "gwinferno.cosmology": [[2, "module-gwinferno.cosmology"]], "gwinferno.cosmology.Cosmology": [[3, "gwinferno-cosmology-cosmology"]], "gwinferno.distributions": [[4, "module-gwinferno.distributions"]], "gwinferno.distributions.betadist": [[5, "gwinferno-distributions-betadist"]], "gwinferno.distributions.ln_beta_fct": [[6, "gwinferno-distributions-ln-beta-fct"]], "gwinferno.distributions.log_logistic_unit": [[7, "gwinferno-distributions-log-logistic-unit"]], "gwinferno.distributions.logistic_unit": [[8, "gwinferno-distributions-logistic-unit"]], "gwinferno.distributions.powerlaw_logit_pdf": [[9, "gwinferno-distributions-powerlaw-logit-pdf"]], "gwinferno.distributions.powerlaw_pdf": [[10, "gwinferno-distributions-powerlaw-pdf"]], "gwinferno.distributions.truncnorm_pdf": [[11, "gwinferno-distributions-truncnorm-pdf"]], "gwinferno.interpolation": [[12, "module-gwinferno.interpolation"]], "gwinferno.interpolation.BSpline": [[13, "gwinferno-interpolation-bspline"]], "gwinferno.interpolation.BasisSpline": [[14, "gwinferno-interpolation-basisspline"]], "gwinferno.interpolation.LogXBSpline": [[15, "gwinferno-interpolation-logxbspline"]], "gwinferno.interpolation.LogXLogYBSpline": [[16, "gwinferno-interpolation-logxlogybspline"]], "gwinferno.interpolation.LogYBSpline": [[17, "gwinferno-interpolation-logybspline"]], "gwinferno.interpolation.NaturalCubicUnivariateSpline": [[18, "gwinferno-interpolation-naturalcubicunivariatespline"]], "gwinferno.interpolation.RectBivariateBasisSpline": [[19, "gwinferno-interpolation-rectbivariatebasisspline"]], "gwinferno.models": [[20, "module-gwinferno.models"]], "gwinferno.models.bsplines": [[21, "module-gwinferno.models.bsplines"]], "gwinferno.models.bsplines.joint": [[22, "module-gwinferno.models.bsplines.joint"]], "gwinferno.models.bsplines.joint.BSplineJointMassRatioChiEffective": [[23, "gwinferno-models-bsplines-joint-bsplinejointmassratiochieffective"]], "gwinferno.models.bsplines.joint.Base2DBSplineModel": [[24, "gwinferno-models-bsplines-joint-base2dbsplinemodel"]], "gwinferno.models.bsplines.separable": [[25, "module-gwinferno.models.bsplines.separable"]], "gwinferno.models.bsplines.separable.BSplineEffectiveSpinDims": [[26, "gwinferno-models-bsplines-separable-bsplineeffectivespindims"]], "gwinferno.models.bsplines.separable.BSplineIIDComponentMasses": [[27, "gwinferno-models-bsplines-separable-bsplineiidcomponentmasses"]], "gwinferno.models.bsplines.separable.BSplineIIDSpinMagnitudes": [[28, "gwinferno-models-bsplines-separable-bsplineiidspinmagnitudes"]], "gwinferno.models.bsplines.separable.BSplineIIDSpinTilts": [[29, "gwinferno-models-bsplines-separable-bsplineiidspintilts"]], "gwinferno.models.bsplines.separable.BSplineIndependentComponentMasses": [[30, "gwinferno-models-bsplines-separable-bsplineindependentcomponentmasses"]], "gwinferno.models.bsplines.separable.BSplineIndependentSpinMagnitudes": [[31, "gwinferno-models-bsplines-separable-bsplineindependentspinmagnitudes"]], "gwinferno.models.bsplines.separable.BSplineIndependentSpinTilts": [[32, "gwinferno-models-bsplines-separable-bsplineindependentspintilts"]], "gwinferno.models.bsplines.separable.BSplinePrimaryBSplineRatio": [[33, "gwinferno-models-bsplines-separable-bsplineprimarybsplineratio"]], "gwinferno.models.bsplines.separable.BSplinePrimaryPowerlawRatio": [[34, "gwinferno-models-bsplines-separable-bsplineprimarypowerlawratio"]], "gwinferno.models.bsplines.separable.PLPeakPrimaryBSplineRatio": [[35, "gwinferno-models-bsplines-separable-plpeakprimarybsplineratio"]], "gwinferno.models.bsplines.single": [[36, "module-gwinferno.models.bsplines.single"]], "gwinferno.models.bsplines.single.BSplineChiEffective": [[37, "gwinferno-models-bsplines-single-bsplinechieffective"]], "gwinferno.models.bsplines.single.BSplineChiPrecess": [[38, "gwinferno-models-bsplines-single-bsplinechiprecess"]], "gwinferno.models.bsplines.single.BSplineMass": [[39, "gwinferno-models-bsplines-single-bsplinemass"]], "gwinferno.models.bsplines.single.BSplineRatio": [[40, "gwinferno-models-bsplines-single-bsplineratio"]], "gwinferno.models.bsplines.single.BSplineRedshift": [[41, "gwinferno-models-bsplines-single-bsplineredshift"]], "gwinferno.models.bsplines.single.BSplineSpinMagnitude": [[42, "gwinferno-models-bsplines-single-bsplinespinmagnitude"]], "gwinferno.models.bsplines.single.BSplineSpinTilt": [[43, "gwinferno-models-bsplines-single-bsplinespintilt"]], "gwinferno.models.bsplines.single.BSplineSymmetricChiEffective": [[44, "gwinferno-models-bsplines-single-bsplinesymmetricchieffective"]], "gwinferno.models.bsplines.single.Base1DBSplineModel": [[45, "gwinferno-models-bsplines-single-base1dbsplinemodel"]], "gwinferno.models.bsplines.smoothing": [[46, "module-gwinferno.models.bsplines.smoothing"]], "gwinferno.models.bsplines.smoothing.apply_difference_prior": [[47, "gwinferno-models-bsplines-smoothing-apply-difference-prior"]], "gwinferno.models.bsplines.smoothing.apply_twod_difference_prior": [[48, "gwinferno-models-bsplines-smoothing-apply-twod-difference-prior"]], "gwinferno.models.bsplines.smoothing.get_adaptive_Lambda": [[49, "gwinferno-models-bsplines-smoothing-get-adaptive-lambda"]], "gwinferno.models.bsplines.smoothing.mixture_smoothing_parameter": [[50, "gwinferno-models-bsplines-smoothing-mixture-smoothing-parameter"]], "gwinferno.models.gwpopulation": [[51, "module-gwinferno.models.gwpopulation"]], "gwinferno.models.gwpopulation.gwpopulation": [[52, "module-gwinferno.models.gwpopulation.gwpopulation"]], "gwinferno.models.gwpopulation.gwpopulation.PowerlawRedshiftModel": [[53, "gwinferno-models-gwpopulation-gwpopulation-powerlawredshiftmodel"]], "gwinferno.models.gwpopulation.gwpopulation.beta_spin_magnitude": [[54, "gwinferno-models-gwpopulation-gwpopulation-beta-spin-magnitude"]], "gwinferno.models.gwpopulation.gwpopulation.iid_spin_magnitude": [[55, "gwinferno-models-gwpopulation-gwpopulation-iid-spin-magnitude"]], "gwinferno.models.gwpopulation.gwpopulation.iid_spin_tilt": [[56, "gwinferno-models-gwpopulation-gwpopulation-iid-spin-tilt"]], "gwinferno.models.gwpopulation.gwpopulation.independent_spin_magnitude": [[57, "gwinferno-models-gwpopulation-gwpopulation-independent-spin-magnitude"]], "gwinferno.models.gwpopulation.gwpopulation.independent_spin_tilt": [[58, "gwinferno-models-gwpopulation-gwpopulation-independent-spin-tilt"]], "gwinferno.models.gwpopulation.gwpopulation.mixture_isoalign_spin_tilt": [[59, "gwinferno-models-gwpopulation-gwpopulation-mixture-isoalign-spin-tilt"]], "gwinferno.models.gwpopulation.gwpopulation.plpeak_primary_pdf": [[60, "gwinferno-models-gwpopulation-gwpopulation-plpeak-primary-pdf"]], "gwinferno.models.gwpopulation.gwpopulation.plpeak_primary_ratio_pdf": [[61, "gwinferno-models-gwpopulation-gwpopulation-plpeak-primary-ratio-pdf"]], "gwinferno.models.gwpopulation.gwpopulation.powerlaw_primary_ratio_falloff_pdf": [[62, "gwinferno-models-gwpopulation-gwpopulation-powerlaw-primary-ratio-falloff-pdf"]], "gwinferno.models.gwpopulation.gwpopulation.powerlaw_primary_ratio_pdf": [[63, "gwinferno-models-gwpopulation-gwpopulation-powerlaw-primary-ratio-pdf"]], "gwinferno.models.mass_gap": [[64, "module-gwinferno.models.mass_gap"]], "gwinferno.models.mass_gap.logistic_unit": [[65, "gwinferno-models-mass-gap-logistic-unit"]], "gwinferno.models.mass_gap.plpeak_gap_primary_ratio_pdf": [[66, "gwinferno-models-mass-gap-plpeak-gap-primary-ratio-pdf"]], "gwinferno.models.mass_gap.powerlaw_gap_cutoff_primary_ratio_pdf": [[67, "gwinferno-models-mass-gap-powerlaw-gap-cutoff-primary-ratio-pdf"]], "gwinferno.models.mass_gap.powerlaw_gap_logit_ben_primary_pdf": [[68, "gwinferno-models-mass-gap-powerlaw-gap-logit-ben-primary-pdf"]], "gwinferno.models.mass_gap.powerlaw_gap_logit_primary_pdf": [[69, "gwinferno-models-mass-gap-powerlaw-gap-logit-primary-pdf"]], "gwinferno.models.mass_gap.powerlaw_gap_primary_ratio_pdf": [[70, "gwinferno-models-mass-gap-powerlaw-gap-primary-ratio-pdf"]], "gwinferno.models.spline_perturbation": [[71, "module-gwinferno.models.spline_perturbation"]], "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio": [[72, "gwinferno-models-spline-perturbation-powerlawbasissplineprimarypowerlawratio"]], "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio": [[73, "gwinferno-models-spline-perturbation-powerlawbasissplineprimaryratio"]], "gwinferno.models.spline_perturbation.PowerlawSplineRedshiftModel": [[74, "gwinferno-models-spline-perturbation-powerlawsplineredshiftmodel"]], "gwinferno.numpyro_distributions": [[75, "module-gwinferno.numpyro_distributions"]], "gwinferno.numpyro_distributions.BSplineDistribution": [[76, "gwinferno-numpyro-distributions-bsplinedistribution"]], "gwinferno.numpyro_distributions.Cosine": [[77, "gwinferno-numpyro-distributions-cosine"]], "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw": [[78, "gwinferno-numpyro-distributions-cubicinterpolatedpowerlaw"]], "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw": [[79, "gwinferno-numpyro-distributions-linearinterpolatedpowerlaw"]], "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition": [[80, "gwinferno-numpyro-distributions-numericallynormalizeddistribition"]], "gwinferno.numpyro_distributions.PSplineCoeficientPrior": [[81, "gwinferno-numpyro-distributions-psplinecoeficientprior"]], "gwinferno.numpyro_distributions.Powerlaw": [[82, "gwinferno-numpyro-distributions-powerlaw"]], "gwinferno.numpyro_distributions.PowerlawRedshift": [[83, "gwinferno-numpyro-distributions-powerlawredshift"]], "gwinferno.numpyro_distributions.Sine": [[84, "gwinferno-numpyro-distributions-sine"]], "gwinferno.numpyro_distributions.cumtrapz": [[85, "gwinferno-numpyro-distributions-cumtrapz"]], "gwinferno.parameter_estimation": [[86, "module-gwinferno.parameter_estimation"]], "gwinferno.parameter_estimation.detectors": [[87, "module-gwinferno.parameter_estimation.detectors"]], "gwinferno.parameter_estimation.detectors.Detector": [[88, "gwinferno-parameter-estimation-detectors-detector"]], "gwinferno.parameter_estimation.detectors.H1": [[89, "gwinferno-parameter-estimation-detectors-h1"]], "gwinferno.parameter_estimation.detectors.L1": [[90, "gwinferno-parameter-estimation-detectors-l1"]], "gwinferno.parameter_estimation.detectors.V1": [[91, "gwinferno-parameter-estimation-detectors-v1"]], "gwinferno.parameter_estimation.detectors.construct_arm": [[92, "gwinferno-parameter-estimation-detectors-construct-arm"]], "gwinferno.parameter_estimation.detectors.get_detector_tensor": [[93, "gwinferno-parameter-estimation-detectors-get-detector-tensor"]], "gwinferno.parameter_estimation.detectors.get_geocentric_vertex": [[94, "gwinferno-parameter-estimation-detectors-get-geocentric-vertex"]], "gwinferno.parameter_estimation.detectors.make_get_polarization_tensor": [[95, "gwinferno-parameter-estimation-detectors-make-get-polarization-tensor"]], "gwinferno.parameter_estimation.likelihood": [[96, "module-gwinferno.parameter_estimation.likelihood"]], "gwinferno.parameter_estimation.likelihood.inner_product": [[97, "gwinferno-parameter-estimation-likelihood-inner-product"]], "gwinferno.parameter_estimation.likelihood.log_likelihood": [[98, "gwinferno-parameter-estimation-likelihood-log-likelihood"]], "gwinferno.parameter_estimation.likelihood.log_likelihood_det": [[99, "gwinferno-parameter-estimation-likelihood-log-likelihood-det"]], "gwinferno.parameter_estimation.likelihood.matched_filter_snr": [[100, "gwinferno-parameter-estimation-likelihood-matched-filter-snr"]], "gwinferno.parameter_estimation.likelihood.noise_log_likelihood": [[101, "gwinferno-parameter-estimation-likelihood-noise-log-likelihood"]], "gwinferno.parameter_estimation.likelihood.noise_log_likelihood_det": [[102, "gwinferno-parameter-estimation-likelihood-noise-log-likelihood-det"]], "gwinferno.parameter_estimation.likelihood.noise_weighted_inner_product": [[103, "gwinferno-parameter-estimation-likelihood-noise-weighted-inner-product"]], "gwinferno.parameter_estimation.likelihood.optimal_snr_squared": [[104, "gwinferno-parameter-estimation-likelihood-optimal-snr-squared"]], "gwinferno.pipeline": [[105, "module-gwinferno.pipeline"]], "gwinferno.pipeline.analysis": [[106, "module-gwinferno.pipeline.analysis"]], "gwinferno.pipeline.analysis.TotalVTCalculator": [[107, "gwinferno-pipeline-analysis-totalvtcalculator"]], "gwinferno.pipeline.analysis.construct_hierarchical_model": [[108, "gwinferno-pipeline-analysis-construct-hierarchical-model"]], "gwinferno.pipeline.analysis.find_map": [[109, "gwinferno-pipeline-analysis-find-map"]], "gwinferno.pipeline.analysis.hierarchical_likelihood": [[110, "gwinferno-pipeline-analysis-hierarchical-likelihood"]], "gwinferno.pipeline.analysis.hierarchical_likelihood_in_log": [[111, "gwinferno-pipeline-analysis-hierarchical-likelihood-in-log"]], "gwinferno.pipeline.analysis.logmu_logneff_injections_log": [[112, "gwinferno-pipeline-analysis-logmu-logneff-injections-log"]], "gwinferno.pipeline.analysis.mu_neff_injections": [[113, "gwinferno-pipeline-analysis-mu-neff-injections"]], "gwinferno.pipeline.analysis.per_event_log_bayes_factor_log_neffs": [[114, "gwinferno-pipeline-analysis-per-event-log-bayes-factor-log-neffs"]], "gwinferno.pipeline.analysis.per_event_log_bayes_factor_log_neffs_log": [[115, "gwinferno-pipeline-analysis-per-event-log-bayes-factor-log-neffs-log"]], "gwinferno.pipeline.parser": [[116, "module-gwinferno.pipeline.parser"]], "gwinferno.pipeline.parser.ConfigReader": [[117, "gwinferno-pipeline-parser-configreader"]], "gwinferno.pipeline.parser.PopMixtureModel": [[118, "gwinferno-pipeline-parser-popmixturemodel"]], "gwinferno.pipeline.parser.PopModel": [[119, "gwinferno-pipeline-parser-popmodel"]], "gwinferno.pipeline.parser.PopPrior": [[120, "gwinferno-pipeline-parser-popprior"]], "gwinferno.pipeline.parser.load_base_parser": [[121, "gwinferno-pipeline-parser-load-base-parser"]], "gwinferno.pipeline.parser.load_dist_from_string": [[122, "gwinferno-pipeline-parser-load-dist-from-string"]], "gwinferno.pipeline.parser.load_model_from_python_file": [[123, "gwinferno-pipeline-parser-load-model-from-python-file"]], "gwinferno.postprocess": [[124, "module-gwinferno.postprocess"]], "gwinferno.postprocess.calculate_ppds": [[125, "module-gwinferno.postprocess.calculate_ppds"]], "gwinferno.postprocess.calculate_ppds.calculate_chieff_bspline_ppds": [[126, "gwinferno-postprocess-calculate-ppds-calculate-chieff-bspline-ppds"]], "gwinferno.postprocess.calculate_ppds.calculate_iid_spin_bspline_ppds": [[127, "gwinferno-postprocess-calculate-ppds-calculate-iid-spin-bspline-ppds"]], "gwinferno.postprocess.calculate_ppds.calculate_iid_spin_bspline_weights": [[128, "gwinferno-postprocess-calculate-ppds-calculate-iid-spin-bspline-weights"]], "gwinferno.postprocess.calculate_ppds.calculate_ind_spin_bspline_ppds": [[129, "gwinferno-postprocess-calculate-ppds-calculate-ind-spin-bspline-ppds"]], "gwinferno.postprocess.calculate_ppds.calculate_m1_bspline_q_powerlaw_ppds": [[130, "gwinferno-postprocess-calculate-ppds-calculate-m1-bspline-q-powerlaw-ppds"]], "gwinferno.postprocess.calculate_ppds.calculate_m1m2_bspline_ppds": [[131, "gwinferno-postprocess-calculate-ppds-calculate-m1m2-bspline-ppds"]], "gwinferno.postprocess.calculate_ppds.calculate_m1q_bspline_ppds": [[132, "gwinferno-postprocess-calculate-ppds-calculate-m1q-bspline-ppds"]], "gwinferno.postprocess.calculate_ppds.calculate_m1q_bspline_weights": [[133, "gwinferno-postprocess-calculate-ppds-calculate-m1q-bspline-weights"]], "gwinferno.postprocess.calculate_ppds.calculate_m1q_ppds_plbspline_model": [[134, "gwinferno-postprocess-calculate-ppds-calculate-m1q-ppds-plbspline-model"]], "gwinferno.postprocess.calculate_ppds.calculate_powerbspline_rate_of_z_ppds": [[135, "gwinferno-postprocess-calculate-ppds-calculate-powerbspline-rate-of-z-ppds"]], "gwinferno.postprocess.calculate_ppds.calculate_powerlaw_rate_of_z_ppds": [[136, "gwinferno-postprocess-calculate-ppds-calculate-powerlaw-rate-of-z-ppds"]], "gwinferno.postprocess.plotting": [[137, "module-gwinferno.postprocess.plotting"]], "gwinferno.postprocess.plotting.plot_chieff_dist": [[138, "gwinferno-postprocess-plotting-plot-chieff-dist"]], "gwinferno.postprocess.plotting.plot_iid_spin_dist": [[139, "gwinferno-postprocess-plotting-plot-iid-spin-dist"]], "gwinferno.postprocess.plotting.plot_ind_spin_dist": [[140, "gwinferno-postprocess-plotting-plot-ind-spin-dist"]], "gwinferno.postprocess.plotting.plot_m1_vs_z_ppc": [[141, "gwinferno-postprocess-plotting-plot-m1-vs-z-ppc"]], "gwinferno.postprocess.plotting.plot_mass_dist": [[142, "gwinferno-postprocess-plotting-plot-mass-dist"]], "gwinferno.postprocess.plotting.plot_ppc_brontosaurus": [[143, "gwinferno-postprocess-plotting-plot-ppc-brontosaurus"]], "gwinferno.postprocess.plotting.plot_rofz": [[144, "gwinferno-postprocess-plotting-plot-rofz"]], "gwinferno.preprocess": [[145, "module-gwinferno.preprocess"]], "gwinferno.preprocess.conversions": [[146, "module-gwinferno.preprocess.conversions"]], "gwinferno.preprocess.conversions.alpha_beta_from_mu_var": [[147, "gwinferno-preprocess-conversions-alpha-beta-from-mu-var"]], "gwinferno.preprocess.conversions.chieff_from_q_component_spins": [[148, "gwinferno-preprocess-conversions-chieff-from-q-component-spins"]], "gwinferno.preprocess.conversions.chip_from_q_component_spins": [[149, "gwinferno-preprocess-conversions-chip-from-q-component-spins"]], "gwinferno.preprocess.conversions.mu_var_from_alpha_beta": [[150, "gwinferno-preprocess-conversions-mu-var-from-alpha-beta"]], "gwinferno.preprocess.data_collection": [[151, "module-gwinferno.preprocess.data_collection"]], "gwinferno.preprocess.data_collection.apply_priors": [[152, "gwinferno-preprocess-data-collection-apply-priors"]], "gwinferno.preprocess.data_collection.convert_component_spin_posteriors_to_chieff": [[153, "gwinferno-preprocess-data-collection-convert-component-spin-posteriors-to-chieff"]], "gwinferno.preprocess.data_collection.dl_2_prior_on_z": [[154, "gwinferno-preprocess-data-collection-dl-2-prior-on-z"]], "gwinferno.preprocess.data_collection.downsample_posteriors_to_consistent_nsamps": [[155, "gwinferno-preprocess-data-collection-downsample-posteriors-to-consistent-nsamps"]], "gwinferno.preprocess.data_collection.load_catalog_from_metadata": [[156, "gwinferno-preprocess-data-collection-load-catalog-from-metadata"]], "gwinferno.preprocess.data_collection.load_posterior_samples": [[157, "gwinferno-preprocess-data-collection-load-posterior-samples"]], "gwinferno.preprocess.data_collection.p_m1src_q_z_lal_pe_prior": [[158, "gwinferno-preprocess-data-collection-p-m1src-q-z-lal-pe-prior"]], "gwinferno.preprocess.data_collection.preprocess_data": [[159, "gwinferno-preprocess-data-collection-preprocess-data"]], "gwinferno.preprocess.data_collection.setup_posterior_samples_and_injections": [[160, "gwinferno-preprocess-data-collection-setup-posterior-samples-and-injections"]], "gwinferno.preprocess.priors": [[161, "module-gwinferno.preprocess.priors"]], "gwinferno.preprocess.priors.Di": [[162, "gwinferno-preprocess-priors-di"]], "gwinferno.preprocess.priors.chi_effective_prior_from_aligned_spins": [[163, "gwinferno-preprocess-priors-chi-effective-prior-from-aligned-spins"]], "gwinferno.preprocess.priors.chi_effective_prior_from_isotropic_spins": [[164, "gwinferno-preprocess-priors-chi-effective-prior-from-isotropic-spins"]], "gwinferno.preprocess.priors.chi_p_prior_from_isotropic_spins": [[165, "gwinferno-preprocess-priors-chi-p-prior-from-isotropic-spins"]], "gwinferno.preprocess.priors.chi_p_prior_given_chi_eff_q": [[166, "gwinferno-preprocess-priors-chi-p-prior-given-chi-eff-q"]], "gwinferno.preprocess.priors.joint_prior_from_isotropic_spins": [[167, "gwinferno-preprocess-priors-joint-prior-from-isotropic-spins"]], "gwinferno.preprocess.selection": [[168, "module-gwinferno.preprocess.selection"]], "gwinferno.preprocess.selection.convert_component_spin_injections_to_chieff": [[169, "gwinferno-preprocess-selection-convert-component-spin-injections-to-chieff"]], "gwinferno.preprocess.selection.get_injection_dict": [[170, "gwinferno-preprocess-selection-get-injection-dict"]], "gwinferno.preprocess.selection.get_semianlytic_injection_dict": [[171, "gwinferno-preprocess-selection-get-semianlytic-injection-dict"]], "gwinferno.preprocess.selection.load_injections": [[172, "gwinferno-preprocess-selection-load-injections"]], "gwinferno.preprocess.selection.resample_injections": [[173, "gwinferno-preprocess-selection-resample-injections"]], "Quick Start": [[174, "quick-start"]], "Welcome to GWInferno\u2019s documentation!": [[175, "welcome-to-gwinferno-s-documentation"]], "GWInferno: Gravitational-Wave Hierarchical Inference with NumPyro": [[175, "gwinferno-gravitational-wave-hierarchical-inference-with-numpyro"]], "Contents:": [[175, null]], "Tutorials:": [[175, null]], "API:": [[175, "module-gwinferno"]], "Citation": [[175, "citation"]], "Authors": [[175, "authors"]], "Installation": [[176, "installation"]]}, "indexentries": {"gwinferno.cosmology": [[2, "module-gwinferno.cosmology"]], "module": [[2, "module-gwinferno.cosmology"], [4, "module-gwinferno.distributions"], [12, "module-gwinferno.interpolation"], [20, "module-gwinferno.models"], [21, "module-gwinferno.models.bsplines"], [22, "module-gwinferno.models.bsplines.joint"], [25, "module-gwinferno.models.bsplines.separable"], [36, "module-gwinferno.models.bsplines.single"], [46, "module-gwinferno.models.bsplines.smoothing"], [51, "module-gwinferno.models.gwpopulation"], [52, "module-gwinferno.models.gwpopulation.gwpopulation"], [64, "module-gwinferno.models.mass_gap"], [71, "module-gwinferno.models.spline_perturbation"], [75, "module-gwinferno.numpyro_distributions"], [86, "module-gwinferno.parameter_estimation"], [87, "module-gwinferno.parameter_estimation.detectors"], [96, "module-gwinferno.parameter_estimation.likelihood"], [105, "module-gwinferno.pipeline"], [106, "module-gwinferno.pipeline.analysis"], [116, "module-gwinferno.pipeline.parser"], [124, "module-gwinferno.postprocess"], [125, "module-gwinferno.postprocess.calculate_ppds"], [137, "module-gwinferno.postprocess.plotting"], [145, "module-gwinferno.preprocess"], [146, "module-gwinferno.preprocess.conversions"], [151, "module-gwinferno.preprocess.data_collection"], [161, "module-gwinferno.preprocess.priors"], [168, "module-gwinferno.preprocess.selection"], [175, "module-gwinferno"]], "cosmology (class in gwinferno.cosmology)": [[3, "gwinferno.cosmology.Cosmology"]], "dl2z() (gwinferno.cosmology.cosmology method)": [[3, "gwinferno.cosmology.Cosmology.DL2z"]], "__call__() (gwinferno.cosmology.cosmology method)": [[3, "gwinferno.cosmology.Cosmology.__call__"]], "__init__() (gwinferno.cosmology.cosmology method)": [[3, "gwinferno.cosmology.Cosmology.__init__"]], "ddcdz() (gwinferno.cosmology.cosmology method)": [[3, "gwinferno.cosmology.Cosmology.dDcdz"]], "dvcdz() (gwinferno.cosmology.cosmology method)": [[3, "gwinferno.cosmology.Cosmology.dVcdz"]], "extend() (gwinferno.cosmology.cosmology method)": [[3, "gwinferno.cosmology.Cosmology.extend"]], "logdvcdz() (gwinferno.cosmology.cosmology method)": [[3, "gwinferno.cosmology.Cosmology.logdVcdz"]], "z2dl() (gwinferno.cosmology.cosmology method)": [[3, "gwinferno.cosmology.Cosmology.z2DL"]], "z2dc() (gwinferno.cosmology.cosmology method)": [[3, "gwinferno.cosmology.Cosmology.z2Dc"]], "z2e() (gwinferno.cosmology.cosmology method)": [[3, "gwinferno.cosmology.Cosmology.z2E"]], "gwinferno.distributions": [[4, "module-gwinferno.distributions"]], "betadist() (in module gwinferno.distributions)": [[5, "gwinferno.distributions.betadist"]], "ln_beta_fct() (in module gwinferno.distributions)": [[6, "gwinferno.distributions.ln_beta_fct"]], "log_logistic_unit() (in module gwinferno.distributions)": [[7, "gwinferno.distributions.log_logistic_unit"]], "logistic_unit() (in module gwinferno.distributions)": [[8, "gwinferno.distributions.logistic_unit"]], "powerlaw_logit_pdf() (in module gwinferno.distributions)": [[9, "gwinferno.distributions.powerlaw_logit_pdf"]], "powerlaw_pdf() (in module gwinferno.distributions)": [[10, "gwinferno.distributions.powerlaw_pdf"]], "truncnorm_pdf() (in module gwinferno.distributions)": [[11, "gwinferno.distributions.truncnorm_pdf"]], "gwinferno.interpolation": [[12, "module-gwinferno.interpolation"]], "bspline (class in gwinferno.interpolation)": [[13, "gwinferno.interpolation.BSpline"]], "__call__() (gwinferno.interpolation.bspline method)": [[13, "gwinferno.interpolation.BSpline.__call__"]], "__init__() (gwinferno.interpolation.bspline method)": [[13, "gwinferno.interpolation.BSpline.__init__"]], "bases() (gwinferno.interpolation.bspline method)": [[13, "gwinferno.interpolation.BSpline.bases"]], "eval() (gwinferno.interpolation.bspline method)": [[13, "gwinferno.interpolation.BSpline.eval"]], "get_coefficients() (gwinferno.interpolation.bspline method)": [[13, "gwinferno.interpolation.BSpline.get_coefficients"]], "norm() (gwinferno.interpolation.bspline method)": [[13, "gwinferno.interpolation.BSpline.norm"]], "project() (gwinferno.interpolation.bspline method)": [[13, "gwinferno.interpolation.BSpline.project"]], "basisspline (class in gwinferno.interpolation)": [[14, "gwinferno.interpolation.BasisSpline"]], "__call__() (gwinferno.interpolation.basisspline method)": [[14, "gwinferno.interpolation.BasisSpline.__call__"]], "__init__() (gwinferno.interpolation.basisspline method)": [[14, "gwinferno.interpolation.BasisSpline.__init__"]], "bases() (gwinferno.interpolation.basisspline method)": [[14, "gwinferno.interpolation.BasisSpline.bases"]], "eval() (gwinferno.interpolation.basisspline method)": [[14, "gwinferno.interpolation.BasisSpline.eval"]], "get_coefficients() (gwinferno.interpolation.basisspline method)": [[14, "gwinferno.interpolation.BasisSpline.get_coefficients"]], "norm() (gwinferno.interpolation.basisspline method)": [[14, "gwinferno.interpolation.BasisSpline.norm"]], "project() (gwinferno.interpolation.basisspline method)": [[14, "gwinferno.interpolation.BasisSpline.project"]], "logxbspline (class in gwinferno.interpolation)": [[15, "gwinferno.interpolation.LogXBSpline"]], "__call__() (gwinferno.interpolation.logxbspline method)": [[15, "gwinferno.interpolation.LogXBSpline.__call__"]], "__init__() (gwinferno.interpolation.logxbspline method)": [[15, "gwinferno.interpolation.LogXBSpline.__init__"]], "bases() (gwinferno.interpolation.logxbspline method)": [[15, "gwinferno.interpolation.LogXBSpline.bases"]], "eval() (gwinferno.interpolation.logxbspline method)": [[15, "gwinferno.interpolation.LogXBSpline.eval"]], "get_coefficients() (gwinferno.interpolation.logxbspline method)": [[15, "gwinferno.interpolation.LogXBSpline.get_coefficients"]], "norm() (gwinferno.interpolation.logxbspline method)": [[15, "gwinferno.interpolation.LogXBSpline.norm"]], "project() (gwinferno.interpolation.logxbspline method)": [[15, "gwinferno.interpolation.LogXBSpline.project"]], "logxlogybspline (class in gwinferno.interpolation)": [[16, "gwinferno.interpolation.LogXLogYBSpline"]], "__call__() (gwinferno.interpolation.logxlogybspline method)": [[16, "gwinferno.interpolation.LogXLogYBSpline.__call__"]], "__init__() (gwinferno.interpolation.logxlogybspline method)": [[16, "gwinferno.interpolation.LogXLogYBSpline.__init__"]], "bases() (gwinferno.interpolation.logxlogybspline method)": [[16, "gwinferno.interpolation.LogXLogYBSpline.bases"]], "eval() (gwinferno.interpolation.logxlogybspline method)": [[16, "gwinferno.interpolation.LogXLogYBSpline.eval"]], "get_coefficients() (gwinferno.interpolation.logxlogybspline method)": [[16, "gwinferno.interpolation.LogXLogYBSpline.get_coefficients"]], "norm() (gwinferno.interpolation.logxlogybspline method)": [[16, "gwinferno.interpolation.LogXLogYBSpline.norm"]], "project() (gwinferno.interpolation.logxlogybspline method)": [[16, "gwinferno.interpolation.LogXLogYBSpline.project"]], "logybspline (class in gwinferno.interpolation)": [[17, "gwinferno.interpolation.LogYBSpline"]], "__call__() (gwinferno.interpolation.logybspline method)": [[17, "gwinferno.interpolation.LogYBSpline.__call__"]], "__init__() (gwinferno.interpolation.logybspline method)": [[17, "gwinferno.interpolation.LogYBSpline.__init__"]], "bases() (gwinferno.interpolation.logybspline method)": [[17, "gwinferno.interpolation.LogYBSpline.bases"]], "eval() (gwinferno.interpolation.logybspline method)": [[17, "gwinferno.interpolation.LogYBSpline.eval"]], "get_coefficients() (gwinferno.interpolation.logybspline method)": [[17, "gwinferno.interpolation.LogYBSpline.get_coefficients"]], "norm() (gwinferno.interpolation.logybspline method)": [[17, "gwinferno.interpolation.LogYBSpline.norm"]], "project() (gwinferno.interpolation.logybspline method)": [[17, "gwinferno.interpolation.LogYBSpline.project"]], "naturalcubicunivariatespline (class in gwinferno.interpolation)": [[18, "gwinferno.interpolation.NaturalCubicUnivariateSpline"]], "__call__() (gwinferno.interpolation.naturalcubicunivariatespline method)": [[18, "gwinferno.interpolation.NaturalCubicUnivariateSpline.__call__"]], "__init__() (gwinferno.interpolation.naturalcubicunivariatespline method)": [[18, "gwinferno.interpolation.NaturalCubicUnivariateSpline.__init__"]], "rectbivariatebasisspline (class in gwinferno.interpolation)": [[19, "gwinferno.interpolation.RectBivariateBasisSpline"]], "__call__() (gwinferno.interpolation.rectbivariatebasisspline method)": [[19, "gwinferno.interpolation.RectBivariateBasisSpline.__call__"]], "__init__() (gwinferno.interpolation.rectbivariatebasisspline method)": [[19, "gwinferno.interpolation.RectBivariateBasisSpline.__init__"]], "bases() (gwinferno.interpolation.rectbivariatebasisspline method)": [[19, "gwinferno.interpolation.RectBivariateBasisSpline.bases"]], "norm_2d() (gwinferno.interpolation.rectbivariatebasisspline method)": [[19, "gwinferno.interpolation.RectBivariateBasisSpline.norm_2d"]], "project() (gwinferno.interpolation.rectbivariatebasisspline method)": [[19, "gwinferno.interpolation.RectBivariateBasisSpline.project"]], "gwinferno.models": [[20, "module-gwinferno.models"]], "gwinferno.models.bsplines": [[21, "module-gwinferno.models.bsplines"]], "gwinferno.models.bsplines.joint": [[22, "module-gwinferno.models.bsplines.joint"]], "bsplinejointmassratiochieffective (class in gwinferno.models.bsplines.joint)": [[23, "gwinferno.models.bsplines.joint.BSplineJointMassRatioChiEffective"]], "__call__() (gwinferno.models.bsplines.joint.bsplinejointmassratiochieffective method)": [[23, "gwinferno.models.bsplines.joint.BSplineJointMassRatioChiEffective.__call__"]], "__init__() (gwinferno.models.bsplines.joint.bsplinejointmassratiochieffective method)": [[23, "gwinferno.models.bsplines.joint.BSplineJointMassRatioChiEffective.__init__"]], "base2dbsplinemodel (class in gwinferno.models.bsplines.joint)": [[24, "gwinferno.models.bsplines.joint.Base2DBSplineModel"]], "__call__() (gwinferno.models.bsplines.joint.base2dbsplinemodel method)": [[24, "gwinferno.models.bsplines.joint.Base2DBSplineModel.__call__"]], "__init__() (gwinferno.models.bsplines.joint.base2dbsplinemodel method)": [[24, "gwinferno.models.bsplines.joint.Base2DBSplineModel.__init__"]], "gwinferno.models.bsplines.separable": [[25, "module-gwinferno.models.bsplines.separable"]], "bsplineeffectivespindims (class in gwinferno.models.bsplines.separable)": [[26, "gwinferno.models.bsplines.separable.BSplineEffectiveSpinDims"]], "__call__() (gwinferno.models.bsplines.separable.bsplineeffectivespindims method)": [[26, "gwinferno.models.bsplines.separable.BSplineEffectiveSpinDims.__call__"]], "__init__() (gwinferno.models.bsplines.separable.bsplineeffectivespindims method)": [[26, "gwinferno.models.bsplines.separable.BSplineEffectiveSpinDims.__init__"]], "bsplineiidcomponentmasses (class in gwinferno.models.bsplines.separable)": [[27, "gwinferno.models.bsplines.separable.BSplineIIDComponentMasses"]], "__call__() (gwinferno.models.bsplines.separable.bsplineiidcomponentmasses method)": [[27, "gwinferno.models.bsplines.separable.BSplineIIDComponentMasses.__call__"]], "__init__() (gwinferno.models.bsplines.separable.bsplineiidcomponentmasses method)": [[27, "gwinferno.models.bsplines.separable.BSplineIIDComponentMasses.__init__"]], "bsplineiidspinmagnitudes (class in gwinferno.models.bsplines.separable)": [[28, "gwinferno.models.bsplines.separable.BSplineIIDSpinMagnitudes"]], "__call__() (gwinferno.models.bsplines.separable.bsplineiidspinmagnitudes method)": [[28, "gwinferno.models.bsplines.separable.BSplineIIDSpinMagnitudes.__call__"]], "__init__() (gwinferno.models.bsplines.separable.bsplineiidspinmagnitudes method)": [[28, "gwinferno.models.bsplines.separable.BSplineIIDSpinMagnitudes.__init__"]], "bsplineiidspintilts (class in gwinferno.models.bsplines.separable)": [[29, "gwinferno.models.bsplines.separable.BSplineIIDSpinTilts"]], "__call__() (gwinferno.models.bsplines.separable.bsplineiidspintilts method)": [[29, "gwinferno.models.bsplines.separable.BSplineIIDSpinTilts.__call__"]], "__init__() (gwinferno.models.bsplines.separable.bsplineiidspintilts method)": [[29, "gwinferno.models.bsplines.separable.BSplineIIDSpinTilts.__init__"]], "bsplineindependentcomponentmasses (class in gwinferno.models.bsplines.separable)": [[30, "gwinferno.models.bsplines.separable.BSplineIndependentComponentMasses"]], "__call__() (gwinferno.models.bsplines.separable.bsplineindependentcomponentmasses method)": [[30, "gwinferno.models.bsplines.separable.BSplineIndependentComponentMasses.__call__"]], "__init__() (gwinferno.models.bsplines.separable.bsplineindependentcomponentmasses method)": [[30, "gwinferno.models.bsplines.separable.BSplineIndependentComponentMasses.__init__"]], "bsplineindependentspinmagnitudes (class in gwinferno.models.bsplines.separable)": [[31, "gwinferno.models.bsplines.separable.BSplineIndependentSpinMagnitudes"]], "__call__() (gwinferno.models.bsplines.separable.bsplineindependentspinmagnitudes method)": [[31, "gwinferno.models.bsplines.separable.BSplineIndependentSpinMagnitudes.__call__"]], "__init__() (gwinferno.models.bsplines.separable.bsplineindependentspinmagnitudes method)": [[31, "gwinferno.models.bsplines.separable.BSplineIndependentSpinMagnitudes.__init__"]], "bsplineindependentspintilts (class in gwinferno.models.bsplines.separable)": [[32, "gwinferno.models.bsplines.separable.BSplineIndependentSpinTilts"]], "__call__() (gwinferno.models.bsplines.separable.bsplineindependentspintilts method)": [[32, "gwinferno.models.bsplines.separable.BSplineIndependentSpinTilts.__call__"]], "__init__() (gwinferno.models.bsplines.separable.bsplineindependentspintilts method)": [[32, "gwinferno.models.bsplines.separable.BSplineIndependentSpinTilts.__init__"]], "bsplineprimarybsplineratio (class in gwinferno.models.bsplines.separable)": [[33, "gwinferno.models.bsplines.separable.BSplinePrimaryBSplineRatio"]], "__call__() (gwinferno.models.bsplines.separable.bsplineprimarybsplineratio method)": [[33, "gwinferno.models.bsplines.separable.BSplinePrimaryBSplineRatio.__call__"]], "__init__() (gwinferno.models.bsplines.separable.bsplineprimarybsplineratio method)": [[33, "gwinferno.models.bsplines.separable.BSplinePrimaryBSplineRatio.__init__"]], "bsplineprimarypowerlawratio (class in gwinferno.models.bsplines.separable)": [[34, "gwinferno.models.bsplines.separable.BSplinePrimaryPowerlawRatio"]], "__call__() (gwinferno.models.bsplines.separable.bsplineprimarypowerlawratio method)": [[34, "gwinferno.models.bsplines.separable.BSplinePrimaryPowerlawRatio.__call__"]], "__init__() (gwinferno.models.bsplines.separable.bsplineprimarypowerlawratio method)": [[34, "gwinferno.models.bsplines.separable.BSplinePrimaryPowerlawRatio.__init__"]], "plpeakprimarybsplineratio (class in gwinferno.models.bsplines.separable)": [[35, "gwinferno.models.bsplines.separable.PLPeakPrimaryBSplineRatio"]], "__call__() (gwinferno.models.bsplines.separable.plpeakprimarybsplineratio method)": [[35, "gwinferno.models.bsplines.separable.PLPeakPrimaryBSplineRatio.__call__"]], "__init__() (gwinferno.models.bsplines.separable.plpeakprimarybsplineratio method)": [[35, "gwinferno.models.bsplines.separable.PLPeakPrimaryBSplineRatio.__init__"]], "gwinferno.models.bsplines.single": [[36, "module-gwinferno.models.bsplines.single"]], "bsplinechieffective (class in gwinferno.models.bsplines.single)": [[37, "gwinferno.models.bsplines.single.BSplineChiEffective"]], "__call__() (gwinferno.models.bsplines.single.bsplinechieffective method)": [[37, "gwinferno.models.bsplines.single.BSplineChiEffective.__call__"]], "__init__() (gwinferno.models.bsplines.single.bsplinechieffective method)": [[37, "gwinferno.models.bsplines.single.BSplineChiEffective.__init__"]], "eval_spline() (gwinferno.models.bsplines.single.bsplinechieffective method)": [[37, "gwinferno.models.bsplines.single.BSplineChiEffective.eval_spline"]], "inj_pdf() (gwinferno.models.bsplines.single.bsplinechieffective method)": [[37, "gwinferno.models.bsplines.single.BSplineChiEffective.inj_pdf"]], "pe_pdf() (gwinferno.models.bsplines.single.bsplinechieffective method)": [[37, "gwinferno.models.bsplines.single.BSplineChiEffective.pe_pdf"]], "truncate_dmat() (gwinferno.models.bsplines.single.bsplinechieffective method)": [[37, "gwinferno.models.bsplines.single.BSplineChiEffective.truncate_dmat"]], "bsplinechiprecess (class in gwinferno.models.bsplines.single)": [[38, "gwinferno.models.bsplines.single.BSplineChiPrecess"]], "__call__() (gwinferno.models.bsplines.single.bsplinechiprecess method)": [[38, "gwinferno.models.bsplines.single.BSplineChiPrecess.__call__"]], "__init__() (gwinferno.models.bsplines.single.bsplinechiprecess method)": [[38, "gwinferno.models.bsplines.single.BSplineChiPrecess.__init__"]], "eval_spline() (gwinferno.models.bsplines.single.bsplinechiprecess method)": [[38, "gwinferno.models.bsplines.single.BSplineChiPrecess.eval_spline"]], "inj_pdf() (gwinferno.models.bsplines.single.bsplinechiprecess method)": [[38, "gwinferno.models.bsplines.single.BSplineChiPrecess.inj_pdf"]], "pe_pdf() (gwinferno.models.bsplines.single.bsplinechiprecess method)": [[38, "gwinferno.models.bsplines.single.BSplineChiPrecess.pe_pdf"]], "truncate_dmat() (gwinferno.models.bsplines.single.bsplinechiprecess method)": [[38, "gwinferno.models.bsplines.single.BSplineChiPrecess.truncate_dmat"]], "bsplinemass (class in gwinferno.models.bsplines.single)": [[39, "gwinferno.models.bsplines.single.BSplineMass"]], "__call__() (gwinferno.models.bsplines.single.bsplinemass method)": [[39, "gwinferno.models.bsplines.single.BSplineMass.__call__"]], "__init__() (gwinferno.models.bsplines.single.bsplinemass method)": [[39, "gwinferno.models.bsplines.single.BSplineMass.__init__"]], "eval_spline() (gwinferno.models.bsplines.single.bsplinemass method)": [[39, "gwinferno.models.bsplines.single.BSplineMass.eval_spline"]], "inj_pdf() (gwinferno.models.bsplines.single.bsplinemass method)": [[39, "gwinferno.models.bsplines.single.BSplineMass.inj_pdf"]], "pe_pdf() (gwinferno.models.bsplines.single.bsplinemass method)": [[39, "gwinferno.models.bsplines.single.BSplineMass.pe_pdf"]], "truncate_dmat() (gwinferno.models.bsplines.single.bsplinemass method)": [[39, "gwinferno.models.bsplines.single.BSplineMass.truncate_dmat"]], "bsplineratio (class in gwinferno.models.bsplines.single)": [[40, "gwinferno.models.bsplines.single.BSplineRatio"]], "__call__() (gwinferno.models.bsplines.single.bsplineratio method)": [[40, "gwinferno.models.bsplines.single.BSplineRatio.__call__"]], "__init__() (gwinferno.models.bsplines.single.bsplineratio method)": [[40, "gwinferno.models.bsplines.single.BSplineRatio.__init__"]], "eval_spline() (gwinferno.models.bsplines.single.bsplineratio method)": [[40, "gwinferno.models.bsplines.single.BSplineRatio.eval_spline"]], "inj_pdf() (gwinferno.models.bsplines.single.bsplineratio method)": [[40, "gwinferno.models.bsplines.single.BSplineRatio.inj_pdf"]], "pe_pdf() (gwinferno.models.bsplines.single.bsplineratio method)": [[40, "gwinferno.models.bsplines.single.BSplineRatio.pe_pdf"]], "truncate_dmat() (gwinferno.models.bsplines.single.bsplineratio method)": [[40, "gwinferno.models.bsplines.single.BSplineRatio.truncate_dmat"]], "bsplineredshift (class in gwinferno.models.bsplines.single)": [[41, "gwinferno.models.bsplines.single.BSplineRedshift"]], "__call__() (gwinferno.models.bsplines.single.bsplineredshift method)": [[41, "gwinferno.models.bsplines.single.BSplineRedshift.__call__"]], "__init__() (gwinferno.models.bsplines.single.bsplineredshift method)": [[41, "gwinferno.models.bsplines.single.BSplineRedshift.__init__"]], "eval_spline() (gwinferno.models.bsplines.single.bsplineredshift method)": [[41, "gwinferno.models.bsplines.single.BSplineRedshift.eval_spline"]], "inj_pdf() (gwinferno.models.bsplines.single.bsplineredshift method)": [[41, "gwinferno.models.bsplines.single.BSplineRedshift.inj_pdf"]], "norm() (gwinferno.models.bsplines.single.bsplineredshift method)": [[41, "gwinferno.models.bsplines.single.BSplineRedshift.norm"]], "pe_pdf() (gwinferno.models.bsplines.single.bsplineredshift method)": [[41, "gwinferno.models.bsplines.single.BSplineRedshift.pe_pdf"]], "truncate_dmat() (gwinferno.models.bsplines.single.bsplineredshift method)": [[41, "gwinferno.models.bsplines.single.BSplineRedshift.truncate_dmat"]], "bsplinespinmagnitude (class in gwinferno.models.bsplines.single)": [[42, "gwinferno.models.bsplines.single.BSplineSpinMagnitude"]], "__call__() (gwinferno.models.bsplines.single.bsplinespinmagnitude method)": [[42, "gwinferno.models.bsplines.single.BSplineSpinMagnitude.__call__"]], "__init__() (gwinferno.models.bsplines.single.bsplinespinmagnitude method)": [[42, "gwinferno.models.bsplines.single.BSplineSpinMagnitude.__init__"]], "eval_spline() (gwinferno.models.bsplines.single.bsplinespinmagnitude method)": [[42, "gwinferno.models.bsplines.single.BSplineSpinMagnitude.eval_spline"]], "inj_pdf() (gwinferno.models.bsplines.single.bsplinespinmagnitude method)": [[42, "gwinferno.models.bsplines.single.BSplineSpinMagnitude.inj_pdf"]], "pe_pdf() (gwinferno.models.bsplines.single.bsplinespinmagnitude method)": [[42, "gwinferno.models.bsplines.single.BSplineSpinMagnitude.pe_pdf"]], "truncate_dmat() (gwinferno.models.bsplines.single.bsplinespinmagnitude method)": [[42, "gwinferno.models.bsplines.single.BSplineSpinMagnitude.truncate_dmat"]], "bsplinespintilt (class in gwinferno.models.bsplines.single)": [[43, "gwinferno.models.bsplines.single.BSplineSpinTilt"]], "__call__() (gwinferno.models.bsplines.single.bsplinespintilt method)": [[43, "gwinferno.models.bsplines.single.BSplineSpinTilt.__call__"]], "__init__() (gwinferno.models.bsplines.single.bsplinespintilt method)": [[43, "gwinferno.models.bsplines.single.BSplineSpinTilt.__init__"]], "eval_spline() (gwinferno.models.bsplines.single.bsplinespintilt method)": [[43, "gwinferno.models.bsplines.single.BSplineSpinTilt.eval_spline"]], "inj_pdf() (gwinferno.models.bsplines.single.bsplinespintilt method)": [[43, "gwinferno.models.bsplines.single.BSplineSpinTilt.inj_pdf"]], "pe_pdf() (gwinferno.models.bsplines.single.bsplinespintilt method)": [[43, "gwinferno.models.bsplines.single.BSplineSpinTilt.pe_pdf"]], "truncate_dmat() (gwinferno.models.bsplines.single.bsplinespintilt method)": [[43, "gwinferno.models.bsplines.single.BSplineSpinTilt.truncate_dmat"]], "bsplinesymmetricchieffective (class in gwinferno.models.bsplines.single)": [[44, "gwinferno.models.bsplines.single.BSplineSymmetricChiEffective"]], "__call__() (gwinferno.models.bsplines.single.bsplinesymmetricchieffective method)": [[44, "gwinferno.models.bsplines.single.BSplineSymmetricChiEffective.__call__"]], "__init__() (gwinferno.models.bsplines.single.bsplinesymmetricchieffective method)": [[44, "gwinferno.models.bsplines.single.BSplineSymmetricChiEffective.__init__"]], "eval_spline() (gwinferno.models.bsplines.single.bsplinesymmetricchieffective method)": [[44, "gwinferno.models.bsplines.single.BSplineSymmetricChiEffective.eval_spline"]], "inj_pdf() (gwinferno.models.bsplines.single.bsplinesymmetricchieffective method)": [[44, "gwinferno.models.bsplines.single.BSplineSymmetricChiEffective.inj_pdf"]], "pe_pdf() (gwinferno.models.bsplines.single.bsplinesymmetricchieffective method)": [[44, "gwinferno.models.bsplines.single.BSplineSymmetricChiEffective.pe_pdf"]], "truncate_dmat() (gwinferno.models.bsplines.single.bsplinesymmetricchieffective method)": [[44, "gwinferno.models.bsplines.single.BSplineSymmetricChiEffective.truncate_dmat"]], "base1dbsplinemodel (class in gwinferno.models.bsplines.single)": [[45, "gwinferno.models.bsplines.single.Base1DBSplineModel"]], "__call__() (gwinferno.models.bsplines.single.base1dbsplinemodel method)": [[45, "gwinferno.models.bsplines.single.Base1DBSplineModel.__call__"]], "__init__() (gwinferno.models.bsplines.single.base1dbsplinemodel method)": [[45, "gwinferno.models.bsplines.single.Base1DBSplineModel.__init__"]], "eval_spline() (gwinferno.models.bsplines.single.base1dbsplinemodel method)": [[45, "gwinferno.models.bsplines.single.Base1DBSplineModel.eval_spline"]], "inj_pdf() (gwinferno.models.bsplines.single.base1dbsplinemodel method)": [[45, "gwinferno.models.bsplines.single.Base1DBSplineModel.inj_pdf"]], "pe_pdf() (gwinferno.models.bsplines.single.base1dbsplinemodel method)": [[45, "gwinferno.models.bsplines.single.Base1DBSplineModel.pe_pdf"]], "truncate_dmat() (gwinferno.models.bsplines.single.base1dbsplinemodel method)": [[45, "gwinferno.models.bsplines.single.Base1DBSplineModel.truncate_dmat"]], "gwinferno.models.bsplines.smoothing": [[46, "module-gwinferno.models.bsplines.smoothing"]], "apply_difference_prior() (in module gwinferno.models.bsplines.smoothing)": [[47, "gwinferno.models.bsplines.smoothing.apply_difference_prior"]], "apply_twod_difference_prior() (in module gwinferno.models.bsplines.smoothing)": [[48, "gwinferno.models.bsplines.smoothing.apply_twod_difference_prior"]], "get_adaptive_lambda() (in module gwinferno.models.bsplines.smoothing)": [[49, "gwinferno.models.bsplines.smoothing.get_adaptive_Lambda"]], "mixture_smoothing_parameter() (in module gwinferno.models.bsplines.smoothing)": [[50, "gwinferno.models.bsplines.smoothing.mixture_smoothing_parameter"]], "gwinferno.models.gwpopulation": [[51, "module-gwinferno.models.gwpopulation"]], "gwinferno.models.gwpopulation.gwpopulation": [[52, "module-gwinferno.models.gwpopulation.gwpopulation"]], "powerlawredshiftmodel (class in gwinferno.models.gwpopulation.gwpopulation)": [[53, "gwinferno.models.gwpopulation.gwpopulation.PowerlawRedshiftModel"]], "__call__() (gwinferno.models.gwpopulation.gwpopulation.powerlawredshiftmodel method)": [[53, "gwinferno.models.gwpopulation.gwpopulation.PowerlawRedshiftModel.__call__"]], "__init__() (gwinferno.models.gwpopulation.gwpopulation.powerlawredshiftmodel method)": [[53, "gwinferno.models.gwpopulation.gwpopulation.PowerlawRedshiftModel.__init__"]], "beta_spin_magnitude() (in module gwinferno.models.gwpopulation.gwpopulation)": [[54, "gwinferno.models.gwpopulation.gwpopulation.beta_spin_magnitude"]], "iid_spin_magnitude() (in module gwinferno.models.gwpopulation.gwpopulation)": [[55, "gwinferno.models.gwpopulation.gwpopulation.iid_spin_magnitude"]], "iid_spin_tilt() (in module gwinferno.models.gwpopulation.gwpopulation)": [[56, "gwinferno.models.gwpopulation.gwpopulation.iid_spin_tilt"]], "independent_spin_magnitude() (in module gwinferno.models.gwpopulation.gwpopulation)": [[57, "gwinferno.models.gwpopulation.gwpopulation.independent_spin_magnitude"]], "independent_spin_tilt() (in module gwinferno.models.gwpopulation.gwpopulation)": [[58, "gwinferno.models.gwpopulation.gwpopulation.independent_spin_tilt"]], "mixture_isoalign_spin_tilt() (in module gwinferno.models.gwpopulation.gwpopulation)": [[59, "gwinferno.models.gwpopulation.gwpopulation.mixture_isoalign_spin_tilt"]], "plpeak_primary_pdf() (in module gwinferno.models.gwpopulation.gwpopulation)": [[60, "gwinferno.models.gwpopulation.gwpopulation.plpeak_primary_pdf"]], "plpeak_primary_ratio_pdf() (in module gwinferno.models.gwpopulation.gwpopulation)": [[61, "gwinferno.models.gwpopulation.gwpopulation.plpeak_primary_ratio_pdf"]], "powerlaw_primary_ratio_falloff_pdf() (in module gwinferno.models.gwpopulation.gwpopulation)": [[62, "gwinferno.models.gwpopulation.gwpopulation.powerlaw_primary_ratio_falloff_pdf"]], "powerlaw_primary_ratio_pdf() (in module gwinferno.models.gwpopulation.gwpopulation)": [[63, "gwinferno.models.gwpopulation.gwpopulation.powerlaw_primary_ratio_pdf"]], "gwinferno.models.mass_gap": [[64, "module-gwinferno.models.mass_gap"]], "logistic_unit() (in module gwinferno.models.mass_gap)": [[65, "gwinferno.models.mass_gap.logistic_unit"]], "plpeak_gap_primary_ratio_pdf() (in module gwinferno.models.mass_gap)": [[66, "gwinferno.models.mass_gap.plpeak_gap_primary_ratio_pdf"]], "powerlaw_gap_cutoff_primary_ratio_pdf() (in module gwinferno.models.mass_gap)": [[67, "gwinferno.models.mass_gap.powerlaw_gap_cutoff_primary_ratio_pdf"]], "powerlaw_gap_logit_ben_primary_pdf() (in module gwinferno.models.mass_gap)": [[68, "gwinferno.models.mass_gap.powerlaw_gap_logit_ben_primary_pdf"]], "powerlaw_gap_logit_primary_pdf() (in module gwinferno.models.mass_gap)": [[69, "gwinferno.models.mass_gap.powerlaw_gap_logit_primary_pdf"]], "powerlaw_gap_primary_ratio_pdf() (in module gwinferno.models.mass_gap)": [[70, "gwinferno.models.mass_gap.powerlaw_gap_primary_ratio_pdf"]], "gwinferno.models.spline_perturbation": [[71, "module-gwinferno.models.spline_perturbation"]], "powerlawbasissplineprimarypowerlawratio (class in gwinferno.models.spline_perturbation)": [[72, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio"]], "__call__() (gwinferno.models.spline_perturbation.powerlawbasissplineprimarypowerlawratio method)": [[72, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio.__call__"]], "__init__() (gwinferno.models.spline_perturbation.powerlawbasissplineprimarypowerlawratio method)": [[72, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio.__init__"]], "norm_p_m1() (gwinferno.models.spline_perturbation.powerlawbasissplineprimarypowerlawratio method)": [[72, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio.norm_p_m1"]], "p_m1() (gwinferno.models.spline_perturbation.powerlawbasissplineprimarypowerlawratio method)": [[72, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio.p_m1"]], "p_q() (gwinferno.models.spline_perturbation.powerlawbasissplineprimarypowerlawratio method)": [[72, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio.p_q"]], "smoothing() (gwinferno.models.spline_perturbation.powerlawbasissplineprimarypowerlawratio method)": [[72, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio.smoothing"]], "powerlawbasissplineprimaryratio (class in gwinferno.models.spline_perturbation)": [[73, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio"]], "__call__() (gwinferno.models.spline_perturbation.powerlawbasissplineprimaryratio method)": [[73, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio.__call__"]], "__init__() (gwinferno.models.spline_perturbation.powerlawbasissplineprimaryratio method)": [[73, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio.__init__"]], "norm_pm1q() (gwinferno.models.spline_perturbation.powerlawbasissplineprimaryratio method)": [[73, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio.norm_pm1q"]], "p_m1() (gwinferno.models.spline_perturbation.powerlawbasissplineprimaryratio method)": [[73, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio.p_m1"]], "p_q() (gwinferno.models.spline_perturbation.powerlawbasissplineprimaryratio method)": [[73, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio.p_q"]], "powerlawsplineredshiftmodel (class in gwinferno.models.spline_perturbation)": [[74, "gwinferno.models.spline_perturbation.PowerlawSplineRedshiftModel"]], "__call__() (gwinferno.models.spline_perturbation.powerlawsplineredshiftmodel method)": [[74, "gwinferno.models.spline_perturbation.PowerlawSplineRedshiftModel.__call__"]], "__init__() (gwinferno.models.spline_perturbation.powerlawsplineredshiftmodel method)": [[74, "gwinferno.models.spline_perturbation.PowerlawSplineRedshiftModel.__init__"]], "normalization() (gwinferno.models.spline_perturbation.powerlawsplineredshiftmodel method)": [[74, "gwinferno.models.spline_perturbation.PowerlawSplineRedshiftModel.normalization"]], "prob() (gwinferno.models.spline_perturbation.powerlawsplineredshiftmodel method)": [[74, "gwinferno.models.spline_perturbation.PowerlawSplineRedshiftModel.prob"]], "gwinferno.numpyro_distributions": [[75, "module-gwinferno.numpyro_distributions"]], "bsplinedistribution (class in gwinferno.numpyro_distributions)": [[76, "gwinferno.numpyro_distributions.BSplineDistribution"]], "__call__() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[76, "gwinferno.numpyro_distributions.BSplineDistribution.__call__"]], "__init__() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[76, "gwinferno.numpyro_distributions.BSplineDistribution.__init__"]], "batch_shape (gwinferno.numpyro_distributions.bsplinedistribution property)": [[76, "gwinferno.numpyro_distributions.BSplineDistribution.batch_shape"]], "cdf() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[76, "gwinferno.numpyro_distributions.BSplineDistribution.cdf"]], "enumerate_support() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[76, "gwinferno.numpyro_distributions.BSplineDistribution.enumerate_support"]], "event_dim (gwinferno.numpyro_distributions.bsplinedistribution property)": [[76, "gwinferno.numpyro_distributions.BSplineDistribution.event_dim"]], "event_shape (gwinferno.numpyro_distributions.bsplinedistribution property)": [[76, "gwinferno.numpyro_distributions.BSplineDistribution.event_shape"]], "expand() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[76, "gwinferno.numpyro_distributions.BSplineDistribution.expand"]], "expand_by() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[76, "gwinferno.numpyro_distributions.BSplineDistribution.expand_by"]], "icdf() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[76, "gwinferno.numpyro_distributions.BSplineDistribution.icdf"]], "infer_shapes() (gwinferno.numpyro_distributions.bsplinedistribution class method)": [[76, "gwinferno.numpyro_distributions.BSplineDistribution.infer_shapes"]], "log_prob() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[76, "gwinferno.numpyro_distributions.BSplineDistribution.log_prob"]], "mask() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[76, "gwinferno.numpyro_distributions.BSplineDistribution.mask"]], "mean (gwinferno.numpyro_distributions.bsplinedistribution property)": [[76, "gwinferno.numpyro_distributions.BSplineDistribution.mean"]], "sample() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[76, "gwinferno.numpyro_distributions.BSplineDistribution.sample"]], "sample_with_intermediates() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[76, "gwinferno.numpyro_distributions.BSplineDistribution.sample_with_intermediates"]], "shape() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[76, "gwinferno.numpyro_distributions.BSplineDistribution.shape"]], "to_event() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[76, "gwinferno.numpyro_distributions.BSplineDistribution.to_event"]], "variance (gwinferno.numpyro_distributions.bsplinedistribution property)": [[76, "gwinferno.numpyro_distributions.BSplineDistribution.variance"]], "cosine (class in gwinferno.numpyro_distributions)": [[77, "gwinferno.numpyro_distributions.Cosine"]], "__call__() (gwinferno.numpyro_distributions.cosine method)": [[77, "gwinferno.numpyro_distributions.Cosine.__call__"]], "__init__() (gwinferno.numpyro_distributions.cosine method)": [[77, "gwinferno.numpyro_distributions.Cosine.__init__"]], "batch_shape (gwinferno.numpyro_distributions.cosine property)": [[77, "gwinferno.numpyro_distributions.Cosine.batch_shape"]], "cdf() (gwinferno.numpyro_distributions.cosine method)": [[77, "gwinferno.numpyro_distributions.Cosine.cdf"]], "enumerate_support() (gwinferno.numpyro_distributions.cosine method)": [[77, "gwinferno.numpyro_distributions.Cosine.enumerate_support"]], "event_dim (gwinferno.numpyro_distributions.cosine property)": [[77, "gwinferno.numpyro_distributions.Cosine.event_dim"]], "event_shape (gwinferno.numpyro_distributions.cosine property)": [[77, "gwinferno.numpyro_distributions.Cosine.event_shape"]], "expand() (gwinferno.numpyro_distributions.cosine method)": [[77, "gwinferno.numpyro_distributions.Cosine.expand"]], "expand_by() (gwinferno.numpyro_distributions.cosine method)": [[77, "gwinferno.numpyro_distributions.Cosine.expand_by"]], "icdf() (gwinferno.numpyro_distributions.cosine method)": [[77, "gwinferno.numpyro_distributions.Cosine.icdf"]], "infer_shapes() (gwinferno.numpyro_distributions.cosine class method)": [[77, "gwinferno.numpyro_distributions.Cosine.infer_shapes"]], "log_prob() (gwinferno.numpyro_distributions.cosine method)": [[77, "gwinferno.numpyro_distributions.Cosine.log_prob"]], "mask() (gwinferno.numpyro_distributions.cosine method)": [[77, "gwinferno.numpyro_distributions.Cosine.mask"]], "mean (gwinferno.numpyro_distributions.cosine property)": [[77, "gwinferno.numpyro_distributions.Cosine.mean"]], "sample() (gwinferno.numpyro_distributions.cosine method)": [[77, "gwinferno.numpyro_distributions.Cosine.sample"]], "sample_with_intermediates() (gwinferno.numpyro_distributions.cosine method)": [[77, "gwinferno.numpyro_distributions.Cosine.sample_with_intermediates"]], "shape() (gwinferno.numpyro_distributions.cosine method)": [[77, "gwinferno.numpyro_distributions.Cosine.shape"]], "to_event() (gwinferno.numpyro_distributions.cosine method)": [[77, "gwinferno.numpyro_distributions.Cosine.to_event"]], "variance (gwinferno.numpyro_distributions.cosine property)": [[77, "gwinferno.numpyro_distributions.Cosine.variance"]], "cubicinterpolatedpowerlaw (class in gwinferno.numpyro_distributions)": [[78, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw"]], "__call__() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.__call__"]], "__init__() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.__init__"]], "batch_shape (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw property)": [[78, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.batch_shape"]], "cdf() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.cdf"]], "enumerate_support() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.enumerate_support"]], "event_dim (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw property)": [[78, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.event_dim"]], "event_shape (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw property)": [[78, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.event_shape"]], "expand() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.expand"]], "expand_by() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.expand_by"]], "icdf() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.icdf"]], "infer_shapes() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw class method)": [[78, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.infer_shapes"]], "log_prob() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.log_prob"]], "mask() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.mask"]], "mean (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw property)": [[78, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.mean"]], "sample() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.sample"]], "sample_with_intermediates() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.sample_with_intermediates"]], "shape() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.shape"]], "to_event() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.to_event"]], "variance (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw property)": [[78, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.variance"]], "linearinterpolatedpowerlaw (class in gwinferno.numpyro_distributions)": [[79, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw"]], "__call__() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[79, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.__call__"]], "__init__() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[79, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.__init__"]], "batch_shape (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw property)": [[79, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.batch_shape"]], "cdf() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[79, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.cdf"]], "enumerate_support() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[79, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.enumerate_support"]], "event_dim (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw property)": [[79, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.event_dim"]], "event_shape (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw property)": [[79, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.event_shape"]], "expand() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[79, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.expand"]], "expand_by() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[79, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.expand_by"]], "icdf() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[79, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.icdf"]], "infer_shapes() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw class method)": [[79, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.infer_shapes"]], "log_prob() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[79, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.log_prob"]], "mask() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[79, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.mask"]], "mean (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw property)": [[79, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.mean"]], "sample() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[79, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.sample"]], "sample_with_intermediates() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[79, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.sample_with_intermediates"]], "shape() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[79, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.shape"]], "to_event() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[79, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.to_event"]], "variance (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw property)": [[79, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.variance"]], "numericallynormalizeddistribition (class in gwinferno.numpyro_distributions)": [[80, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition"]], "__call__() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[80, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.__call__"]], "__init__() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[80, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.__init__"]], "batch_shape (gwinferno.numpyro_distributions.numericallynormalizeddistribition property)": [[80, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.batch_shape"]], "cdf() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[80, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.cdf"]], "enumerate_support() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[80, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.enumerate_support"]], "event_dim (gwinferno.numpyro_distributions.numericallynormalizeddistribition property)": [[80, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.event_dim"]], "event_shape (gwinferno.numpyro_distributions.numericallynormalizeddistribition property)": [[80, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.event_shape"]], "expand() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[80, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.expand"]], "expand_by() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[80, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.expand_by"]], "icdf() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[80, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.icdf"]], "infer_shapes() (gwinferno.numpyro_distributions.numericallynormalizeddistribition class method)": [[80, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.infer_shapes"]], "log_prob() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[80, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.log_prob"]], "mask() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[80, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.mask"]], "mean (gwinferno.numpyro_distributions.numericallynormalizeddistribition property)": [[80, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.mean"]], "sample() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[80, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.sample"]], "sample_with_intermediates() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[80, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.sample_with_intermediates"]], "shape() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[80, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.shape"]], "to_event() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[80, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.to_event"]], "variance (gwinferno.numpyro_distributions.numericallynormalizeddistribition property)": [[80, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.variance"]], "psplinecoeficientprior (class in gwinferno.numpyro_distributions)": [[81, "gwinferno.numpyro_distributions.PSplineCoeficientPrior"]], "__call__() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[81, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.__call__"]], "__init__() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[81, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.__init__"]], "batch_shape (gwinferno.numpyro_distributions.psplinecoeficientprior property)": [[81, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.batch_shape"]], "cdf() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[81, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.cdf"]], "enumerate_support() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[81, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.enumerate_support"]], "event_dim (gwinferno.numpyro_distributions.psplinecoeficientprior property)": [[81, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.event_dim"]], "event_shape (gwinferno.numpyro_distributions.psplinecoeficientprior property)": [[81, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.event_shape"]], "expand() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[81, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.expand"]], "expand_by() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[81, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.expand_by"]], "icdf() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[81, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.icdf"]], "infer_shapes() (gwinferno.numpyro_distributions.psplinecoeficientprior class method)": [[81, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.infer_shapes"]], "log_prob() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[81, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.log_prob"]], "mask() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[81, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.mask"]], "mean (gwinferno.numpyro_distributions.psplinecoeficientprior property)": [[81, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.mean"]], "sample() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[81, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.sample"]], "sample_with_intermediates() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[81, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.sample_with_intermediates"]], "shape() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[81, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.shape"]], "to_event() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[81, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.to_event"]], "variance (gwinferno.numpyro_distributions.psplinecoeficientprior property)": [[81, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.variance"]], "powerlaw (class in gwinferno.numpyro_distributions)": [[82, "gwinferno.numpyro_distributions.Powerlaw"]], "__call__() (gwinferno.numpyro_distributions.powerlaw method)": [[82, "gwinferno.numpyro_distributions.Powerlaw.__call__"]], "__init__() (gwinferno.numpyro_distributions.powerlaw method)": [[82, "gwinferno.numpyro_distributions.Powerlaw.__init__"]], "batch_shape (gwinferno.numpyro_distributions.powerlaw property)": [[82, "gwinferno.numpyro_distributions.Powerlaw.batch_shape"]], "cdf() (gwinferno.numpyro_distributions.powerlaw method)": [[82, "gwinferno.numpyro_distributions.Powerlaw.cdf"]], "enumerate_support() (gwinferno.numpyro_distributions.powerlaw method)": [[82, "gwinferno.numpyro_distributions.Powerlaw.enumerate_support"]], "event_dim (gwinferno.numpyro_distributions.powerlaw property)": [[82, "gwinferno.numpyro_distributions.Powerlaw.event_dim"]], "event_shape (gwinferno.numpyro_distributions.powerlaw property)": [[82, "gwinferno.numpyro_distributions.Powerlaw.event_shape"]], "expand() (gwinferno.numpyro_distributions.powerlaw method)": [[82, "gwinferno.numpyro_distributions.Powerlaw.expand"]], "expand_by() (gwinferno.numpyro_distributions.powerlaw method)": [[82, "gwinferno.numpyro_distributions.Powerlaw.expand_by"]], "icdf() (gwinferno.numpyro_distributions.powerlaw method)": [[82, "gwinferno.numpyro_distributions.Powerlaw.icdf"]], "infer_shapes() (gwinferno.numpyro_distributions.powerlaw class method)": [[82, "gwinferno.numpyro_distributions.Powerlaw.infer_shapes"]], "log_prob() (gwinferno.numpyro_distributions.powerlaw method)": [[82, "gwinferno.numpyro_distributions.Powerlaw.log_prob"]], "mask() (gwinferno.numpyro_distributions.powerlaw method)": [[82, "gwinferno.numpyro_distributions.Powerlaw.mask"]], "mean (gwinferno.numpyro_distributions.powerlaw property)": [[82, "gwinferno.numpyro_distributions.Powerlaw.mean"]], "sample() (gwinferno.numpyro_distributions.powerlaw method)": [[82, "gwinferno.numpyro_distributions.Powerlaw.sample"]], "sample_with_intermediates() (gwinferno.numpyro_distributions.powerlaw method)": [[82, "gwinferno.numpyro_distributions.Powerlaw.sample_with_intermediates"]], "shape() (gwinferno.numpyro_distributions.powerlaw method)": [[82, "gwinferno.numpyro_distributions.Powerlaw.shape"]], "to_event() (gwinferno.numpyro_distributions.powerlaw method)": [[82, "gwinferno.numpyro_distributions.Powerlaw.to_event"]], "variance (gwinferno.numpyro_distributions.powerlaw property)": [[82, "gwinferno.numpyro_distributions.Powerlaw.variance"]], "powerlawredshift (class in gwinferno.numpyro_distributions)": [[83, "gwinferno.numpyro_distributions.PowerlawRedshift"]], "__call__() (gwinferno.numpyro_distributions.powerlawredshift method)": [[83, "gwinferno.numpyro_distributions.PowerlawRedshift.__call__"]], "__init__() (gwinferno.numpyro_distributions.powerlawredshift method)": [[83, "gwinferno.numpyro_distributions.PowerlawRedshift.__init__"]], "batch_shape (gwinferno.numpyro_distributions.powerlawredshift property)": [[83, "gwinferno.numpyro_distributions.PowerlawRedshift.batch_shape"]], "cdf() (gwinferno.numpyro_distributions.powerlawredshift method)": [[83, "gwinferno.numpyro_distributions.PowerlawRedshift.cdf"]], "enumerate_support() (gwinferno.numpyro_distributions.powerlawredshift method)": [[83, "gwinferno.numpyro_distributions.PowerlawRedshift.enumerate_support"]], "event_dim (gwinferno.numpyro_distributions.powerlawredshift property)": [[83, "gwinferno.numpyro_distributions.PowerlawRedshift.event_dim"]], "event_shape (gwinferno.numpyro_distributions.powerlawredshift property)": [[83, "gwinferno.numpyro_distributions.PowerlawRedshift.event_shape"]], "expand() (gwinferno.numpyro_distributions.powerlawredshift method)": [[83, "gwinferno.numpyro_distributions.PowerlawRedshift.expand"]], "expand_by() (gwinferno.numpyro_distributions.powerlawredshift method)": [[83, "gwinferno.numpyro_distributions.PowerlawRedshift.expand_by"]], "icdf() (gwinferno.numpyro_distributions.powerlawredshift method)": [[83, "gwinferno.numpyro_distributions.PowerlawRedshift.icdf"]], "infer_shapes() (gwinferno.numpyro_distributions.powerlawredshift class method)": [[83, "gwinferno.numpyro_distributions.PowerlawRedshift.infer_shapes"]], "log_prob() (gwinferno.numpyro_distributions.powerlawredshift method)": [[83, "gwinferno.numpyro_distributions.PowerlawRedshift.log_prob"]], "mask() (gwinferno.numpyro_distributions.powerlawredshift method)": [[83, "gwinferno.numpyro_distributions.PowerlawRedshift.mask"]], "mean (gwinferno.numpyro_distributions.powerlawredshift property)": [[83, "gwinferno.numpyro_distributions.PowerlawRedshift.mean"]], "sample() (gwinferno.numpyro_distributions.powerlawredshift method)": [[83, "gwinferno.numpyro_distributions.PowerlawRedshift.sample"]], "sample_with_intermediates() (gwinferno.numpyro_distributions.powerlawredshift method)": [[83, "gwinferno.numpyro_distributions.PowerlawRedshift.sample_with_intermediates"]], "shape() (gwinferno.numpyro_distributions.powerlawredshift method)": [[83, "gwinferno.numpyro_distributions.PowerlawRedshift.shape"]], "to_event() (gwinferno.numpyro_distributions.powerlawredshift method)": [[83, "gwinferno.numpyro_distributions.PowerlawRedshift.to_event"]], "variance (gwinferno.numpyro_distributions.powerlawredshift property)": [[83, "gwinferno.numpyro_distributions.PowerlawRedshift.variance"]], "sine (class in gwinferno.numpyro_distributions)": [[84, "gwinferno.numpyro_distributions.Sine"]], "__call__() (gwinferno.numpyro_distributions.sine method)": [[84, "gwinferno.numpyro_distributions.Sine.__call__"]], "__init__() (gwinferno.numpyro_distributions.sine method)": [[84, "gwinferno.numpyro_distributions.Sine.__init__"]], "batch_shape (gwinferno.numpyro_distributions.sine property)": [[84, "gwinferno.numpyro_distributions.Sine.batch_shape"]], "cdf() (gwinferno.numpyro_distributions.sine method)": [[84, "gwinferno.numpyro_distributions.Sine.cdf"]], "enumerate_support() (gwinferno.numpyro_distributions.sine method)": [[84, "gwinferno.numpyro_distributions.Sine.enumerate_support"]], "event_dim (gwinferno.numpyro_distributions.sine property)": [[84, "gwinferno.numpyro_distributions.Sine.event_dim"]], "event_shape (gwinferno.numpyro_distributions.sine property)": [[84, "gwinferno.numpyro_distributions.Sine.event_shape"]], "expand() (gwinferno.numpyro_distributions.sine method)": [[84, "gwinferno.numpyro_distributions.Sine.expand"]], "expand_by() (gwinferno.numpyro_distributions.sine method)": [[84, "gwinferno.numpyro_distributions.Sine.expand_by"]], "icdf() (gwinferno.numpyro_distributions.sine method)": [[84, "gwinferno.numpyro_distributions.Sine.icdf"]], "infer_shapes() (gwinferno.numpyro_distributions.sine class method)": [[84, "gwinferno.numpyro_distributions.Sine.infer_shapes"]], "log_prob() (gwinferno.numpyro_distributions.sine method)": [[84, "gwinferno.numpyro_distributions.Sine.log_prob"]], "mask() (gwinferno.numpyro_distributions.sine method)": [[84, "gwinferno.numpyro_distributions.Sine.mask"]], "mean (gwinferno.numpyro_distributions.sine property)": [[84, "gwinferno.numpyro_distributions.Sine.mean"]], "sample() (gwinferno.numpyro_distributions.sine method)": [[84, "gwinferno.numpyro_distributions.Sine.sample"]], "sample_with_intermediates() (gwinferno.numpyro_distributions.sine method)": [[84, "gwinferno.numpyro_distributions.Sine.sample_with_intermediates"]], "shape() (gwinferno.numpyro_distributions.sine method)": [[84, "gwinferno.numpyro_distributions.Sine.shape"]], "to_event() (gwinferno.numpyro_distributions.sine method)": [[84, "gwinferno.numpyro_distributions.Sine.to_event"]], "variance (gwinferno.numpyro_distributions.sine property)": [[84, "gwinferno.numpyro_distributions.Sine.variance"]], "cumtrapz() (in module gwinferno.numpyro_distributions)": [[85, "gwinferno.numpyro_distributions.cumtrapz"]], "gwinferno.parameter_estimation": [[86, "module-gwinferno.parameter_estimation"]], "gwinferno.parameter_estimation.detectors": [[87, "module-gwinferno.parameter_estimation.detectors"]], "detector (class in gwinferno.parameter_estimation.detectors)": [[88, "gwinferno.parameter_estimation.detectors.Detector"]], "__call__() (gwinferno.parameter_estimation.detectors.detector method)": [[88, "gwinferno.parameter_estimation.detectors.Detector.__call__"]], "__init__() (gwinferno.parameter_estimation.detectors.detector method)": [[88, "gwinferno.parameter_estimation.detectors.Detector.__init__"]], "h1 (class in gwinferno.parameter_estimation.detectors)": [[89, "gwinferno.parameter_estimation.detectors.H1"]], "__call__() (gwinferno.parameter_estimation.detectors.h1 method)": [[89, "gwinferno.parameter_estimation.detectors.H1.__call__"]], "__init__() (gwinferno.parameter_estimation.detectors.h1 method)": [[89, "gwinferno.parameter_estimation.detectors.H1.__init__"]], "l1 (class in gwinferno.parameter_estimation.detectors)": [[90, "gwinferno.parameter_estimation.detectors.L1"]], "__call__() (gwinferno.parameter_estimation.detectors.l1 method)": [[90, "gwinferno.parameter_estimation.detectors.L1.__call__"]], "__init__() (gwinferno.parameter_estimation.detectors.l1 method)": [[90, "gwinferno.parameter_estimation.detectors.L1.__init__"]], "v1 (class in gwinferno.parameter_estimation.detectors)": [[91, "gwinferno.parameter_estimation.detectors.V1"]], "__call__() (gwinferno.parameter_estimation.detectors.v1 method)": [[91, "gwinferno.parameter_estimation.detectors.V1.__call__"]], "__init__() (gwinferno.parameter_estimation.detectors.v1 method)": [[91, "gwinferno.parameter_estimation.detectors.V1.__init__"]], "construct_arm() (in module gwinferno.parameter_estimation.detectors)": [[92, "gwinferno.parameter_estimation.detectors.construct_arm"]], "get_detector_tensor() (in module gwinferno.parameter_estimation.detectors)": [[93, "gwinferno.parameter_estimation.detectors.get_detector_tensor"]], "get_geocentric_vertex() (in module gwinferno.parameter_estimation.detectors)": [[94, "gwinferno.parameter_estimation.detectors.get_geocentric_vertex"]], "make_get_polarization_tensor() (in module gwinferno.parameter_estimation.detectors)": [[95, "gwinferno.parameter_estimation.detectors.make_get_polarization_tensor"]], "gwinferno.parameter_estimation.likelihood": [[96, "module-gwinferno.parameter_estimation.likelihood"]], "inner_product() (in module gwinferno.parameter_estimation.likelihood)": [[97, "gwinferno.parameter_estimation.likelihood.inner_product"]], "log_likelihood() (in module gwinferno.parameter_estimation.likelihood)": [[98, "gwinferno.parameter_estimation.likelihood.log_likelihood"]], "log_likelihood_det() (in module gwinferno.parameter_estimation.likelihood)": [[99, "gwinferno.parameter_estimation.likelihood.log_likelihood_det"]], "matched_filter_snr() (in module gwinferno.parameter_estimation.likelihood)": [[100, "gwinferno.parameter_estimation.likelihood.matched_filter_snr"]], "noise_log_likelihood() (in module gwinferno.parameter_estimation.likelihood)": [[101, "gwinferno.parameter_estimation.likelihood.noise_log_likelihood"]], "noise_log_likelihood_det() (in module gwinferno.parameter_estimation.likelihood)": [[102, "gwinferno.parameter_estimation.likelihood.noise_log_likelihood_det"]], "noise_weighted_inner_product() (in module gwinferno.parameter_estimation.likelihood)": [[103, "gwinferno.parameter_estimation.likelihood.noise_weighted_inner_product"]], "optimal_snr_squared() (in module gwinferno.parameter_estimation.likelihood)": [[104, "gwinferno.parameter_estimation.likelihood.optimal_snr_squared"]], "gwinferno.pipeline": [[105, "module-gwinferno.pipeline"]], "gwinferno.pipeline.analysis": [[106, "module-gwinferno.pipeline.analysis"]], "totalvtcalculator (class in gwinferno.pipeline.analysis)": [[107, "gwinferno.pipeline.analysis.TotalVTCalculator"]], "__call__() (gwinferno.pipeline.analysis.totalvtcalculator method)": [[107, "gwinferno.pipeline.analysis.TotalVTCalculator.__call__"]], "__init__() (gwinferno.pipeline.analysis.totalvtcalculator method)": [[107, "gwinferno.pipeline.analysis.TotalVTCalculator.__init__"]], "construct_hierarchical_model() (in module gwinferno.pipeline.analysis)": [[108, "gwinferno.pipeline.analysis.construct_hierarchical_model"]], "find_map() (in module gwinferno.pipeline.analysis)": [[109, "gwinferno.pipeline.analysis.find_map"]], "hierarchical_likelihood() (in module gwinferno.pipeline.analysis)": [[110, "gwinferno.pipeline.analysis.hierarchical_likelihood"]], "hierarchical_likelihood_in_log() (in module gwinferno.pipeline.analysis)": [[111, "gwinferno.pipeline.analysis.hierarchical_likelihood_in_log"]], "logmu_logneff_injections_log() (in module gwinferno.pipeline.analysis)": [[112, "gwinferno.pipeline.analysis.logmu_logneff_injections_log"]], "mu_neff_injections() (in module gwinferno.pipeline.analysis)": [[113, "gwinferno.pipeline.analysis.mu_neff_injections"]], "per_event_log_bayes_factor_log_neffs() (in module gwinferno.pipeline.analysis)": [[114, "gwinferno.pipeline.analysis.per_event_log_bayes_factor_log_neffs"]], "per_event_log_bayes_factor_log_neffs_log() (in module gwinferno.pipeline.analysis)": [[115, "gwinferno.pipeline.analysis.per_event_log_bayes_factor_log_neffs_log"]], "gwinferno.pipeline.parser": [[116, "module-gwinferno.pipeline.parser"]], "configreader (class in gwinferno.pipeline.parser)": [[117, "gwinferno.pipeline.parser.ConfigReader"]], "__call__() (gwinferno.pipeline.parser.configreader method)": [[117, "gwinferno.pipeline.parser.ConfigReader.__call__"]], "__init__() (gwinferno.pipeline.parser.configreader method)": [[117, "gwinferno.pipeline.parser.ConfigReader.__init__"]], "popmixturemodel (class in gwinferno.pipeline.parser)": [[118, "gwinferno.pipeline.parser.PopMixtureModel"]], "__call__() (gwinferno.pipeline.parser.popmixturemodel method)": [[118, "gwinferno.pipeline.parser.PopMixtureModel.__call__"]], "__init__() (gwinferno.pipeline.parser.popmixturemodel method)": [[118, "gwinferno.pipeline.parser.PopMixtureModel.__init__"]], "popmodel (class in gwinferno.pipeline.parser)": [[119, "gwinferno.pipeline.parser.PopModel"]], "__call__() (gwinferno.pipeline.parser.popmodel method)": [[119, "gwinferno.pipeline.parser.PopModel.__call__"]], "__init__() (gwinferno.pipeline.parser.popmodel method)": [[119, "gwinferno.pipeline.parser.PopModel.__init__"]], "popprior (class in gwinferno.pipeline.parser)": [[120, "gwinferno.pipeline.parser.PopPrior"]], "__call__() (gwinferno.pipeline.parser.popprior method)": [[120, "gwinferno.pipeline.parser.PopPrior.__call__"]], "__init__() (gwinferno.pipeline.parser.popprior method)": [[120, "gwinferno.pipeline.parser.PopPrior.__init__"]], "load_base_parser() (in module gwinferno.pipeline.parser)": [[121, "gwinferno.pipeline.parser.load_base_parser"]], "load_dist_from_string() (in module gwinferno.pipeline.parser)": [[122, "gwinferno.pipeline.parser.load_dist_from_string"]], "load_model_from_python_file() (in module gwinferno.pipeline.parser)": [[123, "gwinferno.pipeline.parser.load_model_from_python_file"]], "gwinferno.postprocess": [[124, "module-gwinferno.postprocess"]], "gwinferno.postprocess.calculate_ppds": [[125, "module-gwinferno.postprocess.calculate_ppds"]], "calculate_chieff_bspline_ppds() (in module gwinferno.postprocess.calculate_ppds)": [[126, "gwinferno.postprocess.calculate_ppds.calculate_chieff_bspline_ppds"]], "calculate_iid_spin_bspline_ppds() (in module gwinferno.postprocess.calculate_ppds)": [[127, "gwinferno.postprocess.calculate_ppds.calculate_iid_spin_bspline_ppds"]], "calculate_iid_spin_bspline_weights() (in module gwinferno.postprocess.calculate_ppds)": [[128, "gwinferno.postprocess.calculate_ppds.calculate_iid_spin_bspline_weights"]], "calculate_ind_spin_bspline_ppds() (in module gwinferno.postprocess.calculate_ppds)": [[129, "gwinferno.postprocess.calculate_ppds.calculate_ind_spin_bspline_ppds"]], "calculate_m1_bspline_q_powerlaw_ppds() (in module gwinferno.postprocess.calculate_ppds)": [[130, "gwinferno.postprocess.calculate_ppds.calculate_m1_bspline_q_powerlaw_ppds"]], "calculate_m1m2_bspline_ppds() (in module gwinferno.postprocess.calculate_ppds)": [[131, "gwinferno.postprocess.calculate_ppds.calculate_m1m2_bspline_ppds"]], "calculate_m1q_bspline_ppds() (in module gwinferno.postprocess.calculate_ppds)": [[132, "gwinferno.postprocess.calculate_ppds.calculate_m1q_bspline_ppds"]], "calculate_m1q_bspline_weights() (in module gwinferno.postprocess.calculate_ppds)": [[133, "gwinferno.postprocess.calculate_ppds.calculate_m1q_bspline_weights"]], "calculate_m1q_ppds_plbspline_model() (in module gwinferno.postprocess.calculate_ppds)": [[134, "gwinferno.postprocess.calculate_ppds.calculate_m1q_ppds_plbspline_model"]], "calculate_powerbspline_rate_of_z_ppds() (in module gwinferno.postprocess.calculate_ppds)": [[135, "gwinferno.postprocess.calculate_ppds.calculate_powerbspline_rate_of_z_ppds"]], "calculate_powerlaw_rate_of_z_ppds() (in module gwinferno.postprocess.calculate_ppds)": [[136, "gwinferno.postprocess.calculate_ppds.calculate_powerlaw_rate_of_z_ppds"]], "gwinferno.postprocess.plotting": [[137, "module-gwinferno.postprocess.plotting"]], "plot_chieff_dist() (in module gwinferno.postprocess.plotting)": [[138, "gwinferno.postprocess.plotting.plot_chieff_dist"]], "plot_iid_spin_dist() (in module gwinferno.postprocess.plotting)": [[139, "gwinferno.postprocess.plotting.plot_iid_spin_dist"]], "plot_ind_spin_dist() (in module gwinferno.postprocess.plotting)": [[140, "gwinferno.postprocess.plotting.plot_ind_spin_dist"]], "plot_m1_vs_z_ppc() (in module gwinferno.postprocess.plotting)": [[141, "gwinferno.postprocess.plotting.plot_m1_vs_z_ppc"]], "plot_mass_dist() (in module gwinferno.postprocess.plotting)": [[142, "gwinferno.postprocess.plotting.plot_mass_dist"]], "plot_ppc_brontosaurus() (in module gwinferno.postprocess.plotting)": [[143, "gwinferno.postprocess.plotting.plot_ppc_brontosaurus"]], "plot_rofz() (in module gwinferno.postprocess.plotting)": [[144, "gwinferno.postprocess.plotting.plot_rofz"]], "gwinferno.preprocess": [[145, "module-gwinferno.preprocess"]], "gwinferno.preprocess.conversions": [[146, "module-gwinferno.preprocess.conversions"]], "alpha_beta_from_mu_var() (in module gwinferno.preprocess.conversions)": [[147, "gwinferno.preprocess.conversions.alpha_beta_from_mu_var"]], "chieff_from_q_component_spins() (in module gwinferno.preprocess.conversions)": [[148, "gwinferno.preprocess.conversions.chieff_from_q_component_spins"]], "chip_from_q_component_spins() (in module gwinferno.preprocess.conversions)": [[149, "gwinferno.preprocess.conversions.chip_from_q_component_spins"]], "mu_var_from_alpha_beta() (in module gwinferno.preprocess.conversions)": [[150, "gwinferno.preprocess.conversions.mu_var_from_alpha_beta"]], "gwinferno.preprocess.data_collection": [[151, "module-gwinferno.preprocess.data_collection"]], "apply_priors() (in module gwinferno.preprocess.data_collection)": [[152, "gwinferno.preprocess.data_collection.apply_priors"]], "convert_component_spin_posteriors_to_chieff() (in module gwinferno.preprocess.data_collection)": [[153, "gwinferno.preprocess.data_collection.convert_component_spin_posteriors_to_chieff"]], "dl_2_prior_on_z() (in module gwinferno.preprocess.data_collection)": [[154, "gwinferno.preprocess.data_collection.dl_2_prior_on_z"]], "downsample_posteriors_to_consistent_nsamps() (in module gwinferno.preprocess.data_collection)": [[155, "gwinferno.preprocess.data_collection.downsample_posteriors_to_consistent_nsamps"]], "load_catalog_from_metadata() (in module gwinferno.preprocess.data_collection)": [[156, "gwinferno.preprocess.data_collection.load_catalog_from_metadata"]], "load_posterior_samples() (in module gwinferno.preprocess.data_collection)": [[157, "gwinferno.preprocess.data_collection.load_posterior_samples"]], "p_m1src_q_z_lal_pe_prior() (in module gwinferno.preprocess.data_collection)": [[158, "gwinferno.preprocess.data_collection.p_m1src_q_z_lal_pe_prior"]], "preprocess_data() (in module gwinferno.preprocess.data_collection)": [[159, "gwinferno.preprocess.data_collection.preprocess_data"]], "setup_posterior_samples_and_injections() (in module gwinferno.preprocess.data_collection)": [[160, "gwinferno.preprocess.data_collection.setup_posterior_samples_and_injections"]], "gwinferno.preprocess.priors": [[161, "module-gwinferno.preprocess.priors"]], "di() (in module gwinferno.preprocess.priors)": [[162, "gwinferno.preprocess.priors.Di"]], "chi_effective_prior_from_aligned_spins() (in module gwinferno.preprocess.priors)": [[163, "gwinferno.preprocess.priors.chi_effective_prior_from_aligned_spins"]], "chi_effective_prior_from_isotropic_spins() (in module gwinferno.preprocess.priors)": [[164, "gwinferno.preprocess.priors.chi_effective_prior_from_isotropic_spins"]], "chi_p_prior_from_isotropic_spins() (in module gwinferno.preprocess.priors)": [[165, "gwinferno.preprocess.priors.chi_p_prior_from_isotropic_spins"]], "chi_p_prior_given_chi_eff_q() (in module gwinferno.preprocess.priors)": [[166, "gwinferno.preprocess.priors.chi_p_prior_given_chi_eff_q"]], "joint_prior_from_isotropic_spins() (in module gwinferno.preprocess.priors)": [[167, "gwinferno.preprocess.priors.joint_prior_from_isotropic_spins"]], "gwinferno.preprocess.selection": [[168, "module-gwinferno.preprocess.selection"]], "convert_component_spin_injections_to_chieff() (in module gwinferno.preprocess.selection)": [[169, "gwinferno.preprocess.selection.convert_component_spin_injections_to_chieff"]], "get_injection_dict() (in module gwinferno.preprocess.selection)": [[170, "gwinferno.preprocess.selection.get_injection_dict"]], "get_semianlytic_injection_dict() (in module gwinferno.preprocess.selection)": [[171, "gwinferno.preprocess.selection.get_semianlytic_injection_dict"]], "load_injections() (in module gwinferno.preprocess.selection)": [[172, "gwinferno.preprocess.selection.load_injections"]], "resample_injections() (in module gwinferno.preprocess.selection)": [[173, "gwinferno.preprocess.selection.resample_injections"]], "gwinferno": [[175, "module-gwinferno"]]}})