Search.setIndex({"docnames": ["Using Basis Splines", "api/gwinferno.cosmology", "api/gwinferno.cosmology.Cosmology", "api/gwinferno.distributions", "api/gwinferno.distributions.betadist", "api/gwinferno.distributions.ln_beta_fct", "api/gwinferno.distributions.log_logistic_unit", "api/gwinferno.distributions.logistic_unit", "api/gwinferno.distributions.powerlaw_logit_pdf", "api/gwinferno.distributions.powerlaw_pdf", "api/gwinferno.distributions.truncnorm_pdf", "api/gwinferno.interpolation", "api/gwinferno.interpolation.BSpline", "api/gwinferno.interpolation.BasisSpline", "api/gwinferno.interpolation.LogXBSpline", "api/gwinferno.interpolation.LogXLogYBSpline", "api/gwinferno.interpolation.LogYBSpline", "api/gwinferno.interpolation.NaturalCubicUnivariateSpline", "api/gwinferno.interpolation.RectBivariateBasisSpline", "api/gwinferno.models", "api/gwinferno.models.bsplines", "api/gwinferno.models.bsplines.joint", "api/gwinferno.models.bsplines.joint.BSplineJointMassRatioChiEffective", "api/gwinferno.models.bsplines.joint.Base2DBSplineModel", "api/gwinferno.models.bsplines.separable", "api/gwinferno.models.bsplines.separable.BSplineEffectiveSpinDims", "api/gwinferno.models.bsplines.separable.BSplineIIDComponentMasses", "api/gwinferno.models.bsplines.separable.BSplineIIDSpinMagnitudes", "api/gwinferno.models.bsplines.separable.BSplineIIDSpinTilts", "api/gwinferno.models.bsplines.separable.BSplineIndependentComponentMasses", "api/gwinferno.models.bsplines.separable.BSplineIndependentSpinMagnitudes", "api/gwinferno.models.bsplines.separable.BSplineIndependentSpinTilts", "api/gwinferno.models.bsplines.separable.BSplinePrimaryBSplineRatio", "api/gwinferno.models.bsplines.separable.BSplinePrimaryPowerlawRatio", "api/gwinferno.models.bsplines.separable.PLPeakPrimaryBSplineRatio", "api/gwinferno.models.bsplines.single", "api/gwinferno.models.bsplines.single.BSplineChiEffective", "api/gwinferno.models.bsplines.single.BSplineChiPrecess", "api/gwinferno.models.bsplines.single.BSplineMass", "api/gwinferno.models.bsplines.single.BSplineRatio", "api/gwinferno.models.bsplines.single.BSplineRedshift", "api/gwinferno.models.bsplines.single.BSplineSpinMagnitude", "api/gwinferno.models.bsplines.single.BSplineSpinTilt", "api/gwinferno.models.bsplines.single.BSplineSymmetricChiEffective", "api/gwinferno.models.bsplines.single.Base1DBSplineModel", "api/gwinferno.models.bsplines.smoothing", "api/gwinferno.models.bsplines.smoothing.apply_difference_prior", "api/gwinferno.models.bsplines.smoothing.apply_twod_difference_prior", "api/gwinferno.models.bsplines.smoothing.get_adaptive_Lambda", "api/gwinferno.models.bsplines.smoothing.mixture_smoothing_parameter", "api/gwinferno.models.gwpopulation", "api/gwinferno.models.gwpopulation.gwpopulation", "api/gwinferno.models.gwpopulation.gwpopulation.PowerlawRedshiftModel", "api/gwinferno.models.gwpopulation.gwpopulation.beta_spin_magnitude", "api/gwinferno.models.gwpopulation.gwpopulation.iid_spin_magnitude", "api/gwinferno.models.gwpopulation.gwpopulation.iid_spin_tilt", "api/gwinferno.models.gwpopulation.gwpopulation.independent_spin_magnitude", "api/gwinferno.models.gwpopulation.gwpopulation.independent_spin_tilt", "api/gwinferno.models.gwpopulation.gwpopulation.mixture_isoalign_spin_tilt", "api/gwinferno.models.gwpopulation.gwpopulation.plpeak_primary_pdf", "api/gwinferno.models.gwpopulation.gwpopulation.plpeak_primary_ratio_pdf", "api/gwinferno.models.gwpopulation.gwpopulation.powerlaw_primary_ratio_falloff_pdf", "api/gwinferno.models.gwpopulation.gwpopulation.powerlaw_primary_ratio_pdf", "api/gwinferno.models.mass_gap", "api/gwinferno.models.mass_gap.logistic_unit", "api/gwinferno.models.mass_gap.plpeak_gap_primary_ratio_pdf", "api/gwinferno.models.mass_gap.powerlaw_gap_cutoff_primary_ratio_pdf", "api/gwinferno.models.mass_gap.powerlaw_gap_logit_ben_primary_pdf", "api/gwinferno.models.mass_gap.powerlaw_gap_logit_primary_pdf", "api/gwinferno.models.mass_gap.powerlaw_gap_primary_ratio_pdf", "api/gwinferno.models.spline_perturbation", "api/gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio", "api/gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio", "api/gwinferno.models.spline_perturbation.PowerlawSplineRedshiftModel", "api/gwinferno.numpyro_distributions", "api/gwinferno.numpyro_distributions.BSplineDistribution", "api/gwinferno.numpyro_distributions.Cosine", "api/gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw", "api/gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw", "api/gwinferno.numpyro_distributions.NumericallyNormalizedDistribition", "api/gwinferno.numpyro_distributions.PSplineCoeficientPrior", "api/gwinferno.numpyro_distributions.Powerlaw", "api/gwinferno.numpyro_distributions.PowerlawRedshift", "api/gwinferno.numpyro_distributions.Sine", "api/gwinferno.numpyro_distributions.cumtrapz", "api/gwinferno.parameter_estimation", "api/gwinferno.parameter_estimation.detectors", "api/gwinferno.parameter_estimation.detectors.Detector", "api/gwinferno.parameter_estimation.detectors.H1", "api/gwinferno.parameter_estimation.detectors.L1", "api/gwinferno.parameter_estimation.detectors.V1", "api/gwinferno.parameter_estimation.detectors.construct_arm", "api/gwinferno.parameter_estimation.detectors.get_detector_tensor", "api/gwinferno.parameter_estimation.detectors.get_geocentric_vertex", "api/gwinferno.parameter_estimation.detectors.make_get_polarization_tensor", "api/gwinferno.parameter_estimation.likelihood", "api/gwinferno.parameter_estimation.likelihood.inner_product", "api/gwinferno.parameter_estimation.likelihood.log_likelihood", "api/gwinferno.parameter_estimation.likelihood.log_likelihood_det", "api/gwinferno.parameter_estimation.likelihood.matched_filter_snr", "api/gwinferno.parameter_estimation.likelihood.noise_log_likelihood", "api/gwinferno.parameter_estimation.likelihood.noise_log_likelihood_det", "api/gwinferno.parameter_estimation.likelihood.noise_weighted_inner_product", "api/gwinferno.parameter_estimation.likelihood.optimal_snr_squared", "api/gwinferno.pipeline", "api/gwinferno.pipeline.analysis", "api/gwinferno.pipeline.analysis.TotalVTCalculator", "api/gwinferno.pipeline.analysis.construct_hierarchical_model", "api/gwinferno.pipeline.analysis.find_map", "api/gwinferno.pipeline.analysis.hierarchical_likelihood", "api/gwinferno.pipeline.analysis.hierarchical_likelihood_in_log", "api/gwinferno.pipeline.analysis.logmu_logneff_injections_log", "api/gwinferno.pipeline.analysis.mu_neff_injections", "api/gwinferno.pipeline.analysis.per_event_log_bayes_factor_log_neffs", "api/gwinferno.pipeline.analysis.per_event_log_bayes_factor_log_neffs_log", "api/gwinferno.pipeline.parser", "api/gwinferno.pipeline.parser.ConfigReader", "api/gwinferno.pipeline.parser.PopMixtureModel", "api/gwinferno.pipeline.parser.PopModel", "api/gwinferno.pipeline.parser.PopPrior", "api/gwinferno.pipeline.parser.load_base_parser", "api/gwinferno.pipeline.parser.load_dist_from_string", "api/gwinferno.pipeline.parser.load_model_from_python_file", "api/gwinferno.postprocess", "api/gwinferno.postprocess.calculate_ppds", "api/gwinferno.postprocess.calculate_ppds.calculate_chieff_bspline_ppds", "api/gwinferno.postprocess.calculate_ppds.calculate_iid_spin_bspline_ppds", "api/gwinferno.postprocess.calculate_ppds.calculate_iid_spin_bspline_weights", "api/gwinferno.postprocess.calculate_ppds.calculate_ind_spin_bspline_ppds", "api/gwinferno.postprocess.calculate_ppds.calculate_m1_bspline_q_powerlaw_ppds", "api/gwinferno.postprocess.calculate_ppds.calculate_m1m2_bspline_ppds", "api/gwinferno.postprocess.calculate_ppds.calculate_m1q_bspline_ppds", "api/gwinferno.postprocess.calculate_ppds.calculate_m1q_bspline_weights", "api/gwinferno.postprocess.calculate_ppds.calculate_m1q_ppds_plbspline_model", "api/gwinferno.postprocess.calculate_ppds.calculate_powerbspline_rate_of_z_ppds", "api/gwinferno.postprocess.calculate_ppds.calculate_powerlaw_rate_of_z_ppds", "api/gwinferno.postprocess.plotting", "api/gwinferno.postprocess.plotting.plot_chieff_dist", "api/gwinferno.postprocess.plotting.plot_iid_spin_dist", "api/gwinferno.postprocess.plotting.plot_ind_spin_dist", "api/gwinferno.postprocess.plotting.plot_m1_vs_z_ppc", "api/gwinferno.postprocess.plotting.plot_mass_dist", "api/gwinferno.postprocess.plotting.plot_ppc_brontosaurus", "api/gwinferno.postprocess.plotting.plot_rofz", "api/gwinferno.preprocess", "api/gwinferno.preprocess.conversions", "api/gwinferno.preprocess.conversions.alpha_beta_from_mu_var", "api/gwinferno.preprocess.conversions.chieff_from_q_component_spins", "api/gwinferno.preprocess.conversions.chip_from_q_component_spins", "api/gwinferno.preprocess.conversions.mu_var_from_alpha_beta", "api/gwinferno.preprocess.data_collection", "api/gwinferno.preprocess.data_collection.apply_priors", "api/gwinferno.preprocess.data_collection.convert_component_spin_posteriors_to_chieff", "api/gwinferno.preprocess.data_collection.dl_2_prior_on_z", "api/gwinferno.preprocess.data_collection.downsample_posteriors_to_consistent_nsamps", "api/gwinferno.preprocess.data_collection.load_catalog_from_metadata", "api/gwinferno.preprocess.data_collection.load_posterior_samples", "api/gwinferno.preprocess.data_collection.p_m1src_q_z_lal_pe_prior", "api/gwinferno.preprocess.data_collection.preprocess_data", "api/gwinferno.preprocess.data_collection.setup_posterior_samples_and_injections", "api/gwinferno.preprocess.priors", "api/gwinferno.preprocess.priors.Di", "api/gwinferno.preprocess.priors.chi_effective_prior_from_aligned_spins", "api/gwinferno.preprocess.priors.chi_effective_prior_from_isotropic_spins", "api/gwinferno.preprocess.priors.chi_p_prior_from_isotropic_spins", "api/gwinferno.preprocess.priors.chi_p_prior_given_chi_eff_q", "api/gwinferno.preprocess.priors.joint_prior_from_isotropic_spins", "api/gwinferno.preprocess.selection", "api/gwinferno.preprocess.selection.convert_component_spin_injections_to_chieff", "api/gwinferno.preprocess.selection.get_injection_dict", "api/gwinferno.preprocess.selection.get_semianlytic_injection_dict", "api/gwinferno.preprocess.selection.load_injections", "api/gwinferno.preprocess.selection.resample_injections", "example_usage", "index", "installation"], "filenames": ["Using Basis Splines.rst", "api/gwinferno.cosmology.rst", "api/gwinferno.cosmology.Cosmology.rst", "api/gwinferno.distributions.rst", "api/gwinferno.distributions.betadist.rst", "api/gwinferno.distributions.ln_beta_fct.rst", "api/gwinferno.distributions.log_logistic_unit.rst", "api/gwinferno.distributions.logistic_unit.rst", "api/gwinferno.distributions.powerlaw_logit_pdf.rst", "api/gwinferno.distributions.powerlaw_pdf.rst", "api/gwinferno.distributions.truncnorm_pdf.rst", "api/gwinferno.interpolation.rst", "api/gwinferno.interpolation.BSpline.rst", "api/gwinferno.interpolation.BasisSpline.rst", "api/gwinferno.interpolation.LogXBSpline.rst", "api/gwinferno.interpolation.LogXLogYBSpline.rst", "api/gwinferno.interpolation.LogYBSpline.rst", "api/gwinferno.interpolation.NaturalCubicUnivariateSpline.rst", "api/gwinferno.interpolation.RectBivariateBasisSpline.rst", "api/gwinferno.models.rst", "api/gwinferno.models.bsplines.rst", "api/gwinferno.models.bsplines.joint.rst", "api/gwinferno.models.bsplines.joint.BSplineJointMassRatioChiEffective.rst", "api/gwinferno.models.bsplines.joint.Base2DBSplineModel.rst", "api/gwinferno.models.bsplines.separable.rst", "api/gwinferno.models.bsplines.separable.BSplineEffectiveSpinDims.rst", "api/gwinferno.models.bsplines.separable.BSplineIIDComponentMasses.rst", "api/gwinferno.models.bsplines.separable.BSplineIIDSpinMagnitudes.rst", "api/gwinferno.models.bsplines.separable.BSplineIIDSpinTilts.rst", "api/gwinferno.models.bsplines.separable.BSplineIndependentComponentMasses.rst", "api/gwinferno.models.bsplines.separable.BSplineIndependentSpinMagnitudes.rst", "api/gwinferno.models.bsplines.separable.BSplineIndependentSpinTilts.rst", "api/gwinferno.models.bsplines.separable.BSplinePrimaryBSplineRatio.rst", "api/gwinferno.models.bsplines.separable.BSplinePrimaryPowerlawRatio.rst", "api/gwinferno.models.bsplines.separable.PLPeakPrimaryBSplineRatio.rst", "api/gwinferno.models.bsplines.single.rst", "api/gwinferno.models.bsplines.single.BSplineChiEffective.rst", "api/gwinferno.models.bsplines.single.BSplineChiPrecess.rst", "api/gwinferno.models.bsplines.single.BSplineMass.rst", "api/gwinferno.models.bsplines.single.BSplineRatio.rst", "api/gwinferno.models.bsplines.single.BSplineRedshift.rst", "api/gwinferno.models.bsplines.single.BSplineSpinMagnitude.rst", "api/gwinferno.models.bsplines.single.BSplineSpinTilt.rst", "api/gwinferno.models.bsplines.single.BSplineSymmetricChiEffective.rst", "api/gwinferno.models.bsplines.single.Base1DBSplineModel.rst", "api/gwinferno.models.bsplines.smoothing.rst", "api/gwinferno.models.bsplines.smoothing.apply_difference_prior.rst", "api/gwinferno.models.bsplines.smoothing.apply_twod_difference_prior.rst", "api/gwinferno.models.bsplines.smoothing.get_adaptive_Lambda.rst", "api/gwinferno.models.bsplines.smoothing.mixture_smoothing_parameter.rst", "api/gwinferno.models.gwpopulation.rst", "api/gwinferno.models.gwpopulation.gwpopulation.rst", "api/gwinferno.models.gwpopulation.gwpopulation.PowerlawRedshiftModel.rst", "api/gwinferno.models.gwpopulation.gwpopulation.beta_spin_magnitude.rst", "api/gwinferno.models.gwpopulation.gwpopulation.iid_spin_magnitude.rst", "api/gwinferno.models.gwpopulation.gwpopulation.iid_spin_tilt.rst", "api/gwinferno.models.gwpopulation.gwpopulation.independent_spin_magnitude.rst", "api/gwinferno.models.gwpopulation.gwpopulation.independent_spin_tilt.rst", "api/gwinferno.models.gwpopulation.gwpopulation.mixture_isoalign_spin_tilt.rst", "api/gwinferno.models.gwpopulation.gwpopulation.plpeak_primary_pdf.rst", "api/gwinferno.models.gwpopulation.gwpopulation.plpeak_primary_ratio_pdf.rst", "api/gwinferno.models.gwpopulation.gwpopulation.powerlaw_primary_ratio_falloff_pdf.rst", "api/gwinferno.models.gwpopulation.gwpopulation.powerlaw_primary_ratio_pdf.rst", "api/gwinferno.models.mass_gap.rst", "api/gwinferno.models.mass_gap.logistic_unit.rst", "api/gwinferno.models.mass_gap.plpeak_gap_primary_ratio_pdf.rst", "api/gwinferno.models.mass_gap.powerlaw_gap_cutoff_primary_ratio_pdf.rst", "api/gwinferno.models.mass_gap.powerlaw_gap_logit_ben_primary_pdf.rst", "api/gwinferno.models.mass_gap.powerlaw_gap_logit_primary_pdf.rst", "api/gwinferno.models.mass_gap.powerlaw_gap_primary_ratio_pdf.rst", "api/gwinferno.models.spline_perturbation.rst", "api/gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio.rst", "api/gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio.rst", "api/gwinferno.models.spline_perturbation.PowerlawSplineRedshiftModel.rst", "api/gwinferno.numpyro_distributions.rst", "api/gwinferno.numpyro_distributions.BSplineDistribution.rst", "api/gwinferno.numpyro_distributions.Cosine.rst", "api/gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.rst", "api/gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.rst", "api/gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.rst", "api/gwinferno.numpyro_distributions.PSplineCoeficientPrior.rst", "api/gwinferno.numpyro_distributions.Powerlaw.rst", "api/gwinferno.numpyro_distributions.PowerlawRedshift.rst", "api/gwinferno.numpyro_distributions.Sine.rst", "api/gwinferno.numpyro_distributions.cumtrapz.rst", "api/gwinferno.parameter_estimation.rst", "api/gwinferno.parameter_estimation.detectors.rst", "api/gwinferno.parameter_estimation.detectors.Detector.rst", "api/gwinferno.parameter_estimation.detectors.H1.rst", "api/gwinferno.parameter_estimation.detectors.L1.rst", "api/gwinferno.parameter_estimation.detectors.V1.rst", "api/gwinferno.parameter_estimation.detectors.construct_arm.rst", "api/gwinferno.parameter_estimation.detectors.get_detector_tensor.rst", "api/gwinferno.parameter_estimation.detectors.get_geocentric_vertex.rst", "api/gwinferno.parameter_estimation.detectors.make_get_polarization_tensor.rst", "api/gwinferno.parameter_estimation.likelihood.rst", "api/gwinferno.parameter_estimation.likelihood.inner_product.rst", "api/gwinferno.parameter_estimation.likelihood.log_likelihood.rst", "api/gwinferno.parameter_estimation.likelihood.log_likelihood_det.rst", "api/gwinferno.parameter_estimation.likelihood.matched_filter_snr.rst", "api/gwinferno.parameter_estimation.likelihood.noise_log_likelihood.rst", "api/gwinferno.parameter_estimation.likelihood.noise_log_likelihood_det.rst", "api/gwinferno.parameter_estimation.likelihood.noise_weighted_inner_product.rst", "api/gwinferno.parameter_estimation.likelihood.optimal_snr_squared.rst", "api/gwinferno.pipeline.rst", "api/gwinferno.pipeline.analysis.rst", "api/gwinferno.pipeline.analysis.TotalVTCalculator.rst", "api/gwinferno.pipeline.analysis.construct_hierarchical_model.rst", "api/gwinferno.pipeline.analysis.find_map.rst", "api/gwinferno.pipeline.analysis.hierarchical_likelihood.rst", "api/gwinferno.pipeline.analysis.hierarchical_likelihood_in_log.rst", "api/gwinferno.pipeline.analysis.logmu_logneff_injections_log.rst", "api/gwinferno.pipeline.analysis.mu_neff_injections.rst", "api/gwinferno.pipeline.analysis.per_event_log_bayes_factor_log_neffs.rst", "api/gwinferno.pipeline.analysis.per_event_log_bayes_factor_log_neffs_log.rst", "api/gwinferno.pipeline.parser.rst", "api/gwinferno.pipeline.parser.ConfigReader.rst", "api/gwinferno.pipeline.parser.PopMixtureModel.rst", "api/gwinferno.pipeline.parser.PopModel.rst", "api/gwinferno.pipeline.parser.PopPrior.rst", "api/gwinferno.pipeline.parser.load_base_parser.rst", "api/gwinferno.pipeline.parser.load_dist_from_string.rst", "api/gwinferno.pipeline.parser.load_model_from_python_file.rst", "api/gwinferno.postprocess.rst", "api/gwinferno.postprocess.calculate_ppds.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_chieff_bspline_ppds.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_iid_spin_bspline_ppds.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_iid_spin_bspline_weights.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_ind_spin_bspline_ppds.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_m1_bspline_q_powerlaw_ppds.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_m1m2_bspline_ppds.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_m1q_bspline_ppds.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_m1q_bspline_weights.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_m1q_ppds_plbspline_model.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_powerbspline_rate_of_z_ppds.rst", "api/gwinferno.postprocess.calculate_ppds.calculate_powerlaw_rate_of_z_ppds.rst", "api/gwinferno.postprocess.plotting.rst", "api/gwinferno.postprocess.plotting.plot_chieff_dist.rst", "api/gwinferno.postprocess.plotting.plot_iid_spin_dist.rst", "api/gwinferno.postprocess.plotting.plot_ind_spin_dist.rst", "api/gwinferno.postprocess.plotting.plot_m1_vs_z_ppc.rst", "api/gwinferno.postprocess.plotting.plot_mass_dist.rst", "api/gwinferno.postprocess.plotting.plot_ppc_brontosaurus.rst", "api/gwinferno.postprocess.plotting.plot_rofz.rst", "api/gwinferno.preprocess.rst", "api/gwinferno.preprocess.conversions.rst", "api/gwinferno.preprocess.conversions.alpha_beta_from_mu_var.rst", "api/gwinferno.preprocess.conversions.chieff_from_q_component_spins.rst", "api/gwinferno.preprocess.conversions.chip_from_q_component_spins.rst", "api/gwinferno.preprocess.conversions.mu_var_from_alpha_beta.rst", "api/gwinferno.preprocess.data_collection.rst", "api/gwinferno.preprocess.data_collection.apply_priors.rst", "api/gwinferno.preprocess.data_collection.convert_component_spin_posteriors_to_chieff.rst", "api/gwinferno.preprocess.data_collection.dl_2_prior_on_z.rst", "api/gwinferno.preprocess.data_collection.downsample_posteriors_to_consistent_nsamps.rst", "api/gwinferno.preprocess.data_collection.load_catalog_from_metadata.rst", "api/gwinferno.preprocess.data_collection.load_posterior_samples.rst", "api/gwinferno.preprocess.data_collection.p_m1src_q_z_lal_pe_prior.rst", "api/gwinferno.preprocess.data_collection.preprocess_data.rst", "api/gwinferno.preprocess.data_collection.setup_posterior_samples_and_injections.rst", "api/gwinferno.preprocess.priors.rst", "api/gwinferno.preprocess.priors.Di.rst", "api/gwinferno.preprocess.priors.chi_effective_prior_from_aligned_spins.rst", "api/gwinferno.preprocess.priors.chi_effective_prior_from_isotropic_spins.rst", "api/gwinferno.preprocess.priors.chi_p_prior_from_isotropic_spins.rst", "api/gwinferno.preprocess.priors.chi_p_prior_given_chi_eff_q.rst", "api/gwinferno.preprocess.priors.joint_prior_from_isotropic_spins.rst", "api/gwinferno.preprocess.selection.rst", "api/gwinferno.preprocess.selection.convert_component_spin_injections_to_chieff.rst", "api/gwinferno.preprocess.selection.get_injection_dict.rst", "api/gwinferno.preprocess.selection.get_semianlytic_injection_dict.rst", "api/gwinferno.preprocess.selection.load_injections.rst", "api/gwinferno.preprocess.selection.resample_injections.rst", "example_usage.rst", "index.rst", "installation.rst"], "titles": ["Using Basis Splines in Models", "gwinferno.cosmology", "gwinferno.cosmology.Cosmology", "gwinferno.distributions", "gwinferno.distributions.betadist", "gwinferno.distributions.ln_beta_fct", "gwinferno.distributions.log_logistic_unit", "gwinferno.distributions.logistic_unit", "gwinferno.distributions.powerlaw_logit_pdf", "gwinferno.distributions.powerlaw_pdf", "gwinferno.distributions.truncnorm_pdf", "gwinferno.interpolation", "gwinferno.interpolation.BSpline", "gwinferno.interpolation.BasisSpline", "gwinferno.interpolation.LogXBSpline", "gwinferno.interpolation.LogXLogYBSpline", "gwinferno.interpolation.LogYBSpline", "gwinferno.interpolation.NaturalCubicUnivariateSpline", "gwinferno.interpolation.RectBivariateBasisSpline", "gwinferno.models", "gwinferno.models.bsplines", "gwinferno.models.bsplines.joint", "gwinferno.models.bsplines.joint.BSplineJointMassRatioChiEffective", "gwinferno.models.bsplines.joint.Base2DBSplineModel", "gwinferno.models.bsplines.separable", "gwinferno.models.bsplines.separable.BSplineEffectiveSpinDims", "gwinferno.models.bsplines.separable.BSplineIIDComponentMasses", "gwinferno.models.bsplines.separable.BSplineIIDSpinMagnitudes", "gwinferno.models.bsplines.separable.BSplineIIDSpinTilts", "gwinferno.models.bsplines.separable.BSplineIndependentComponentMasses", "gwinferno.models.bsplines.separable.BSplineIndependentSpinMagnitudes", "gwinferno.models.bsplines.separable.BSplineIndependentSpinTilts", "gwinferno.models.bsplines.separable.BSplinePrimaryBSplineRatio", "gwinferno.models.bsplines.separable.BSplinePrimaryPowerlawRatio", "gwinferno.models.bsplines.separable.PLPeakPrimaryBSplineRatio", "gwinferno.models.bsplines.single", "gwinferno.models.bsplines.single.BSplineChiEffective", "gwinferno.models.bsplines.single.BSplineChiPrecess", "gwinferno.models.bsplines.single.BSplineMass", "gwinferno.models.bsplines.single.BSplineRatio", "gwinferno.models.bsplines.single.BSplineRedshift", "gwinferno.models.bsplines.single.BSplineSpinMagnitude", "gwinferno.models.bsplines.single.BSplineSpinTilt", "gwinferno.models.bsplines.single.BSplineSymmetricChiEffective", "gwinferno.models.bsplines.single.Base1DBSplineModel", "gwinferno.models.bsplines.smoothing", "gwinferno.models.bsplines.smoothing.apply_difference_prior", "gwinferno.models.bsplines.smoothing.apply_twod_difference_prior", "gwinferno.models.bsplines.smoothing.get_adaptive_Lambda", "gwinferno.models.bsplines.smoothing.mixture_smoothing_parameter", "gwinferno.models.gwpopulation", "gwinferno.models.gwpopulation.gwpopulation", "gwinferno.models.gwpopulation.gwpopulation.PowerlawRedshiftModel", "gwinferno.models.gwpopulation.gwpopulation.beta_spin_magnitude", "gwinferno.models.gwpopulation.gwpopulation.iid_spin_magnitude", "gwinferno.models.gwpopulation.gwpopulation.iid_spin_tilt", "gwinferno.models.gwpopulation.gwpopulation.independent_spin_magnitude", "gwinferno.models.gwpopulation.gwpopulation.independent_spin_tilt", "gwinferno.models.gwpopulation.gwpopulation.mixture_isoalign_spin_tilt", "gwinferno.models.gwpopulation.gwpopulation.plpeak_primary_pdf", "gwinferno.models.gwpopulation.gwpopulation.plpeak_primary_ratio_pdf", "gwinferno.models.gwpopulation.gwpopulation.powerlaw_primary_ratio_falloff_pdf", "gwinferno.models.gwpopulation.gwpopulation.powerlaw_primary_ratio_pdf", "gwinferno.models.mass_gap", "gwinferno.models.mass_gap.logistic_unit", "gwinferno.models.mass_gap.plpeak_gap_primary_ratio_pdf", "gwinferno.models.mass_gap.powerlaw_gap_cutoff_primary_ratio_pdf", "gwinferno.models.mass_gap.powerlaw_gap_logit_ben_primary_pdf", "gwinferno.models.mass_gap.powerlaw_gap_logit_primary_pdf", "gwinferno.models.mass_gap.powerlaw_gap_primary_ratio_pdf", "gwinferno.models.spline_perturbation", "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio", "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio", "gwinferno.models.spline_perturbation.PowerlawSplineRedshiftModel", "gwinferno.numpyro_distributions", "gwinferno.numpyro_distributions.BSplineDistribution", "gwinferno.numpyro_distributions.Cosine", "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw", "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw", "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition", "gwinferno.numpyro_distributions.PSplineCoeficientPrior", "gwinferno.numpyro_distributions.Powerlaw", "gwinferno.numpyro_distributions.PowerlawRedshift", "gwinferno.numpyro_distributions.Sine", "gwinferno.numpyro_distributions.cumtrapz", "gwinferno.parameter_estimation", "gwinferno.parameter_estimation.detectors", "gwinferno.parameter_estimation.detectors.Detector", "gwinferno.parameter_estimation.detectors.H1", "gwinferno.parameter_estimation.detectors.L1", "gwinferno.parameter_estimation.detectors.V1", "gwinferno.parameter_estimation.detectors.construct_arm", "gwinferno.parameter_estimation.detectors.get_detector_tensor", "gwinferno.parameter_estimation.detectors.get_geocentric_vertex", "gwinferno.parameter_estimation.detectors.make_get_polarization_tensor", "gwinferno.parameter_estimation.likelihood", "gwinferno.parameter_estimation.likelihood.inner_product", "gwinferno.parameter_estimation.likelihood.log_likelihood", "gwinferno.parameter_estimation.likelihood.log_likelihood_det", "gwinferno.parameter_estimation.likelihood.matched_filter_snr", "gwinferno.parameter_estimation.likelihood.noise_log_likelihood", "gwinferno.parameter_estimation.likelihood.noise_log_likelihood_det", "gwinferno.parameter_estimation.likelihood.noise_weighted_inner_product", "gwinferno.parameter_estimation.likelihood.optimal_snr_squared", "gwinferno.pipeline", "gwinferno.pipeline.analysis", "gwinferno.pipeline.analysis.TotalVTCalculator", "gwinferno.pipeline.analysis.construct_hierarchical_model", "gwinferno.pipeline.analysis.find_map", "gwinferno.pipeline.analysis.hierarchical_likelihood", "gwinferno.pipeline.analysis.hierarchical_likelihood_in_log", "gwinferno.pipeline.analysis.logmu_logneff_injections_log", "gwinferno.pipeline.analysis.mu_neff_injections", "gwinferno.pipeline.analysis.per_event_log_bayes_factor_log_neffs", "gwinferno.pipeline.analysis.per_event_log_bayes_factor_log_neffs_log", "gwinferno.pipeline.parser", "gwinferno.pipeline.parser.ConfigReader", "gwinferno.pipeline.parser.PopMixtureModel", "gwinferno.pipeline.parser.PopModel", "gwinferno.pipeline.parser.PopPrior", "gwinferno.pipeline.parser.load_base_parser", "gwinferno.pipeline.parser.load_dist_from_string", "gwinferno.pipeline.parser.load_model_from_python_file", "gwinferno.postprocess", "gwinferno.postprocess.calculate_ppds", "gwinferno.postprocess.calculate_ppds.calculate_chieff_bspline_ppds", "gwinferno.postprocess.calculate_ppds.calculate_iid_spin_bspline_ppds", "gwinferno.postprocess.calculate_ppds.calculate_iid_spin_bspline_weights", "gwinferno.postprocess.calculate_ppds.calculate_ind_spin_bspline_ppds", "gwinferno.postprocess.calculate_ppds.calculate_m1_bspline_q_powerlaw_ppds", "gwinferno.postprocess.calculate_ppds.calculate_m1m2_bspline_ppds", "gwinferno.postprocess.calculate_ppds.calculate_m1q_bspline_ppds", "gwinferno.postprocess.calculate_ppds.calculate_m1q_bspline_weights", "gwinferno.postprocess.calculate_ppds.calculate_m1q_ppds_plbspline_model", "gwinferno.postprocess.calculate_ppds.calculate_powerbspline_rate_of_z_ppds", "gwinferno.postprocess.calculate_ppds.calculate_powerlaw_rate_of_z_ppds", "gwinferno.postprocess.plotting", "gwinferno.postprocess.plotting.plot_chieff_dist", "gwinferno.postprocess.plotting.plot_iid_spin_dist", "gwinferno.postprocess.plotting.plot_ind_spin_dist", "gwinferno.postprocess.plotting.plot_m1_vs_z_ppc", "gwinferno.postprocess.plotting.plot_mass_dist", "gwinferno.postprocess.plotting.plot_ppc_brontosaurus", "gwinferno.postprocess.plotting.plot_rofz", "gwinferno.preprocess", "gwinferno.preprocess.conversions", "gwinferno.preprocess.conversions.alpha_beta_from_mu_var", "gwinferno.preprocess.conversions.chieff_from_q_component_spins", "gwinferno.preprocess.conversions.chip_from_q_component_spins", "gwinferno.preprocess.conversions.mu_var_from_alpha_beta", "gwinferno.preprocess.data_collection", "gwinferno.preprocess.data_collection.apply_priors", "gwinferno.preprocess.data_collection.convert_component_spin_posteriors_to_chieff", "gwinferno.preprocess.data_collection.dl_2_prior_on_z", "gwinferno.preprocess.data_collection.downsample_posteriors_to_consistent_nsamps", "gwinferno.preprocess.data_collection.load_catalog_from_metadata", "gwinferno.preprocess.data_collection.load_posterior_samples", "gwinferno.preprocess.data_collection.p_m1src_q_z_lal_pe_prior", "gwinferno.preprocess.data_collection.preprocess_data", "gwinferno.preprocess.data_collection.setup_posterior_samples_and_injections", "gwinferno.preprocess.priors", "gwinferno.preprocess.priors.Di", "gwinferno.preprocess.priors.chi_effective_prior_from_aligned_spins", "gwinferno.preprocess.priors.chi_effective_prior_from_isotropic_spins", "gwinferno.preprocess.priors.chi_p_prior_from_isotropic_spins", "gwinferno.preprocess.priors.chi_p_prior_given_chi_eff_q", "gwinferno.preprocess.priors.joint_prior_from_isotropic_spins", "gwinferno.preprocess.selection", "gwinferno.preprocess.selection.convert_component_spin_injections_to_chieff", "gwinferno.preprocess.selection.get_injection_dict", "gwinferno.preprocess.selection.get_semianlytic_injection_dict", "gwinferno.preprocess.selection.load_injections", "gwinferno.preprocess.selection.resample_injections", "Quick Start", "Welcome to GWInferno\u2019s documentation!", "Installation"], "terms": {"modul": [1, 3, 11, 19, 20, 21, 24, 35, 45, 50, 63, 70, 74, 85, 86, 95, 104, 105, 115, 123, 124, 136, 144, 145, 148, 150, 160, 167], "basic": [1, 3], "calcul": [1, 3, 11, 45, 86, 95, 105, 106, 109, 110, 111, 112, 113, 114, 124, 147, 148, 165, 166, 173], "us": [1, 2, 11, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 108, 109, 110, 136, 159, 160, 165, 166, 174, 175], "jax": [1, 3, 11, 17, 50, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 95, 108, 109, 110, 111, 112, 113, 114, 159, 173, 174, 175], "class": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 51, 52, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 105, 106, 115, 116, 117, 118, 119, 129, 130], "ho": 2, "omega_matt": 2, "omega_radi": 2, "omega_lambda": 2, "distance_unit": 2, "mpc": 2, "initial_z_integ": 2, "2": [2, 26, 29, 33, 38, 40, 72, 80, 129, 130, 161, 173], "3": [2, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 71, 83, 106, 109, 110, 129, 131, 132, 133, 142, 173, 175], "sourc": [2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174], "base": [2, 12, 13, 14, 15, 16, 17, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 106, 116, 117, 118, 119, 169], "object": [2, 13, 17, 18, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 44, 52, 71, 72, 87, 106, 109, 110, 116, 118, 119], "implement": [2, 17], "specif": [2, 175], "cosmolog": 2, "comput": [2, 12, 13, 14, 15, 16, 40, 46, 47, 75, 76, 77, 78, 79, 80, 81, 82, 83, 162, 163, 164], "note": [2, 75, 76, 77, 78, 79, 80, 81, 82, 83, 161], "we": [2, 6, 7, 161, 162, 163, 164, 173, 174, 175], "work": 2, "cg": 2, "unit": [2, 6, 7, 8, 106], "throughout": 2, "so": 2, "must": [2, 173], "specifi": [2, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 159, 175], "": [2, 17, 71, 72, 109, 110, 161, 173], "1": [2, 4, 7, 12, 13, 14, 15, 16, 18, 23, 44, 46, 47, 53, 54, 56, 75, 76, 77, 78, 79, 80, 81, 82, 83, 106, 109, 125, 126, 127, 128, 129, 130, 131, 140, 142, 146, 147, 148, 149, 162, 163, 164, 169, 171, 173], "distanc": 2, "ar": [2, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 75, 76, 77, 78, 79, 80, 81, 82, 83, 159, 173], "cm": 2, "__init__": [2, 12, 13, 14, 15, 16, 17, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 106, 116, 117, 118, 119, 148], "__call__": [2, 12, 13, 14, 15, 16, 17, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 106, 116, 117, 118, 119], "arg": [2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 146, 147, 148, 149, 173], "kwarg": [2, 14, 15, 16, 18, 22, 23, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 116, 117, 118, 119, 155, 172], "call": [2, 17, 18, 22, 23, 52, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 109, 110, 116, 117, 118, 119, 165], "self": [2, 17, 18, 22, 23, 52, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 116, 117, 118, 119], "function": [2, 3, 17, 18, 22, 23, 45, 51, 52, 63, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 95, 105, 109, 110, 115, 116, 117, 118, 119, 124, 136, 145, 150, 160, 161, 162, 163, 164, 165, 166, 167, 169, 173], "method": [2, 12, 13, 14, 15, 16, 17, 18, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 52, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 106, 116, 117, 118, 119], "attribut": [2, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90], "dl2z": 2, "dl": 2, "dz": 2, "0": [2, 4, 9, 12, 13, 14, 15, 16, 18, 23, 26, 32, 39, 44, 47, 48, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 106, 108, 109, 110, 126, 127, 128, 129, 130, 131, 132, 141, 147, 148, 173], "001": 2, "return": [2, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 106, 108, 111, 112, 113, 114, 146, 147, 148, 149, 159, 161, 162, 163, 164, 165, 166], "redshift": [2, 40, 73, 106, 109, 110, 173], "each": [2, 75, 76, 77, 78, 79, 80, 81, 82, 83, 109, 110, 159, 173], "ddcdz": 2, "z": [2, 40, 52, 73, 106, 143, 153, 161], "fals": [2, 10, 12, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 75, 76, 77, 78, 79, 80, 81, 82, 83, 107, 109, 110, 142, 143, 151, 152, 156, 157, 158, 159, 168, 169, 171, 173], "c": [2, 71, 72, 73, 75, 175], "e": [2, 12, 13, 14, 15, 16, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 95, 124, 173], "dvcdz": 2, "dc": 2, "none": [2, 12, 13, 14, 15, 16, 17, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 109, 110, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 141, 142, 143, 156, 159, 169, 170, 171], "dvc": 2, "extend": 2, "max_dl": 2, "inf": 2, "max_dc": 2, "max_z": 2, "max_vc": 2, "integr": [2, 106, 109, 110, 111, 112, 113, 114], "solv": 2, "measur": 2, "logdvcdz": 2, "ln": 2, "when": [2, 75, 76, 77, 78, 79, 80, 81, 82, 83, 173], "construct": [2, 12, 13, 14, 15, 16, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], "probabl": [2, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 110], "distribut": [2, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 124, 146, 149, 173], "without": [2, 75, 76, 77, 78, 79, 80, 81, 82, 83], "overflow": 2, "error": 2, "z2dl": 2, "luminos": 2, "z2dc": 2, "z2e": 2, "sqrt": 2, "omegalambda": 2, "omegakappa": 2, "omegamatt": 2, "omegaradi": 2, "4": [2, 7, 12, 13, 14, 15, 16, 18, 47, 71, 72, 125, 126, 127, 128, 140], "pdf": [3, 4, 8, 9, 33, 34], "xx": [4, 8, 9, 10, 23, 44], "alpha": [4, 5, 8, 9, 53, 59, 60, 61, 62, 65, 66, 67, 68, 69, 71, 72, 77, 78, 81, 146, 149, 173], "beta": [4, 5, 26, 29, 33, 53, 60, 61, 62, 65, 66, 67, 68, 69, 71, 72, 146, 149, 173], "scale": [4, 7, 8, 173], "floor": [4, 9], "evalu": [4, 5, 8, 9, 12, 13, 14, 15, 16, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 75, 76, 77, 78, 79, 80, 81, 82, 83, 109, 110], "option": [4, 7, 9, 12, 13, 14, 15, 16, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 71, 72, 73, 106, 108, 109, 110, 146, 149], "max": [4, 8, 10], "vale": 4, "array_lik": [4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 146, 147, 148, 149], "point": [4, 8, 9], "float": [4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 26, 29, 32, 33, 34, 38, 39, 40, 46, 47, 71, 72, 73, 106, 108, 109, 110], "shape": [4, 5, 12, 13, 14, 15, 16, 18, 75, 76, 77, 78, 79, 80, 81, 82, 83, 109, 146, 149, 173], "paramet": [4, 5, 25, 46, 47, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 108, 109, 110, 145, 146, 149, 159, 173], "maximum": [4, 26, 29, 32, 33, 38, 40, 71, 72, 75, 76, 77, 78, 79, 81, 82, 83, 106, 109, 110, 146, 149, 162, 163, 164, 173], "valu": [4, 6, 7, 12, 13, 14, 15, 16, 18, 26, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 75, 76, 77, 78, 79, 80, 81, 82, 83, 162, 163, 164, 165, 166], "support": [4, 75, 76, 77, 78, 79, 80, 81, 82, 83, 173], "default": [4, 7, 9, 12, 13, 14, 15, 16, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 71, 72, 73, 106, 108, 109, 110, 146, 149], "lower": [4, 9], "bound": [4, 8, 9], "log": [5, 6, 10, 14, 15, 16, 46, 47, 75, 76, 77, 78, 79, 80, 81, 82, 83, 110, 111, 113, 114, 173], "fct": 5, "see": [5, 109, 110, 175], "x": [6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 36, 37, 38, 39, 40, 41, 42, 43, 44, 64, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 127, 137, 162, 163, 164], "x0": [6, 7], "soft": [6, 7, 8], "truncat": [6, 7, 8, 9, 26, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 173], "logist": [6, 7, 8], "input": [6, 7, 12, 13, 14, 15, 16, 18, 75, 76, 77, 78, 79, 80, 81, 82, 83, 146, 149, 150, 161, 162, 163, 164, 165, 166, 173], "arrai": [6, 7, 12, 13, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 109, 110, 111, 112, 113, 114, 146, 149, 159, 161, 162, 163, 164, 166], "want": [6, 7, 173], "appli": [6, 7], "sgn": 7, "sc": 7, "int": [7, 12, 13, 14, 15, 16, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 106, 108, 109, 110, 111, 112], "which": [7, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 75, 76, 77, 78, 79, 80, 81, 82, 83, 162, 163, 164], "side": [7, 75, 76, 77, 78, 79, 80, 81, 82, 83], "do": 7, "right": 7, "left": [7, 75, 76, 77, 78, 79, 80, 81, 82, 83], "where": [7, 159, 173], "higher": 7, "i": [7, 12, 13, 14, 15, 16, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 75, 76, 77, 78, 79, 80, 81, 82, 83, 95, 109, 124, 173, 174], "sharper": 7, "high": [8, 9, 10, 81, 173], "fall_off": [8, 61, 68], "mass": [8, 25, 26, 29, 32, 33, 34, 38, 39, 63, 71, 72, 109, 110, 147, 148, 162, 163, 164, 165, 166, 173], "powerlaw": [8, 9, 26, 29, 33, 34, 71, 173], "p": [8, 10, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 45, 109, 137, 162, 163, 164, 165, 166], "propto": [8, 10], "lpha": 8, "theta": [8, 10, 28, 31, 42], "x_": [8, 10], "mathrm": [8, 10], "min": [8, 10], "power": [8, 9, 71, 72, 73, 106], "law": [8, 9, 71, 72, 73, 106], "index": [8, 9, 71, 72, 159], "end": [8, 9], "low": [9, 10, 81, 173], "sharp": 9, "mu": [10, 112, 146, 149], "sig": 10, "mathcal": 10, "n": [10, 12, 13, 14, 15, 16, 80, 175], "sigma": 10, "n_df": [12, 13, 14, 15, 16], "knot": [12, 13, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 71, 72, 73], "interior_knot": [12, 13, 14, 15, 16], "xrang": [12, 13, 14, 15, 16, 18, 23, 44], "k": [12, 13, 14, 15, 16, 18, 71, 72, 125, 126, 127, 128], "normal": [12, 13, 14, 15, 16, 18, 40, 71, 72, 73, 109, 110, 173], "basissplin": 12, "basi": [12, 13, 14, 15, 16, 18, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 71, 73, 129, 130, 174], "spline": [12, 13, 14, 15, 16, 17, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 70, 71, 72, 73, 174], "b": [12, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 71, 72, 73], "number": [12, 13, 14, 15, 16, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 108, 109, 110, 111, 112, 159, 165, 166, 173], "degre": [12, 13, 14, 15, 16, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48], "freedom": [12, 13, 14, 15, 16, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44], "non": [12, 13, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 75, 76, 77, 78, 79, 80, 81, 82, 83], "uniform": [12, 13, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 106, 162, 163, 164, 173], "place": [12, 13, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44], "prefer": [12, 13, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44], "interior": [12, 13, 14, 15, 16], "tupl": [12, 13, 14, 15, 16, 18, 44, 75, 76, 77, 78, 79, 80, 81, 82, 83, 109, 146, 149], "domain": [12, 13, 14, 15, 16, 18, 36, 37, 38, 39, 40, 41, 42, 43, 44], "order": [12, 13, 14, 15, 16, 18, 46, 47], "cubcic": [12, 13, 14, 15, 16, 18, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44], "cubic": [12, 13, 14, 15, 16, 17, 18, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44], "bool": [12, 13, 14, 15, 16, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 75, 76, 77, 78, 79, 80, 81, 82, 83, 109, 110, 159], "flag": [12, 13, 14, 15, 16, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 109, 110], "whether": [12, 13, 14, 15, 16, 18], "numer": [12, 13, 14, 15, 16, 18, 165, 166], "coef": [12, 13, 14, 15, 16, 18, 22, 23, 26, 27, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 125, 126, 127, 128], "evalul": [12, 13, 14, 15, 16], "given": [12, 13, 14, 15, 16, 18, 36, 37, 38, 39, 40, 41, 42, 43, 44, 75, 76, 77, 78, 79, 80, 81, 82, 83, 108, 146, 147, 148, 149, 165, 166, 173], "coeffici": [12, 13, 14, 15, 16, 17, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 71, 72, 73], "compon": [12, 13, 14, 15, 16, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 109, 110, 117, 162, 163, 164, 165, 166, 173], "The": [12, 13, 14, 15, 16, 18, 36, 37, 38, 39, 40, 41, 42, 43, 44, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 173], "linear": [12, 13, 14, 15, 16, 18, 36, 37, 38, 39, 40, 41, 42, 43, 44], "combin": [12, 13, 14, 15, 16, 18, 36, 37, 38, 39, 40, 41, 42, 43, 44], "form": [12, 13, 14, 15, 16, 18], "design": [12, 13, 14, 15, 16, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44], "matrix": [12, 13, 14, 15, 16, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44], "eval": [12, 13, 14, 15, 16], "get_coeffici": [12, 13, 14, 15, 16], "y": [12, 13, 14, 15, 16, 17, 18, 84], "data": [12, 13, 14, 15, 16, 75, 76, 77, 78, 79, 80, 81, 82, 83, 109, 110, 150, 159, 173], "d": [12, 13, 14, 15, 16, 75, 76, 77, 78, 79, 80, 81, 82, 83], "norm": [12, 13, 14, 15, 16, 40, 173], "factor": [12, 13, 14, 15, 16, 18], "project": [12, 13, 14, 15, 16, 18, 36, 37, 38, 39, 40, 41, 42, 43, 44, 174], "onto": [12, 13, 14, 15, 16, 18, 36, 37, 38, 39, 40, 41, 42, 43, 44], "set": [12, 13, 14, 15, 16, 18, 109, 159, 166, 175], "true": [13, 14, 15, 16, 18, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 75, 76, 77, 78, 79, 80, 81, 82, 83, 107, 109, 110, 151, 156, 159, 173], "m": [13, 38, 71, 132, 141, 175], "01": [14, 15, 108], "bspline": [14, 16, 18, 71], "space": [14, 15, 16], "logybsplin": [15, 32, 33, 40, 44], "rang": [15, 16], "minim": 17, "port": 17, "scipi": [17, 161], "univariatesplin": 17, "restrict": 17, "onli": [17, 75, 76, 77, 78, 79, 80, 81, 82, 83, 175], "natur": 17, "boundari": 17, "condit": [17, 162, 163, 164, 165, 166], "from": [17, 20, 21, 24, 35, 47, 75, 76, 77, 78, 79, 80, 81, 82, 83, 109, 110, 111, 112, 113, 114, 147, 148, 165, 166, 169, 173], "jax_cosmo": 17, "xdf": 18, "ydf": 18, "yrang": [18, 23], "kx": 18, "ky": 18, "xbasi": 18, "ybasi": 18, "2d": [18, 21, 24, 47], "bivari": 18, "rectangular": 18, "direct": 18, "choic": 18, "norm_2d": 18, "store": [19, 20, 21, 24, 35, 45, 50, 63, 70, 105, 115, 136, 145, 150, 159, 160, 167], "defin": [19, 74, 147, 148, 161, 162, 163, 164, 173], "popul": [19, 20, 21, 24, 35, 44, 50, 63, 70, 105, 109, 124, 173], "chiknot": 22, "qknot": [22, 72, 131, 132], "chieff": [22, 25, 36, 43, 142], "q": [22, 25, 26, 29, 32, 33, 34, 39, 60, 61, 62, 65, 66, 67, 68, 69, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 132, 141, 147, 148, 162, 163, 164, 165, 166], "chieff_inj": [22, 25, 36, 43], "q_inj": [22, 32, 34, 39], "base2dbsplinemodel": 22, "ndim": [22, 23], "xnknot": 23, "ynknot": 23, "yy": 23, "xx_inj": [23, 44], "yy_inj": 23, "interpol": [23, 32, 33, 40, 44, 71, 73, 129, 130, 165, 166], "rectbivariatebasissplin": 23, "seper": 24, "independ": [24, 26, 75, 76, 77, 78, 79, 80, 81, 82, 83], "n_splines_": 25, "n_splines_p": 25, "chip": [25, 37, 152, 168], "chip_inj": [25, 37], "knots": 25, "knotsp": 25, "degree_": 25, "degree_p": 25, "chi": [25, 36, 43], "effect": [25, 36, 37, 43, 111, 112, 113, 114, 147, 148, 160, 165, 166], "precess": [25, 37, 148, 165, 166], "chi_p": [25, 37, 159, 164], "n_splines1": [25, 29, 30, 31], "primari": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 71, 72, 109, 110, 147, 148, 173], "n_splines2": [25, 29, 30, 31], "secondari": [25, 26, 27, 28, 29, 30, 31, 32, 71, 109, 110, 147, 148], "pe": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 109, 110, 173], "sampl": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 109, 110, 111, 112, 113, 114, 159, 165, 166, 173], "evalut": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44], "inject": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 71, 72, 73, 109, 110, 111, 112, 150, 159, 167, 173], "ecoef": 25, "pcoef": [25, 29, 30, 31], "pe_sampl": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44], "joint": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "densiti": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 75, 76, 77, 78, 79, 80, 81, 82, 83], "along": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 111, 112, 173], "posterior": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 109, 110, 124, 133, 150, 151, 154, 159, 165, 166, 173], "type": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83], "being": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44], "m1": [25, 26, 29, 32, 33, 34, 59, 60, 61, 62, 65, 66, 67, 68, 69, 71, 72], "m2": [25, 26, 29], "chi_eff": [25, 159, 162, 163], "If": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 173, 174], "ratio": [25, 26, 29, 32, 33, 34, 39, 71, 72, 147, 148, 162, 163, 164, 165, 166], "n_spline": [26, 27, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44], "m1_inj": [26, 29, 32, 33, 34], "m2_inj": [26, 29], "mmin": [26, 33, 34, 38, 59, 60, 61, 62, 65, 66, 67, 68, 69, 71, 72, 129, 130, 131, 132, 133, 141, 173], "mmax": [26, 32, 33, 38, 59, 60, 61, 62, 65, 66, 67, 68, 69, 71, 72, 109, 110, 129, 130, 131, 132, 133, 140, 141, 142, 173], "100": [26, 29, 32, 33, 38, 71, 72, 108, 109, 110, 129, 130, 131, 132, 133, 140, 141, 142, 173], "assum": [26, 27, 28, 29, 30, 31, 75, 76, 77, 78, 79, 80, 81, 82, 83, 173], "two": [26, 29, 173], "binari": [26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 41, 42, 43, 173], "ident": [26, 27, 28], "iid": [26, 27, 28, 75, 76, 77, 78, 79, 80, 81, 82, 83, 173], "minimum": [26, 29, 32, 33, 34, 38, 39, 71, 72, 75, 76, 77, 78, 79, 81, 82, 83, 173], "below": [26, 29, 32, 33, 34, 38, 39], "thi": [26, 29, 32, 33, 34, 38, 39, 40, 75, 76, 77, 78, 79, 80, 81, 82, 83, 173, 174], "abov": [26, 29, 32, 33, 38, 40], "slope": [26, 29], "a1": [27, 30, 54, 56, 147, 148], "a2": [27, 30, 54, 56, 147, 148], "a1_inj": [27, 30], "a2_inj": [27, 30], "spin": [27, 28, 30, 41, 146, 147, 148, 149, 151, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 169, 171, 173], "magnitud": [27, 28, 30, 41, 147, 148, 159, 162, 163, 164, 165, 166, 173], "both": [27, 28, 30, 31], "thei": [27, 28, 30, 31, 173], "indipend": [27, 28, 30, 31], "magntiud": [27, 30, 41], "ct1": [28, 31, 55, 57, 147, 148], "ct2": [28, 31, 55, 57, 147, 148], "ct1_inj": [28, 31], "ct2_inj": [28, 31], "cosin": [28, 31, 42], "tilt": [28, 31, 42, 138, 139, 147, 148, 173], "co": [28, 31, 40, 42, 73, 106, 147, 148], "knots1": [29, 30, 31], "knots2": [29, 30, 31], "mmin1": 29, "mmax1": 29, "mmin2": 29, "mmax2": 29, "degree1": [29, 30, 31], "degree2": [29, 30, 31], "idepend": 29, "scoef": [29, 30, 31, 128], "n_splines_m": 32, "n_splines_q": 32, "knots_m": 32, "knots_q": 32, "degree_m": 32, "degree_q": 32, "m1min": [32, 109, 110, 140, 142, 173], "m2min": [32, 71, 109, 110, 133, 173], "basis_m": 32, "basis_q": 32, "q1": 32, "q1_inj": 32, "ex": [32, 33, 40, 44], "mcoef": [32, 129, 130, 131, 132], "qcoef": [32, 131, 132], "gaussian": 34, "peak": [34, 173], "1d": [35, 173], "base1dbsplinemodel": [36, 37, 38, 39, 40, 41, 42, 43], "either": [36, 37, 38, 39, 40, 41, 42, 43, 44, 173], "eval_splin": [36, 37, 38, 39, 40, 41, 42, 43, 44], "inj_pdf": [36, 37, 38, 39, 40, 41, 42, 43, 44], "pe_pdf": [36, 37, 38, 39, 40, 41, 42, 43, 44], "truncate_dmat": [36, 37, 38, 39, 40, 41, 42, 43, 44], "dmat": [36, 37, 38, 39, 40, 41, 42, 43, 44], "ensur": [36, 37, 38, 39, 40, 41, 42, 43, 44, 109, 110], "outsid": [36, 37, 38, 39, 40, 41, 42, 43, 44], "interv": [36, 37, 38, 39, 40, 41, 42, 43, 44], "xmin": [36, 37, 38, 39, 40, 41, 42, 43, 44, 125, 126, 127, 128], "xmax": [36, 37, 38, 39, 40, 41, 42, 43, 44, 125, 126, 127, 128], "an": [37, 75, 76, 77, 78, 79, 80, 81, 82, 83, 159, 175], "m_inj": 38, "qmin": 39, "z_inj": [40, 52, 73], "dvdc": 40, "dvdc_inj": 40, "zmax": [40, 106, 140, 142], "differenti": [40, 73], "move": [40, 73, 106], "volum": [40, 73, 106], "a_inj": 41, "ct": [42, 58], "ct_inj": 42, "symmetr": 43, "about": 43, "zero": 43, "infer": [44, 75, 76, 77, 78, 79, 80, 81, 82, 83, 105, 108, 159, 173], "prior": [45, 46, 47, 137, 138, 139, 141, 143, 173], "inv_var": [46, 80], "differ": [46, 47, 173], "penalti": [46, 47], "invers": [46, 47, 75, 76, 77, 78, 79, 80, 81, 82, 83], "tune": 46, "inv_var_row": 47, "inv_var_col": 47, "degree_row": 47, "degree_col": 47, "equat": 47, "19": 47, "practic": 47, "eiler": 47, "marx": 47, "varianc": [47, 75, 76, 77, 78, 79, 80, 81, 82, 83, 146, 149], "axi": 47, "row": 47, "column": 47, "label": [48, 49, 173], "nknot": [48, 71, 72, 73, 125, 126, 127, 128, 129, 130, 131, 132, 133], "omega": 48, "5": [48, 49, 109, 110, 130, 133, 141, 173], "n_mix": 49, "20": 49, "log10bmin": 49, "log10bmax": 49, "reimplement": 50, "like": 50, "z_pe": [52, 73], "lamb": [52, 73, 82, 106, 109, 110, 134, 135, 173], "amax": [53, 54, 146, 149, 162, 163, 164, 165, 166], "alpha_mag": 54, "beta_mag": 54, "xi_tilt": [55, 57, 58], "sigma_tilt": [55, 58], "alpha_mag1": 56, "beta_mag1": 56, "alpha_mag2": 56, "beta_mag2": 56, "amax1": 56, "amax2": 56, "sigma_tilt1": 57, "sigma_tilt2": 57, "mpp": [59, 60, 65], "sigpp": [59, 60, 65], "lam": [59, 60, 65], "gap": 63, "relat": [63, 70], "gapmin": [65, 66, 67, 68, 69], "gapmax": 65, "gapwidth": 68, "perturb": [70, 73], "m1pe": [71, 72], "dict": [71, 72, 73, 109, 110, 159], "m1inj": [71, 72], "creat": [71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 175], "dictionari": [71, 72, 159], "estim": [71, 72, 73, 85, 108], "cutoff": [71, 72], "polynomi": [71, 72], "you": [71, 173], "wish": [71, 162, 163, 164], "jnp": [71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 173], "ndarrai": [71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83], "_description_": 71, "norm_p_m1": 71, "_type_": [71, 72, 73], "p_m1": [71, 72], "p_q": [71, 72], "smooth": 71, "delta_m": 71, "black": 71, "hole": 71, "size": [71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 109, 110, 111, 112, 113, 114], "bh": 71, "grid": [71, 75, 79, 82, 124], "qpe": 72, "qinj": 72, "norm_pm1q": 72, "v": 72, "logxbsplin": 73, "powerlawredshiftmodel": 73, "expon": [73, 106], "prob": [73, 111, 114], "dv_cdz": 73, "element": 73, "respect": 73, "addit": 74, "numpyro": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 108, 173, 175], "grid_dmat": 75, "validate_arg": [75, 76, 77, 78, 79, 80, 81, 82, 83], "properti": [75, 76, 77, 78, 79, 80, 81, 82, 83], "batch_shap": [75, 76, 77, 78, 79, 80, 81, 82, 83], "over": [75, 76, 77, 78, 79, 80, 81, 82, 83, 109, 110, 111, 112, 113, 114, 173], "batch": [75, 76, 77, 78, 79, 80, 81, 82, 83], "cdf": [75, 76, 77, 78, 79, 80, 81, 82, 83], "cummul": [75, 76, 77, 78, 79, 80, 81, 82, 83], "output": [75, 76, 77, 78, 79, 80, 81, 82, 83, 159], "enumerate_support": [75, 76, 77, 78, 79, 80, 81, 82, 83], "expand": [75, 76, 77, 78, 79, 80, 81, 82, 83], "len": [75, 76, 77, 78, 79, 80, 81, 82, 83], "contain": [75, 76, 77, 78, 79, 80, 81, 82, 83, 108, 173], "all": [75, 76, 77, 78, 79, 80, 81, 82, 83, 123, 144, 173], "event_dim": [75, 76, 77, 78, 79, 80, 81, 82, 83], "dimens": [75, 76, 77, 78, 79, 80, 81, 82, 83], "individu": [75, 76, 77, 78, 79, 80, 81, 82, 83], "event": [75, 76, 77, 78, 79, 80, 81, 82, 83, 109, 110, 113, 114, 159, 173], "event_shap": [75, 76, 77, 78, 79, 80, 81, 82, 83], "singl": [75, 76, 77, 78, 79, 80, 81, 82, 83, 165, 173], "new": [75, 76, 77, 78, 79, 80, 81, 82, 83, 159], "expandeddistribut": [75, 76, 77, 78, 79, 80, 81, 82, 83], "instanc": [75, 76, 77, 78, 79, 80, 81, 82, 83], "expand_bi": [75, 76, 77, 78, 79, 80, 81, 82, 83], "sample_shap": [75, 76, 77, 78, 79, 80, 81, 82, 83], "ad": [75, 76, 77, 78, 79, 80, 81, 82, 83], "its": [75, 76, 77, 78, 79, 80, 81, 82, 83], "To": [75, 76, 77, 78, 79, 80, 81, 82, 83, 175], "intern": [75, 76, 77, 78, 79, 80, 81, 82, 83], "dim": [75, 76, 77, 78, 79, 80, 81, 82, 83], "someth": [75, 76, 77, 78, 79, 80, 81, 82, 83], "larger": [75, 76, 77, 78, 79, 80, 81, 82, 83], "instead": [75, 76, 77, 78, 79, 80, 81, 82, 83], "drawn": [75, 76, 77, 78, 79, 80, 81, 82, 83], "version": [75, 76, 77, 78, 79, 80, 81, 82, 83, 175], "icdf": [75, 76, 77, 78, 79, 80, 81, 82, 83], "cumul": [75, 76, 77, 78, 79, 80, 81, 82, 83], "quantil": [75, 76, 77, 78, 79, 80, 81, 82, 83], "should": [75, 76, 77, 78, 79, 80, 81, 82, 83], "belong": [75, 76, 77, 78, 79, 80, 81, 82, 83], "whose": [75, 76, 77, 78, 79, 80, 81, 82, 83], "equal": [75, 76, 77, 78, 79, 80, 81, 82, 83], "classmethod": [75, 76, 77, 78, 79, 80, 81, 82, 83], "infer_shap": [75, 76, 77, 78, 79, 80, 81, 82, 83], "depend": [75, 76, 77, 78, 79, 80, 81, 82, 83], "tensor": [75, 76, 77, 78, 79, 80, 81, 82, 83], "those": [75, 76, 77, 78, 79, 80, 81, 82, 83], "posit": [75, 76, 77, 78, 79, 80, 81, 82, 83, 173], "replac": [75, 76, 77, 78, 79, 80, 81, 82, 83], "repres": [75, 76, 77, 78, 79, 80, 81, 82, 83, 146, 149], "keyword": [75, 76, 77, 78, 79, 80, 81, 82, 83], "map": [75, 76, 77, 78, 79, 80, 81, 82, 83, 108], "name": [75, 76, 77, 78, 79, 80, 81, 82, 83, 159], "A": [75, 76, 77, 78, 79, 80, 81, 82, 83, 161], "pair": [75, 76, 77, 78, 79, 80, 81, 82, 83], "would": [75, 76, 77, 78, 79, 80, 81, 82, 83, 173], "log_prob": [75, 76, 77, 78, 79, 80, 81, 82, 83, 173], "numpi": [75, 76, 77, 78, 79, 80, 81, 82, 83, 148, 159, 173], "mask": [75, 76, 77, 78, 79, 80, 81, 82, 83], "boolean": [75, 76, 77, 78, 79, 80, 81, 82, 83], "broadcast": [75, 76, 77, 78, 79, 80, 81, 82, 83], "includ": [75, 76, 77, 78, 79, 80, 81, 82, 83, 159, 173], "site": [75, 76, 77, 78, 79, 80, 81, 82, 83, 148], "exclud": [75, 76, 77, 78, 79, 80, 81, 82, 83], "copi": [75, 76, 77, 78, 79, 80, 81, 82, 83], "maskeddistribut": [75, 76, 77, 78, 79, 80, 81, 82, 83], "exampl": [75, 76, 77, 78, 79, 80, 81, 82, 83, 173], "mean": [75, 76, 77, 78, 79, 80, 81, 82, 83, 146, 149], "kei": [75, 76, 77, 78, 79, 80, 81, 82, 83, 108, 109], "have": [75, 76, 77, 78, 79, 80, 81, 82, 83, 173], "empti": [75, 76, 77, 78, 79, 80, 81, 82, 83], "lead": [75, 76, 77, 78, 79, 80, 81, 82, 83], "fill": [75, 76, 77, 78, 79, 80, 81, 82, 83], "draw": [75, 76, 77, 78, 79, 80, 81, 82, 83, 165, 166], "random": [75, 76, 77, 78, 79, 80, 81, 82, 83, 108, 109], "prngkei": [75, 76, 77, 78, 79, 80, 81, 82, 83, 108, 109], "rng_kei": [75, 76, 77, 78, 79, 80, 81, 82, 83, 108, 172], "sample_with_intermedi": [75, 76, 77, 78, 79, 80, 81, 82, 83], "same": [75, 76, 77, 78, 79, 80, 81, 82, 83, 146, 149], "except": [75, 76, 77, 78, 79, 80, 81, 82, 83], "ani": [75, 76, 77, 78, 79, 80, 81, 82, 83], "intermedi": [75, 76, 77, 78, 79, 80, 81, 82, 83], "transformeddistribut": [75, 76, 77, 78, 79, 80, 81, 82, 83], "to_ev": [75, 76, 77, 78, 79, 80, 81, 82, 83], "reinterpreted_batch_ndim": [75, 76, 77, 78, 79, 80, 81, 82, 83], "interpret": [75, 76, 77, 78, 79, 80, 81, 82, 83], "rightmost": [75, 76, 77, 78, 79, 80, 81, 82, 83], "5707963267948966": 76, "xinterp": [77, 78], "yinterp": [77, 78], "ngrid": [77, 78, 79, 82, 125, 126, 127, 128], "1000": [77, 78, 79, 82], "linearinterpolatedpowerlaw": 77, "numericallynormalizeddistribit": [78, 82], "diff_ord": 80, "1e": 82, "11": [82, 169, 171], "141592653589793": 83, "tool": [85, 115, 123, 144], "need": [85, 109, 110, 173, 175], "gw": [85, 86, 95, 150, 159, 173], "interferomet": 86, "respons": 86, "freq_domain_strain": [87, 88, 89, 90], "freq_arrai": [87, 88, 89, 90], "psd_arrai": [87, 88, 89, 90], "start_tim": [87, 88, 89, 90], "durat": [87, 88, 89, 90, 99, 102, 103], "latitud": 91, "longitud": 91, "arm_tilt": 91, "arm_azimuth": 91, "arm1": 92, "arm2": 92, "lat": 93, "lon": 93, "elev": 93, "mode": 94, "likleihood": [95, 173], "whittl": 95, "aa": [96, 102], "bb": [96, 102], "frequenc": 96, "psd": [96, 99, 102, 103], "ifo": [97, 98, 100, 101], "hp": [97, 98], "hc": [97, 98], "ra": [97, 98], "dec": [97, 98], "time": [97, 98, 109, 110, 159, 173], "psi": [97, 98], "signal": [99, 103], "fd_strain": 99, "util": [104, 124], "run": [104, 108, 173], "analysi": [104, 115, 159, 173], "meat": 105, "hierarh": 105, "maxz": 106, "9": [106, 148, 175], "survei": 106, "hyper": [106, 173], "out": 106, "perfrom": 106, "trapezoid": 106, "get": 106, "total": [106, 109, 110, 111, 112, 159, 173], "hypervolum": 106, "rate": [106, 108, 109, 110, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "evolut": 106, "In": 106, "gpc": 106, "yr": [106, 109, 110, 173], "model_dict": 107, "prior_dict": 107, "min_neff_cut": [107, 109, 110, 173], "marginalize_select": [107, 109, 110, 173], "posterior_predictive_check": [107, 109, 110, 173], "numpyro_model": 108, "model_arg": 108, "niter": 108, "lr": 108, "find": 108, "model": [108, 109, 110, 117, 118, 125, 126, 127, 128, 134, 135, 173, 174], "svi": 108, "adam": 108, "optim": 108, "elbo": 108, "rng": [108, 109], "pass": [108, 109, 173], "callabl": [108, 109, 110], "python": [108, 173, 175], "primit": 108, "iter": [108, 109, 110], "variat": 108, "learn": 108, "svirunresult": 108, "param": [108, 118, 119, 142, 147, 148], "result": [108, 167], "pe_weight": [109, 173], "inj_weight": [109, 173], "total_inj": [109, 110, 173], "nob": [109, 110, 140, 142, 173], "tob": [109, 110, 173], "categor": 109, "marginal_q": 109, "indv_weight": 109, "rngkei": 109, "pop_frac": [109, 126, 127, 129, 130, 131], "surv_hypervolume_fct": [109, 110, 173], "totalvtcalcul": [109, 110], "vtfct_kwarg": [109, 110, 173], "reconstruct_r": [109, 110], "param_nam": [109, 110, 159, 173], "pedata": [109, 110, 152, 159, 173], "injdata": [109, 110, 159, 168, 172, 173], "perform": [109, 110, 111, 114, 173], "hierarch": [109, 110], "likeihood": [109, 110], "resampl": [109, 110], "indiviud": [109, 110], "done": [109, 110], "analays": [109, 110], "f": 109, "refer": [109, 110, 161], "devicearrai": [109, 110, 111, 112, 113, 114], "weight": [109, 110, 111, 112, 113, 173], "expect": [109, 110, 111, 112, 113, 114], "n_event": [109, 110, 113, 114], "n_sampl": [109, 110, 113, 114], "found": [109, 110, 111, 112, 173], "n_found_inject": [109, 110, 111, 112], "gener": [109, 110, 159], "befor": [109, 110], "cut": [109, 110], "observ": [109, 110, 173], "analyz": [109, 110], "spent": [109, 110], "produc": [109, 110], "catalog": [109, 110, 173], "variabl": 109, "astrophys": 109, "fraction": 109, "subpopulaton": 109, "sum": 109, "vt": [109, 110], "diction": [109, 110], "margin": [109, 110], "uncertainti": [109, 110], "select": [109, 110], "mont": [109, 110, 111, 112, 113, 114], "carlo": [109, 110, 111, 112, 113, 114], "reconstruct": [109, 110], "merger": [109, 110], "min_neff": [109, 110], "likelihood": [109, 110, 173], "converg": [109, 110, 113, 114], "erform": 109, "predict": [109, 110], "check": [109, 110, 113, 114], "ppc": [109, 110], "mininmum": [109, 110], "solar": [109, 110], "6": [109, 110], "logpe_weight": 110, "loginj_weight": 110, "hierarchical_likelihood_log": 110, "logweight": [111, 114], "ninj": [111, 112, 173], "detect": [111, 112], "efficeni": [111, 112], "log_mu": 111, "effici": [111, 112], "n_eff": [111, 112, 113, 114], "per": [113, 114], "bf": [113, 114], "via": [113, 114], "montecarlo": [113, 114], "also": [113, 114], "logbf": [113, 114], "pars": 115, "cli": 115, "argument": [115, 173], "config": [115, 173], "file": [115, 159, 173], "mix_dist": 117, "mix_param": 117, "component_param": 117, "popmodel": 117, "dist": [119, 121, 173], "path": [122, 159, 173], "750": [125, 128], "model_kwarg": [125, 126, 127, 128, 129, 130, 131, 132, 133], "500": [126, 127, 173], "pop_num": [126, 127, 129, 130], "mass_model": [129, 130, 131, 132, 133], "m1mmin": [129, 131, 132], "logxlogybsplin": [129, 130], "num": [131, 132], "z_c": 134, "pmag": [138, 139], "ptilt": [138, 139], "mag": [138, 139, 146, 147, 148, 149], "psmag": 139, "pstilt": 139, "po": [140, 142], "pm1": 141, "pq": 141, "drdz": 143, "logx": 143, "help": 145, "between": [145, 173], "var": [146, 149], "convert": [146, 149, 159], "angl": [147, 148], "bk": 148, "usr": 148, "share": [148, 173], "miniconda": 148, "env": 148, "__setup_conda": 148, "lib": 148, "python3": 148, "packag": 148, "py": [148, 169, 173], "collect": 150, "downsampl": 151, "max_sampl": [151, 154, 156, 158], "10000": [151, 154, 156, 158, 165, 166], "param_map": [152, 159, 168, 172], "catalog_summary_fil": 155, "data_dir": [156, 158, 159], "run_map": [156, 158], "keyfil": 156, "ignor": [156, 158], "bbh": 156, "no_downsampl": [156, 158], "post": 157, "inj_fil": 159, "save": 159, "jax_devic": 159, "up": [159, 175], "dure": 159, "them": [159, 174], "str": 159, "directori": 159, "list": 159, "desir": [159, 173], "h5": 159, "datafil": 159, "associ": 159, "inj_attribut": 159, "evaul": 160, "term": 160, "paramt": 160, "wrapper": 161, "implment": 161, "spenc": 161, "adher": 161, "mathematica": 161, "convent": [161, 162, 163, 164], "detail": [161, 175], "http": [161, 169, 175], "wolfram": 161, "com": [161, 175], "languag": 161, "ref": 161, "polylog": 161, "html": 161, "possibli": 161, "complex": [161, 173], "scalar": 161, "equival": 161, "correspond": [162, 163, 164], "align": 162, "accord": [162, 163, 164], "allow": [162, 163, 164], "dimensionless": [162, 163, 164], "chi_effect": [162, 163], "isotrop": [163, 164], "xeff": [165, 166], "xp": [165, 166], "ndraw": [165, 166, 172], "bw_method": [165, 166], "scott": [165, 166], "joint_prior_from_isotropic_spin": 165, "maximimum": [165, 166], "consid": [165, 166], "inspir": [165, 166], "build": [165, 166, 174], "p_chi_p": [165, 166], "read": 167, "process": 167, "search": 167, "fi": [169, 170], "ifar": 169, "snr": [169, 170], "additional_cut": [169, 170, 171], "load_injection_data": 169, "git": [169, 175], "ligo": 169, "org": 169, "ratesandpopul": 169, "gwpopulation_pip": 169, "blob": 169, "master": 169, "vt_helper": 169, "l66": 169, "8": 170, "injfil": 171, "ifar_threshold": 171, "snr_threshold": 171, "semianalyt": 171, "model_prob": 172, "standard": 173, "pesummari": 173, "format": 173, "json": 173, "gwinferno": [173, 175], "one": 173, "write": 173, "yaml": 173, "hyperparamet": 173, "other": [173, 174], "auxiliari": 173, "configur": 173, "For": [173, 175], "simpl": 173, "yml": 173, "mass_1": 173, "truncated_powerlaw_mass_1": 173, "numpyro_distribut": 173, "hyper_param": 173, "prior_param": 173, "loc": 173, "10": [173, 175], "50": 173, "sampler": 173, "kernel": 173, "nut": 173, "kernel_kwarg": 173, "dense_mass": 173, "mcmc_kwarg": 173, "num_warmup": 173, "num_sampl": 173, "1500": 173, "num_chain": 173, "catalog_summary_json": 173, "summari": 173, "With": 173, "written": 173, "readi": 173, "go": 173, "command": 173, "gwinferno_run_from_config": 173, "now": 173, "wai": 173, "mai": 173, "abl": 173, "handl": 173, "declar": 173, "correl": 173, "mixtur": 173, "current": 173, "usual": 173, "more": [173, 175], "can": 173, "probabilist": 173, "import": 173, "follow": 173, "python_fil": 173, "pipelin": 173, "config_fil": 173, "example_python_model": 173, "requir": [173, 175], "definit": 173, "within": 173, "least": [173, 175], "take": 173, "pesampl": 173, "initi": 173, "interfac": 173, "hierarchical_likelihood_in_log": 173, "main": 173, "calcaul": 173, "n_pesampl": 173, "nubmber": 173, "posteror": 173, "n_found": 173, "remain": 173, "here": 173, "how": 173, "infrastructur": 173, "powerlawredshift": 173, "def": 173, "samp": 173, "inj": 173, "m1dist": 173, "qdist": 173, "02": 173, "zdist": 173, "mass_ratio": 173, "lambda": 173, "_": 173, "instal": 174, "quick": 174, "start": 174, "pleas": 174, "cite": 174, "paper": 174, "make": 174, "upon": 174, "open": 174, "softwar": 174, "gwpopul": 174, "bruce": 174, "edelman": 174, "bedelman": 174, "uoregon": 174, "edu": 174, "jaxen": 174, "godfrei": 174, "jaxeng": 174, "gino": 174, "carrillo": 174, "gcarrilo3": 174, "ben": 174, "farr": 174, "bfarr": 174, "clone": 175, "repositori": 175, "github": 175, "farroutlab": 175, "cd": 175, "recommend": 175, "conda": 175, "your": 175, "environ": 175, "newer": 175, "than": 175, "cpu": 175, "usag": 175, "activ": 175, "forg": 175, "h5py": 175, "pip": 175, "upgrad": 175, "r": 175, "pip_requir": 175, "txt": 175, "enabl": 175, "access": 175, "cuda": 175, "gpu": 175, "instruct": 175, "gwinferno_gpu": 175, "nvidia": 175, "jaxlib": 175, "nvcc": 175}, "objects": {"": [[174, 0, 0, "-", "gwinferno"]], "gwinferno": [[1, 0, 0, "-", "cosmology"], [3, 0, 0, "-", "distributions"], [11, 0, 0, "-", "interpolation"], [19, 0, 0, "-", "models"], [74, 0, 0, "-", "numpyro_distributions"], [85, 0, 0, "-", "parameter_estimation"], [104, 0, 0, "-", "pipeline"], [123, 0, 0, "-", "postprocess"], [144, 0, 0, "-", "preprocess"]], "gwinferno.cosmology": [[2, 1, 1, "", "Cosmology"]], "gwinferno.cosmology.Cosmology": [[2, 2, 1, "", "DL2z"], [2, 2, 1, "", "__call__"], [2, 2, 1, "", "__init__"], [2, 2, 1, "", "dDcdz"], [2, 2, 1, "", "dVcdz"], [2, 2, 1, "", "extend"], [2, 2, 1, "", "logdVcdz"], [2, 2, 1, "", "z2DL"], [2, 2, 1, "", "z2Dc"], [2, 2, 1, "", "z2E"]], "gwinferno.distributions": [[4, 3, 1, "", "betadist"], [5, 3, 1, "", "ln_beta_fct"], [6, 3, 1, "", "log_logistic_unit"], [7, 3, 1, "", "logistic_unit"], [8, 3, 1, "", "powerlaw_logit_pdf"], [9, 3, 1, "", "powerlaw_pdf"], [10, 3, 1, "", "truncnorm_pdf"]], "gwinferno.interpolation": [[12, 1, 1, "", "BSpline"], [13, 1, 1, "", "BasisSpline"], [14, 1, 1, "", "LogXBSpline"], [15, 1, 1, "", "LogXLogYBSpline"], [16, 1, 1, "", "LogYBSpline"], [17, 1, 1, "", "NaturalCubicUnivariateSpline"], [18, 1, 1, "", "RectBivariateBasisSpline"]], "gwinferno.interpolation.BSpline": [[12, 2, 1, "", "__call__"], [12, 2, 1, "", "__init__"], [12, 2, 1, "", "bases"], [12, 2, 1, "", "eval"], [12, 2, 1, "", "get_coefficients"], [12, 2, 1, "", "norm"], [12, 2, 1, "", "project"]], "gwinferno.interpolation.BasisSpline": [[13, 2, 1, "", "__call__"], [13, 2, 1, "", "__init__"], [13, 2, 1, "", "bases"], [13, 2, 1, "", "eval"], [13, 2, 1, "", "get_coefficients"], [13, 2, 1, "", "norm"], [13, 2, 1, "", "project"]], "gwinferno.interpolation.LogXBSpline": [[14, 2, 1, "", "__call__"], [14, 2, 1, "", "__init__"], [14, 2, 1, "", "bases"], [14, 2, 1, "", "eval"], [14, 2, 1, "", "get_coefficients"], [14, 2, 1, "", "norm"], [14, 2, 1, "", "project"]], "gwinferno.interpolation.LogXLogYBSpline": [[15, 2, 1, "", "__call__"], [15, 2, 1, "", "__init__"], [15, 2, 1, "", "bases"], [15, 2, 1, "", "eval"], [15, 2, 1, "", "get_coefficients"], [15, 2, 1, "", "norm"], [15, 2, 1, "", "project"]], "gwinferno.interpolation.LogYBSpline": [[16, 2, 1, "", "__call__"], [16, 2, 1, "", "__init__"], [16, 2, 1, "", "bases"], [16, 2, 1, "", "eval"], [16, 2, 1, "", "get_coefficients"], [16, 2, 1, "", "norm"], [16, 2, 1, "", "project"]], "gwinferno.interpolation.NaturalCubicUnivariateSpline": [[17, 2, 1, "", "__call__"], [17, 2, 1, "", "__init__"]], "gwinferno.interpolation.RectBivariateBasisSpline": [[18, 2, 1, "", "__call__"], [18, 2, 1, "", "__init__"], [18, 2, 1, "", "bases"], [18, 2, 1, "", "norm_2d"], [18, 2, 1, "", "project"]], "gwinferno.models": [[20, 0, 0, "-", "bsplines"], [50, 0, 0, "-", "gwpopulation"], [63, 0, 0, "-", "mass_gap"], [70, 0, 0, "-", "spline_perturbation"]], "gwinferno.models.bsplines": [[21, 0, 0, "-", "joint"], [24, 0, 0, "-", "separable"], [35, 0, 0, "-", "single"], [45, 0, 0, "-", "smoothing"]], "gwinferno.models.bsplines.joint": [[22, 1, 1, "", "BSplineJointMassRatioChiEffective"], [23, 1, 1, "", "Base2DBSplineModel"]], "gwinferno.models.bsplines.joint.BSplineJointMassRatioChiEffective": [[22, 2, 1, "", "__call__"], [22, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.joint.Base2DBSplineModel": [[23, 2, 1, "", "__call__"], [23, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.separable": [[25, 1, 1, "", "BSplineEffectiveSpinDims"], [26, 1, 1, "", "BSplineIIDComponentMasses"], [27, 1, 1, "", "BSplineIIDSpinMagnitudes"], [28, 1, 1, "", "BSplineIIDSpinTilts"], [29, 1, 1, "", "BSplineIndependentComponentMasses"], [30, 1, 1, "", "BSplineIndependentSpinMagnitudes"], [31, 1, 1, "", "BSplineIndependentSpinTilts"], [32, 1, 1, "", "BSplinePrimaryBSplineRatio"], [33, 1, 1, "", "BSplinePrimaryPowerlawRatio"], [34, 1, 1, "", "PLPeakPrimaryBSplineRatio"]], "gwinferno.models.bsplines.separable.BSplineEffectiveSpinDims": [[25, 2, 1, "", "__call__"], [25, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.separable.BSplineIIDComponentMasses": [[26, 2, 1, "", "__call__"], [26, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.separable.BSplineIIDSpinMagnitudes": [[27, 2, 1, "", "__call__"], [27, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.separable.BSplineIIDSpinTilts": [[28, 2, 1, "", "__call__"], [28, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.separable.BSplineIndependentComponentMasses": [[29, 2, 1, "", "__call__"], [29, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.separable.BSplineIndependentSpinMagnitudes": [[30, 2, 1, "", "__call__"], [30, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.separable.BSplineIndependentSpinTilts": [[31, 2, 1, "", "__call__"], [31, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.separable.BSplinePrimaryBSplineRatio": [[32, 2, 1, "", "__call__"], [32, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.separable.BSplinePrimaryPowerlawRatio": [[33, 2, 1, "", "__call__"], [33, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.separable.PLPeakPrimaryBSplineRatio": [[34, 2, 1, "", "__call__"], [34, 2, 1, "", "__init__"]], "gwinferno.models.bsplines.single": [[36, 1, 1, "", "BSplineChiEffective"], [37, 1, 1, "", "BSplineChiPrecess"], [38, 1, 1, "", "BSplineMass"], [39, 1, 1, "", "BSplineRatio"], [40, 1, 1, "", "BSplineRedshift"], [41, 1, 1, "", "BSplineSpinMagnitude"], [42, 1, 1, "", "BSplineSpinTilt"], [43, 1, 1, "", "BSplineSymmetricChiEffective"], [44, 1, 1, "", "Base1DBSplineModel"]], "gwinferno.models.bsplines.single.BSplineChiEffective": [[36, 2, 1, "", "__call__"], [36, 2, 1, "", "__init__"], [36, 2, 1, "", "eval_spline"], [36, 2, 1, "", "inj_pdf"], [36, 2, 1, "", "pe_pdf"], [36, 2, 1, "", "truncate_dmat"]], "gwinferno.models.bsplines.single.BSplineChiPrecess": [[37, 2, 1, "", "__call__"], [37, 2, 1, "", "__init__"], [37, 2, 1, "", "eval_spline"], [37, 2, 1, "", "inj_pdf"], [37, 2, 1, "", "pe_pdf"], [37, 2, 1, "", "truncate_dmat"]], "gwinferno.models.bsplines.single.BSplineMass": [[38, 2, 1, "", "__call__"], [38, 2, 1, "", "__init__"], [38, 2, 1, "", "eval_spline"], [38, 2, 1, "", "inj_pdf"], [38, 2, 1, "", "pe_pdf"], [38, 2, 1, "", "truncate_dmat"]], "gwinferno.models.bsplines.single.BSplineRatio": [[39, 2, 1, "", "__call__"], [39, 2, 1, "", "__init__"], [39, 2, 1, "", "eval_spline"], [39, 2, 1, "", "inj_pdf"], [39, 2, 1, "", "pe_pdf"], [39, 2, 1, "", "truncate_dmat"]], "gwinferno.models.bsplines.single.BSplineRedshift": [[40, 2, 1, "", "__call__"], [40, 2, 1, "", "__init__"], [40, 2, 1, "", "eval_spline"], [40, 2, 1, "", "inj_pdf"], [40, 2, 1, "", "norm"], [40, 2, 1, "", "pe_pdf"], [40, 2, 1, "", "truncate_dmat"]], "gwinferno.models.bsplines.single.BSplineSpinMagnitude": [[41, 2, 1, "", "__call__"], [41, 2, 1, "", "__init__"], [41, 2, 1, "", "eval_spline"], [41, 2, 1, "", "inj_pdf"], [41, 2, 1, "", "pe_pdf"], [41, 2, 1, "", "truncate_dmat"]], "gwinferno.models.bsplines.single.BSplineSpinTilt": [[42, 2, 1, "", "__call__"], [42, 2, 1, "", "__init__"], [42, 2, 1, "", "eval_spline"], [42, 2, 1, "", "inj_pdf"], [42, 2, 1, "", "pe_pdf"], [42, 2, 1, "", "truncate_dmat"]], "gwinferno.models.bsplines.single.BSplineSymmetricChiEffective": [[43, 2, 1, "", "__call__"], [43, 2, 1, "", "__init__"], [43, 2, 1, "", "eval_spline"], [43, 2, 1, "", "inj_pdf"], [43, 2, 1, "", "pe_pdf"], [43, 2, 1, "", "truncate_dmat"]], "gwinferno.models.bsplines.single.Base1DBSplineModel": [[44, 2, 1, "", "__call__"], [44, 2, 1, "", "__init__"], [44, 2, 1, "", "eval_spline"], [44, 2, 1, "", "inj_pdf"], [44, 2, 1, "", "pe_pdf"], [44, 2, 1, "", "truncate_dmat"]], "gwinferno.models.bsplines.smoothing": [[46, 3, 1, "", "apply_difference_prior"], [47, 3, 1, "", "apply_twod_difference_prior"], [48, 3, 1, "", "get_adaptive_Lambda"], [49, 3, 1, "", "mixture_smoothing_parameter"]], "gwinferno.models.gwpopulation": [[51, 0, 0, "-", "gwpopulation"]], "gwinferno.models.gwpopulation.gwpopulation": [[52, 1, 1, "", "PowerlawRedshiftModel"], [53, 3, 1, "", "beta_spin_magnitude"], [54, 3, 1, "", "iid_spin_magnitude"], [55, 3, 1, "", "iid_spin_tilt"], [56, 3, 1, "", "independent_spin_magnitude"], [57, 3, 1, "", "independent_spin_tilt"], [58, 3, 1, "", "mixture_isoalign_spin_tilt"], [59, 3, 1, "", "plpeak_primary_pdf"], [60, 3, 1, "", "plpeak_primary_ratio_pdf"], [61, 3, 1, "", "powerlaw_primary_ratio_falloff_pdf"], [62, 3, 1, "", "powerlaw_primary_ratio_pdf"]], "gwinferno.models.gwpopulation.gwpopulation.PowerlawRedshiftModel": [[52, 2, 1, "", "__call__"], [52, 2, 1, "", "__init__"]], "gwinferno.models.mass_gap": [[64, 3, 1, "", "logistic_unit"], [65, 3, 1, "", "plpeak_gap_primary_ratio_pdf"], [66, 3, 1, "", "powerlaw_gap_cutoff_primary_ratio_pdf"], [67, 3, 1, "", "powerlaw_gap_logit_ben_primary_pdf"], [68, 3, 1, "", "powerlaw_gap_logit_primary_pdf"], [69, 3, 1, "", "powerlaw_gap_primary_ratio_pdf"]], "gwinferno.models.spline_perturbation": [[71, 1, 1, "", "PowerlawBasisSplinePrimaryPowerlawRatio"], [72, 1, 1, "", "PowerlawBasisSplinePrimaryRatio"], [73, 1, 1, "", "PowerlawSplineRedshiftModel"]], "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio": [[71, 2, 1, "", "__call__"], [71, 2, 1, "", "__init__"], [71, 2, 1, "", "norm_p_m1"], [71, 2, 1, "", "p_m1"], [71, 2, 1, "", "p_q"], [71, 2, 1, "", "smoothing"]], "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio": [[72, 2, 1, "", "__call__"], [72, 2, 1, "", "__init__"], [72, 2, 1, "", "norm_pm1q"], [72, 2, 1, "", "p_m1"], [72, 2, 1, "", "p_q"]], "gwinferno.models.spline_perturbation.PowerlawSplineRedshiftModel": [[73, 2, 1, "", "__call__"], [73, 2, 1, "", "__init__"], [73, 2, 1, "", "normalization"], [73, 2, 1, "", "prob"]], "gwinferno.numpyro_distributions": [[75, 1, 1, "", "BSplineDistribution"], [76, 1, 1, "", "Cosine"], [77, 1, 1, "", "CubicInterpolatedPowerlaw"], [78, 1, 1, "", "LinearInterpolatedPowerlaw"], [79, 1, 1, "", "NumericallyNormalizedDistribition"], [80, 1, 1, "", "PSplineCoeficientPrior"], [81, 1, 1, "", "Powerlaw"], [82, 1, 1, "", "PowerlawRedshift"], [83, 1, 1, "", "Sine"], [84, 3, 1, "", "cumtrapz"]], "gwinferno.numpyro_distributions.BSplineDistribution": [[75, 2, 1, "", "__call__"], [75, 2, 1, "", "__init__"], [75, 4, 1, "", "batch_shape"], [75, 2, 1, "", "cdf"], [75, 2, 1, "", "enumerate_support"], [75, 4, 1, "", "event_dim"], [75, 4, 1, "", "event_shape"], [75, 2, 1, "", "expand"], [75, 2, 1, "", "expand_by"], [75, 2, 1, "", "icdf"], [75, 2, 1, "", "infer_shapes"], [75, 2, 1, "", "log_prob"], [75, 2, 1, "", "mask"], [75, 4, 1, "", "mean"], [75, 2, 1, "", "sample"], [75, 2, 1, "", "sample_with_intermediates"], [75, 2, 1, "", "shape"], [75, 2, 1, "", "to_event"], [75, 4, 1, "", "variance"]], "gwinferno.numpyro_distributions.Cosine": [[76, 2, 1, "", "__call__"], [76, 2, 1, "", "__init__"], [76, 4, 1, "", "batch_shape"], [76, 2, 1, "", "cdf"], [76, 2, 1, "", "enumerate_support"], [76, 4, 1, "", "event_dim"], [76, 4, 1, "", "event_shape"], [76, 2, 1, "", "expand"], [76, 2, 1, "", "expand_by"], [76, 2, 1, "", "icdf"], [76, 2, 1, "", "infer_shapes"], [76, 2, 1, "", "log_prob"], [76, 2, 1, "", "mask"], [76, 4, 1, "", "mean"], [76, 2, 1, "", "sample"], [76, 2, 1, "", "sample_with_intermediates"], [76, 2, 1, "", "shape"], [76, 2, 1, "", "to_event"], [76, 4, 1, "", "variance"]], "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw": [[77, 2, 1, "", "__call__"], [77, 2, 1, "", "__init__"], [77, 4, 1, "", "batch_shape"], [77, 2, 1, "", "cdf"], [77, 2, 1, "", "enumerate_support"], [77, 4, 1, "", "event_dim"], [77, 4, 1, "", "event_shape"], [77, 2, 1, "", "expand"], [77, 2, 1, "", "expand_by"], [77, 2, 1, "", "icdf"], [77, 2, 1, "", "infer_shapes"], [77, 2, 1, "", "log_prob"], [77, 2, 1, "", "mask"], [77, 4, 1, "", "mean"], [77, 2, 1, "", "sample"], [77, 2, 1, "", "sample_with_intermediates"], [77, 2, 1, "", "shape"], [77, 2, 1, "", "to_event"], [77, 4, 1, "", "variance"]], "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw": [[78, 2, 1, "", "__call__"], [78, 2, 1, "", "__init__"], [78, 4, 1, "", "batch_shape"], [78, 2, 1, "", "cdf"], [78, 2, 1, "", "enumerate_support"], [78, 4, 1, "", "event_dim"], [78, 4, 1, "", "event_shape"], [78, 2, 1, "", "expand"], [78, 2, 1, "", "expand_by"], [78, 2, 1, "", "icdf"], [78, 2, 1, "", "infer_shapes"], [78, 2, 1, "", "log_prob"], [78, 2, 1, "", "mask"], [78, 4, 1, "", "mean"], [78, 2, 1, "", "sample"], [78, 2, 1, "", "sample_with_intermediates"], [78, 2, 1, "", "shape"], [78, 2, 1, "", "to_event"], [78, 4, 1, "", "variance"]], "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition": [[79, 2, 1, "", "__call__"], [79, 2, 1, "", "__init__"], [79, 4, 1, "", "batch_shape"], [79, 2, 1, "", "cdf"], [79, 2, 1, "", "enumerate_support"], [79, 4, 1, "", "event_dim"], [79, 4, 1, "", "event_shape"], [79, 2, 1, "", "expand"], [79, 2, 1, "", "expand_by"], [79, 2, 1, "", "icdf"], [79, 2, 1, "", "infer_shapes"], [79, 2, 1, "", "log_prob"], [79, 2, 1, "", "mask"], [79, 4, 1, "", "mean"], [79, 2, 1, "", "sample"], [79, 2, 1, "", "sample_with_intermediates"], [79, 2, 1, "", "shape"], [79, 2, 1, "", "to_event"], [79, 4, 1, "", "variance"]], "gwinferno.numpyro_distributions.PSplineCoeficientPrior": [[80, 2, 1, "", "__call__"], [80, 2, 1, "", "__init__"], [80, 4, 1, "", "batch_shape"], [80, 2, 1, "", "cdf"], [80, 2, 1, "", "enumerate_support"], [80, 4, 1, "", "event_dim"], [80, 4, 1, "", "event_shape"], [80, 2, 1, "", "expand"], [80, 2, 1, "", "expand_by"], [80, 2, 1, "", "icdf"], [80, 2, 1, "", "infer_shapes"], [80, 2, 1, "", "log_prob"], [80, 2, 1, "", "mask"], [80, 4, 1, "", "mean"], [80, 2, 1, "", "sample"], [80, 2, 1, "", "sample_with_intermediates"], [80, 2, 1, "", "shape"], [80, 2, 1, "", "to_event"], [80, 4, 1, "", "variance"]], "gwinferno.numpyro_distributions.Powerlaw": [[81, 2, 1, "", "__call__"], [81, 2, 1, "", "__init__"], [81, 4, 1, "", "batch_shape"], [81, 2, 1, "", "cdf"], [81, 2, 1, "", "enumerate_support"], [81, 4, 1, "", "event_dim"], [81, 4, 1, "", "event_shape"], [81, 2, 1, "", "expand"], [81, 2, 1, "", "expand_by"], [81, 2, 1, "", "icdf"], [81, 2, 1, "", "infer_shapes"], [81, 2, 1, "", "log_prob"], [81, 2, 1, "", "mask"], [81, 4, 1, "", "mean"], [81, 2, 1, "", "sample"], [81, 2, 1, "", "sample_with_intermediates"], [81, 2, 1, "", "shape"], [81, 2, 1, "", "to_event"], [81, 4, 1, "", "variance"]], "gwinferno.numpyro_distributions.PowerlawRedshift": [[82, 2, 1, "", "__call__"], [82, 2, 1, "", "__init__"], [82, 4, 1, "", "batch_shape"], [82, 2, 1, "", "cdf"], [82, 2, 1, "", "enumerate_support"], [82, 4, 1, "", "event_dim"], [82, 4, 1, "", "event_shape"], [82, 2, 1, "", "expand"], [82, 2, 1, "", "expand_by"], [82, 2, 1, "", "icdf"], [82, 2, 1, "", "infer_shapes"], [82, 2, 1, "", "log_prob"], [82, 2, 1, "", "mask"], [82, 4, 1, "", "mean"], [82, 2, 1, "", "sample"], [82, 2, 1, "", "sample_with_intermediates"], [82, 2, 1, "", "shape"], [82, 2, 1, "", "to_event"], [82, 4, 1, "", "variance"]], "gwinferno.numpyro_distributions.Sine": [[83, 2, 1, "", "__call__"], [83, 2, 1, "", "__init__"], [83, 4, 1, "", "batch_shape"], [83, 2, 1, "", "cdf"], [83, 2, 1, "", "enumerate_support"], [83, 4, 1, "", "event_dim"], [83, 4, 1, "", "event_shape"], [83, 2, 1, "", "expand"], [83, 2, 1, "", "expand_by"], [83, 2, 1, "", "icdf"], [83, 2, 1, "", "infer_shapes"], [83, 2, 1, "", "log_prob"], [83, 2, 1, "", "mask"], [83, 4, 1, "", "mean"], [83, 2, 1, "", "sample"], [83, 2, 1, "", "sample_with_intermediates"], [83, 2, 1, "", "shape"], [83, 2, 1, "", "to_event"], [83, 4, 1, "", "variance"]], "gwinferno.parameter_estimation": [[86, 0, 0, "-", "detectors"], [95, 0, 0, "-", "likelihood"]], "gwinferno.parameter_estimation.detectors": [[87, 1, 1, "", "Detector"], [88, 1, 1, "", "H1"], [89, 1, 1, "", "L1"], [90, 1, 1, "", "V1"], [91, 3, 1, "", "construct_arm"], [92, 3, 1, "", "get_detector_tensor"], [93, 3, 1, "", "get_geocentric_vertex"], [94, 3, 1, "", "make_get_polarization_tensor"]], "gwinferno.parameter_estimation.detectors.Detector": [[87, 2, 1, "", "__call__"], [87, 2, 1, "", "__init__"]], "gwinferno.parameter_estimation.detectors.H1": [[88, 2, 1, "", "__call__"], [88, 2, 1, "", "__init__"]], "gwinferno.parameter_estimation.detectors.L1": [[89, 2, 1, "", "__call__"], [89, 2, 1, "", "__init__"]], "gwinferno.parameter_estimation.detectors.V1": [[90, 2, 1, "", "__call__"], [90, 2, 1, "", "__init__"]], "gwinferno.parameter_estimation.likelihood": [[96, 3, 1, "", "inner_product"], [97, 3, 1, "", "log_likelihood"], [98, 3, 1, "", "log_likelihood_det"], [99, 3, 1, "", "matched_filter_snr"], [100, 3, 1, "", "noise_log_likelihood"], [101, 3, 1, "", "noise_log_likelihood_det"], [102, 3, 1, "", "noise_weighted_inner_product"], [103, 3, 1, "", "optimal_snr_squared"]], "gwinferno.pipeline": [[105, 0, 0, "-", "analysis"], [115, 0, 0, "-", "parser"]], "gwinferno.pipeline.analysis": [[106, 1, 1, "", "TotalVTCalculator"], [107, 3, 1, "", "construct_hierarchical_model"], [108, 3, 1, "", "find_map"], [109, 3, 1, "", "hierarchical_likelihood"], [110, 3, 1, "", "hierarchical_likelihood_in_log"], [111, 3, 1, "", "logmu_logneff_injections_log"], [112, 3, 1, "", "mu_neff_injections"], [113, 3, 1, "", "per_event_log_bayes_factor_log_neffs"], [114, 3, 1, "", "per_event_log_bayes_factor_log_neffs_log"]], "gwinferno.pipeline.analysis.TotalVTCalculator": [[106, 2, 1, "", "__call__"], [106, 2, 1, "", "__init__"]], "gwinferno.pipeline.parser": [[116, 1, 1, "", "ConfigReader"], [117, 1, 1, "", "PopMixtureModel"], [118, 1, 1, "", "PopModel"], [119, 1, 1, "", "PopPrior"], [120, 3, 1, "", "load_base_parser"], [121, 3, 1, "", "load_dist_from_string"], [122, 3, 1, "", "load_model_from_python_file"]], "gwinferno.pipeline.parser.ConfigReader": [[116, 2, 1, "", "__call__"], [116, 2, 1, "", "__init__"]], "gwinferno.pipeline.parser.PopMixtureModel": [[117, 2, 1, "", "__call__"], [117, 2, 1, "", "__init__"]], "gwinferno.pipeline.parser.PopModel": [[118, 2, 1, "", "__call__"], [118, 2, 1, "", "__init__"]], "gwinferno.pipeline.parser.PopPrior": [[119, 2, 1, "", "__call__"], [119, 2, 1, "", "__init__"]], "gwinferno.postprocess": [[124, 0, 0, "-", "calculate_ppds"], [136, 0, 0, "-", "plotting"]], "gwinferno.postprocess.calculate_ppds": [[125, 3, 1, "", "calculate_chieff_bspline_ppds"], [126, 3, 1, "", "calculate_iid_spin_bspline_ppds"], [127, 3, 1, "", "calculate_iid_spin_bspline_weights"], [128, 3, 1, "", "calculate_ind_spin_bspline_ppds"], [129, 3, 1, "", "calculate_m1_bspline_q_powerlaw_ppds"], [130, 3, 1, "", "calculate_m1m2_bspline_ppds"], [131, 3, 1, "", "calculate_m1q_bspline_ppds"], [132, 3, 1, "", "calculate_m1q_bspline_weights"], [133, 3, 1, "", "calculate_m1q_ppds_plbspline_model"], [134, 3, 1, "", "calculate_powerbspline_rate_of_z_ppds"], [135, 3, 1, "", "calculate_powerlaw_rate_of_z_ppds"]], "gwinferno.postprocess.plotting": [[137, 3, 1, "", "plot_chieff_dist"], [138, 3, 1, "", "plot_iid_spin_dist"], [139, 3, 1, "", "plot_ind_spin_dist"], [140, 3, 1, "", "plot_m1_vs_z_ppc"], [141, 3, 1, "", "plot_mass_dist"], [142, 3, 1, "", "plot_ppc_brontosaurus"], [143, 3, 1, "", "plot_rofz"]], "gwinferno.preprocess": [[145, 0, 0, "-", "conversions"], [150, 0, 0, "-", "data_collection"], [160, 0, 0, "-", "priors"], [167, 0, 0, "-", "selection"]], "gwinferno.preprocess.conversions": [[146, 3, 1, "", "alpha_beta_from_mu_var"], [147, 3, 1, "", "chieff_from_q_component_spins"], [148, 3, 1, "", "chip_from_q_component_spins"], [149, 3, 1, "", "mu_var_from_alpha_beta"]], "gwinferno.preprocess.data_collection": [[151, 3, 1, "", "apply_priors"], [152, 3, 1, "", "convert_component_spin_posteriors_to_chieff"], [153, 3, 1, "", "dl_2_prior_on_z"], [154, 3, 1, "", "downsample_posteriors_to_consistent_nsamps"], [155, 3, 1, "", "load_catalog_from_metadata"], [156, 3, 1, "", "load_posterior_samples"], [157, 3, 1, "", "p_m1src_q_z_lal_pe_prior"], [158, 3, 1, "", "preprocess_data"], [159, 3, 1, "", "setup_posterior_samples_and_injections"]], "gwinferno.preprocess.priors": [[161, 3, 1, "", "Di"], [162, 3, 1, "", "chi_effective_prior_from_aligned_spins"], [163, 3, 1, "", "chi_effective_prior_from_isotropic_spins"], [164, 3, 1, "", "chi_p_prior_from_isotropic_spins"], [165, 3, 1, "", "chi_p_prior_given_chi_eff_q"], [166, 3, 1, "", "joint_prior_from_isotropic_spins"]], "gwinferno.preprocess.selection": [[168, 3, 1, "", "convert_component_spin_injections_to_chieff"], [169, 3, 1, "", "get_injection_dict"], [170, 3, 1, "", "get_semianlytic_injection_dict"], [171, 3, 1, "", "load_injections"], [172, 3, 1, "", "resample_injections"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"]}, "titleterms": {"us": 0, "basi": 0, "spline": 0, "model": [0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "gwinferno": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174], "cosmologi": [1, 2], "distribut": [3, 4, 5, 6, 7, 8, 9, 10], "betadist": 4, "ln_beta_fct": 5, "log_logistic_unit": 6, "logistic_unit": [7, 64], "powerlaw_logit_pdf": 8, "powerlaw_pdf": 9, "truncnorm_pdf": 10, "interpol": [11, 12, 13, 14, 15, 16, 17, 18], "bspline": [12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "basissplin": 13, "logxbsplin": 14, "logxlogybsplin": 15, "logybsplin": 16, "naturalcubicunivariatesplin": 17, "rectbivariatebasissplin": 18, "joint": [21, 22, 23], "bsplinejointmassratiochieffect": 22, "base2dbsplinemodel": 23, "separ": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "bsplineeffectivespindim": 25, "bsplineiidcomponentmass": 26, "bsplineiidspinmagnitud": 27, "bsplineiidspintilt": 28, "bsplineindependentcomponentmass": 29, "bsplineindependentspinmagnitud": 30, "bsplineindependentspintilt": 31, "bsplineprimarybsplineratio": 32, "bsplineprimarypowerlawratio": 33, "plpeakprimarybsplineratio": 34, "singl": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44], "bsplinechieffect": 36, "bsplinechiprecess": 37, "bsplinemass": 38, "bsplineratio": 39, "bsplineredshift": 40, "bsplinespinmagnitud": 41, "bsplinespintilt": 42, "bsplinesymmetricchieffect": 43, "base1dbsplinemodel": 44, "smooth": [45, 46, 47, 48, 49], "apply_difference_prior": 46, "apply_twod_difference_prior": 47, "get_adaptive_lambda": 48, "mixture_smoothing_paramet": 49, "gwpopul": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "powerlawredshiftmodel": 52, "beta_spin_magnitud": 53, "iid_spin_magnitud": 54, "iid_spin_tilt": 55, "independent_spin_magnitud": 56, "independent_spin_tilt": 57, "mixture_isoalign_spin_tilt": 58, "plpeak_primary_pdf": 59, "plpeak_primary_ratio_pdf": 60, "powerlaw_primary_ratio_falloff_pdf": 61, "powerlaw_primary_ratio_pdf": 62, "mass_gap": [63, 64, 65, 66, 67, 68, 69], "plpeak_gap_primary_ratio_pdf": 65, "powerlaw_gap_cutoff_primary_ratio_pdf": 66, "powerlaw_gap_logit_ben_primary_pdf": 67, "powerlaw_gap_logit_primary_pdf": 68, "powerlaw_gap_primary_ratio_pdf": 69, "spline_perturb": [70, 71, 72, 73], "powerlawbasissplineprimarypowerlawratio": 71, "powerlawbasissplineprimaryratio": 72, "powerlawsplineredshiftmodel": 73, "numpyro_distribut": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "bsplinedistribut": 75, "cosin": 76, "cubicinterpolatedpowerlaw": 77, "linearinterpolatedpowerlaw": 78, "numericallynormalizeddistribit": 79, "psplinecoeficientprior": 80, "powerlaw": 81, "powerlawredshift": 82, "sine": 83, "cumtrapz": 84, "parameter_estim": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "detector": [86, 87, 88, 89, 90, 91, 92, 93, 94], "h1": 88, "l1": 89, "v1": 90, "construct_arm": 91, "get_detector_tensor": 92, "get_geocentric_vertex": 93, "make_get_polarization_tensor": 94, "likelihood": [95, 96, 97, 98, 99, 100, 101, 102, 103], "inner_product": 96, "log_likelihood": 97, "log_likelihood_det": 98, "matched_filter_snr": 99, "noise_log_likelihood": 100, "noise_log_likelihood_det": 101, "noise_weighted_inner_product": 102, "optimal_snr_squar": 103, "pipelin": [104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], "analysi": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "totalvtcalcul": 106, "construct_hierarchical_model": 107, "find_map": 108, "hierarchical_likelihood": 109, "hierarchical_likelihood_in_log": 110, "logmu_logneff_injections_log": 111, "mu_neff_inject": 112, "per_event_log_bayes_factor_log_neff": 113, "per_event_log_bayes_factor_log_neffs_log": 114, "parser": [115, 116, 117, 118, 119, 120, 121, 122], "configread": 116, "popmixturemodel": 117, "popmodel": 118, "popprior": 119, "load_base_pars": 120, "load_dist_from_str": 121, "load_model_from_python_fil": 122, "postprocess": [123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "calculate_ppd": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "calculate_chieff_bspline_ppd": 125, "calculate_iid_spin_bspline_ppd": 126, "calculate_iid_spin_bspline_weight": 127, "calculate_ind_spin_bspline_ppd": 128, "calculate_m1_bspline_q_powerlaw_ppd": 129, "calculate_m1m2_bspline_ppd": 130, "calculate_m1q_bspline_ppd": 131, "calculate_m1q_bspline_weight": 132, "calculate_m1q_ppds_plbspline_model": 133, "calculate_powerbspline_rate_of_z_ppd": 134, "calculate_powerlaw_rate_of_z_ppd": 135, "plot": [136, 137, 138, 139, 140, 141, 142, 143], "plot_chieff_dist": 137, "plot_iid_spin_dist": 138, "plot_ind_spin_dist": 139, "plot_m1_vs_z_ppc": 140, "plot_mass_dist": 141, "plot_ppc_brontosauru": 142, "plot_rofz": 143, "preprocess": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "convers": [145, 146, 147, 148, 149], "alpha_beta_from_mu_var": 146, "chieff_from_q_component_spin": 147, "chip_from_q_component_spin": 148, "mu_var_from_alpha_beta": 149, "data_collect": [150, 151, 152, 153, 154, 155, 156, 157, 158, 159], "apply_prior": 151, "convert_component_spin_posteriors_to_chieff": 152, "dl_2_prior_on_z": 153, "downsample_posteriors_to_consistent_nsamp": 154, "load_catalog_from_metadata": 155, "load_posterior_sampl": 156, "p_m1src_q_z_lal_pe_prior": 157, "preprocess_data": 158, "setup_posterior_samples_and_inject": 159, "prior": [160, 161, 162, 163, 164, 165, 166], "di": 161, "chi_effective_prior_from_aligned_spin": 162, "chi_effective_prior_from_isotropic_spin": 163, "chi_p_prior_from_isotropic_spin": 164, "chi_p_prior_given_chi_eff_q": 165, "joint_prior_from_isotropic_spin": 166, "select": [167, 168, 169, 170, 171, 172], "convert_component_spin_injections_to_chieff": 168, "get_injection_dict": 169, "get_semianlytic_injection_dict": 170, "load_inject": 171, "resample_inject": 172, "quick": 173, "start": 173, "welcom": 174, "": 174, "document": 174, "gravit": 174, "wave": 174, "hierarch": 174, "infer": 174, "numpyro": 174, "content": 174, "tutori": 174, "api": 174, "citat": 174, "author": 174, "instal": 175}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Using Basis Splines in Models": [[0, "using-basis-splines-in-models"]], "gwinferno.cosmology": [[1, "module-gwinferno.cosmology"]], "gwinferno.cosmology.Cosmology": [[2, "gwinferno-cosmology-cosmology"]], "gwinferno.distributions": [[3, "module-gwinferno.distributions"]], "gwinferno.distributions.betadist": [[4, "gwinferno-distributions-betadist"]], "gwinferno.distributions.ln_beta_fct": [[5, "gwinferno-distributions-ln-beta-fct"]], "gwinferno.distributions.log_logistic_unit": [[6, "gwinferno-distributions-log-logistic-unit"]], "gwinferno.distributions.logistic_unit": [[7, "gwinferno-distributions-logistic-unit"]], "gwinferno.distributions.powerlaw_logit_pdf": [[8, "gwinferno-distributions-powerlaw-logit-pdf"]], "gwinferno.distributions.powerlaw_pdf": [[9, "gwinferno-distributions-powerlaw-pdf"]], "gwinferno.distributions.truncnorm_pdf": [[10, "gwinferno-distributions-truncnorm-pdf"]], "gwinferno.interpolation": [[11, "module-gwinferno.interpolation"]], "gwinferno.interpolation.BSpline": [[12, "gwinferno-interpolation-bspline"]], "gwinferno.interpolation.BasisSpline": [[13, "gwinferno-interpolation-basisspline"]], "gwinferno.interpolation.LogXBSpline": [[14, "gwinferno-interpolation-logxbspline"]], "gwinferno.interpolation.LogXLogYBSpline": [[15, "gwinferno-interpolation-logxlogybspline"]], "gwinferno.interpolation.LogYBSpline": [[16, "gwinferno-interpolation-logybspline"]], "gwinferno.interpolation.NaturalCubicUnivariateSpline": [[17, "gwinferno-interpolation-naturalcubicunivariatespline"]], "gwinferno.interpolation.RectBivariateBasisSpline": [[18, "gwinferno-interpolation-rectbivariatebasisspline"]], "gwinferno.models": [[19, "module-gwinferno.models"]], "gwinferno.models.bsplines": [[20, "module-gwinferno.models.bsplines"]], "gwinferno.models.bsplines.joint": [[21, "module-gwinferno.models.bsplines.joint"]], "gwinferno.models.bsplines.joint.BSplineJointMassRatioChiEffective": [[22, "gwinferno-models-bsplines-joint-bsplinejointmassratiochieffective"]], "gwinferno.models.bsplines.joint.Base2DBSplineModel": [[23, "gwinferno-models-bsplines-joint-base2dbsplinemodel"]], "gwinferno.models.bsplines.separable": [[24, "module-gwinferno.models.bsplines.separable"]], "gwinferno.models.bsplines.separable.BSplineEffectiveSpinDims": [[25, "gwinferno-models-bsplines-separable-bsplineeffectivespindims"]], "gwinferno.models.bsplines.separable.BSplineIIDComponentMasses": [[26, "gwinferno-models-bsplines-separable-bsplineiidcomponentmasses"]], "gwinferno.models.bsplines.separable.BSplineIIDSpinMagnitudes": [[27, "gwinferno-models-bsplines-separable-bsplineiidspinmagnitudes"]], "gwinferno.models.bsplines.separable.BSplineIIDSpinTilts": [[28, "gwinferno-models-bsplines-separable-bsplineiidspintilts"]], "gwinferno.models.bsplines.separable.BSplineIndependentComponentMasses": [[29, "gwinferno-models-bsplines-separable-bsplineindependentcomponentmasses"]], "gwinferno.models.bsplines.separable.BSplineIndependentSpinMagnitudes": [[30, "gwinferno-models-bsplines-separable-bsplineindependentspinmagnitudes"]], "gwinferno.models.bsplines.separable.BSplineIndependentSpinTilts": [[31, "gwinferno-models-bsplines-separable-bsplineindependentspintilts"]], "gwinferno.models.bsplines.separable.BSplinePrimaryBSplineRatio": [[32, "gwinferno-models-bsplines-separable-bsplineprimarybsplineratio"]], "gwinferno.models.bsplines.separable.BSplinePrimaryPowerlawRatio": [[33, "gwinferno-models-bsplines-separable-bsplineprimarypowerlawratio"]], "gwinferno.models.bsplines.separable.PLPeakPrimaryBSplineRatio": [[34, "gwinferno-models-bsplines-separable-plpeakprimarybsplineratio"]], "gwinferno.models.bsplines.single": [[35, "module-gwinferno.models.bsplines.single"]], "gwinferno.models.bsplines.single.BSplineChiEffective": [[36, "gwinferno-models-bsplines-single-bsplinechieffective"]], "gwinferno.models.bsplines.single.BSplineChiPrecess": [[37, "gwinferno-models-bsplines-single-bsplinechiprecess"]], "gwinferno.models.bsplines.single.BSplineMass": [[38, "gwinferno-models-bsplines-single-bsplinemass"]], "gwinferno.models.bsplines.single.BSplineRatio": [[39, "gwinferno-models-bsplines-single-bsplineratio"]], "gwinferno.models.bsplines.single.BSplineRedshift": [[40, "gwinferno-models-bsplines-single-bsplineredshift"]], "gwinferno.models.bsplines.single.BSplineSpinMagnitude": [[41, "gwinferno-models-bsplines-single-bsplinespinmagnitude"]], "gwinferno.models.bsplines.single.BSplineSpinTilt": [[42, "gwinferno-models-bsplines-single-bsplinespintilt"]], "gwinferno.models.bsplines.single.BSplineSymmetricChiEffective": [[43, "gwinferno-models-bsplines-single-bsplinesymmetricchieffective"]], "gwinferno.models.bsplines.single.Base1DBSplineModel": [[44, "gwinferno-models-bsplines-single-base1dbsplinemodel"]], "gwinferno.models.bsplines.smoothing": [[45, "module-gwinferno.models.bsplines.smoothing"]], "gwinferno.models.bsplines.smoothing.apply_difference_prior": [[46, "gwinferno-models-bsplines-smoothing-apply-difference-prior"]], "gwinferno.models.bsplines.smoothing.apply_twod_difference_prior": [[47, "gwinferno-models-bsplines-smoothing-apply-twod-difference-prior"]], "gwinferno.models.bsplines.smoothing.get_adaptive_Lambda": [[48, "gwinferno-models-bsplines-smoothing-get-adaptive-lambda"]], "gwinferno.models.bsplines.smoothing.mixture_smoothing_parameter": [[49, "gwinferno-models-bsplines-smoothing-mixture-smoothing-parameter"]], "gwinferno.models.gwpopulation": [[50, "module-gwinferno.models.gwpopulation"]], "gwinferno.models.gwpopulation.gwpopulation": [[51, "module-gwinferno.models.gwpopulation.gwpopulation"]], "gwinferno.models.gwpopulation.gwpopulation.PowerlawRedshiftModel": [[52, "gwinferno-models-gwpopulation-gwpopulation-powerlawredshiftmodel"]], "gwinferno.models.gwpopulation.gwpopulation.beta_spin_magnitude": [[53, "gwinferno-models-gwpopulation-gwpopulation-beta-spin-magnitude"]], "gwinferno.models.gwpopulation.gwpopulation.iid_spin_magnitude": [[54, "gwinferno-models-gwpopulation-gwpopulation-iid-spin-magnitude"]], "gwinferno.models.gwpopulation.gwpopulation.iid_spin_tilt": [[55, "gwinferno-models-gwpopulation-gwpopulation-iid-spin-tilt"]], "gwinferno.models.gwpopulation.gwpopulation.independent_spin_magnitude": [[56, "gwinferno-models-gwpopulation-gwpopulation-independent-spin-magnitude"]], "gwinferno.models.gwpopulation.gwpopulation.independent_spin_tilt": [[57, "gwinferno-models-gwpopulation-gwpopulation-independent-spin-tilt"]], "gwinferno.models.gwpopulation.gwpopulation.mixture_isoalign_spin_tilt": [[58, "gwinferno-models-gwpopulation-gwpopulation-mixture-isoalign-spin-tilt"]], "gwinferno.models.gwpopulation.gwpopulation.plpeak_primary_pdf": [[59, "gwinferno-models-gwpopulation-gwpopulation-plpeak-primary-pdf"]], "gwinferno.models.gwpopulation.gwpopulation.plpeak_primary_ratio_pdf": [[60, "gwinferno-models-gwpopulation-gwpopulation-plpeak-primary-ratio-pdf"]], "gwinferno.models.gwpopulation.gwpopulation.powerlaw_primary_ratio_falloff_pdf": [[61, "gwinferno-models-gwpopulation-gwpopulation-powerlaw-primary-ratio-falloff-pdf"]], "gwinferno.models.gwpopulation.gwpopulation.powerlaw_primary_ratio_pdf": [[62, "gwinferno-models-gwpopulation-gwpopulation-powerlaw-primary-ratio-pdf"]], "gwinferno.models.mass_gap": [[63, "module-gwinferno.models.mass_gap"]], "gwinferno.models.mass_gap.logistic_unit": [[64, "gwinferno-models-mass-gap-logistic-unit"]], "gwinferno.models.mass_gap.plpeak_gap_primary_ratio_pdf": [[65, "gwinferno-models-mass-gap-plpeak-gap-primary-ratio-pdf"]], "gwinferno.models.mass_gap.powerlaw_gap_cutoff_primary_ratio_pdf": [[66, "gwinferno-models-mass-gap-powerlaw-gap-cutoff-primary-ratio-pdf"]], "gwinferno.models.mass_gap.powerlaw_gap_logit_ben_primary_pdf": [[67, "gwinferno-models-mass-gap-powerlaw-gap-logit-ben-primary-pdf"]], "gwinferno.models.mass_gap.powerlaw_gap_logit_primary_pdf": [[68, "gwinferno-models-mass-gap-powerlaw-gap-logit-primary-pdf"]], "gwinferno.models.mass_gap.powerlaw_gap_primary_ratio_pdf": [[69, "gwinferno-models-mass-gap-powerlaw-gap-primary-ratio-pdf"]], "gwinferno.models.spline_perturbation": [[70, "module-gwinferno.models.spline_perturbation"]], "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio": [[71, "gwinferno-models-spline-perturbation-powerlawbasissplineprimarypowerlawratio"]], "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio": [[72, "gwinferno-models-spline-perturbation-powerlawbasissplineprimaryratio"]], "gwinferno.models.spline_perturbation.PowerlawSplineRedshiftModel": [[73, "gwinferno-models-spline-perturbation-powerlawsplineredshiftmodel"]], "gwinferno.numpyro_distributions": [[74, "module-gwinferno.numpyro_distributions"]], "gwinferno.numpyro_distributions.BSplineDistribution": [[75, "gwinferno-numpyro-distributions-bsplinedistribution"]], "gwinferno.numpyro_distributions.Cosine": [[76, "gwinferno-numpyro-distributions-cosine"]], "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw": [[77, "gwinferno-numpyro-distributions-cubicinterpolatedpowerlaw"]], "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw": [[78, "gwinferno-numpyro-distributions-linearinterpolatedpowerlaw"]], "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition": [[79, "gwinferno-numpyro-distributions-numericallynormalizeddistribition"]], "gwinferno.numpyro_distributions.PSplineCoeficientPrior": [[80, "gwinferno-numpyro-distributions-psplinecoeficientprior"]], "gwinferno.numpyro_distributions.Powerlaw": [[81, "gwinferno-numpyro-distributions-powerlaw"]], "gwinferno.numpyro_distributions.PowerlawRedshift": [[82, "gwinferno-numpyro-distributions-powerlawredshift"]], "gwinferno.numpyro_distributions.Sine": [[83, "gwinferno-numpyro-distributions-sine"]], "gwinferno.numpyro_distributions.cumtrapz": [[84, "gwinferno-numpyro-distributions-cumtrapz"]], "gwinferno.parameter_estimation": [[85, "module-gwinferno.parameter_estimation"]], "gwinferno.parameter_estimation.detectors": [[86, "module-gwinferno.parameter_estimation.detectors"]], "gwinferno.parameter_estimation.detectors.Detector": [[87, "gwinferno-parameter-estimation-detectors-detector"]], "gwinferno.parameter_estimation.detectors.H1": [[88, "gwinferno-parameter-estimation-detectors-h1"]], "gwinferno.parameter_estimation.detectors.L1": [[89, "gwinferno-parameter-estimation-detectors-l1"]], "gwinferno.parameter_estimation.detectors.V1": [[90, "gwinferno-parameter-estimation-detectors-v1"]], "gwinferno.parameter_estimation.detectors.construct_arm": [[91, "gwinferno-parameter-estimation-detectors-construct-arm"]], "gwinferno.parameter_estimation.detectors.get_detector_tensor": [[92, "gwinferno-parameter-estimation-detectors-get-detector-tensor"]], "gwinferno.parameter_estimation.detectors.get_geocentric_vertex": [[93, "gwinferno-parameter-estimation-detectors-get-geocentric-vertex"]], "gwinferno.parameter_estimation.detectors.make_get_polarization_tensor": [[94, "gwinferno-parameter-estimation-detectors-make-get-polarization-tensor"]], "gwinferno.parameter_estimation.likelihood": [[95, "module-gwinferno.parameter_estimation.likelihood"]], "gwinferno.parameter_estimation.likelihood.inner_product": [[96, "gwinferno-parameter-estimation-likelihood-inner-product"]], "gwinferno.parameter_estimation.likelihood.log_likelihood": [[97, "gwinferno-parameter-estimation-likelihood-log-likelihood"]], "gwinferno.parameter_estimation.likelihood.log_likelihood_det": [[98, "gwinferno-parameter-estimation-likelihood-log-likelihood-det"]], "gwinferno.parameter_estimation.likelihood.matched_filter_snr": [[99, "gwinferno-parameter-estimation-likelihood-matched-filter-snr"]], "gwinferno.parameter_estimation.likelihood.noise_log_likelihood": [[100, "gwinferno-parameter-estimation-likelihood-noise-log-likelihood"]], "gwinferno.parameter_estimation.likelihood.noise_log_likelihood_det": [[101, "gwinferno-parameter-estimation-likelihood-noise-log-likelihood-det"]], "gwinferno.parameter_estimation.likelihood.noise_weighted_inner_product": [[102, "gwinferno-parameter-estimation-likelihood-noise-weighted-inner-product"]], "gwinferno.parameter_estimation.likelihood.optimal_snr_squared": [[103, "gwinferno-parameter-estimation-likelihood-optimal-snr-squared"]], "gwinferno.pipeline": [[104, "module-gwinferno.pipeline"]], "gwinferno.pipeline.analysis": [[105, "module-gwinferno.pipeline.analysis"]], "gwinferno.pipeline.analysis.TotalVTCalculator": [[106, "gwinferno-pipeline-analysis-totalvtcalculator"]], "gwinferno.pipeline.analysis.construct_hierarchical_model": [[107, "gwinferno-pipeline-analysis-construct-hierarchical-model"]], "gwinferno.pipeline.analysis.find_map": [[108, "gwinferno-pipeline-analysis-find-map"]], "gwinferno.pipeline.analysis.hierarchical_likelihood": [[109, "gwinferno-pipeline-analysis-hierarchical-likelihood"]], "gwinferno.pipeline.analysis.hierarchical_likelihood_in_log": [[110, "gwinferno-pipeline-analysis-hierarchical-likelihood-in-log"]], "gwinferno.pipeline.analysis.logmu_logneff_injections_log": [[111, "gwinferno-pipeline-analysis-logmu-logneff-injections-log"]], "gwinferno.pipeline.analysis.mu_neff_injections": [[112, "gwinferno-pipeline-analysis-mu-neff-injections"]], "gwinferno.pipeline.analysis.per_event_log_bayes_factor_log_neffs": [[113, "gwinferno-pipeline-analysis-per-event-log-bayes-factor-log-neffs"]], "gwinferno.pipeline.analysis.per_event_log_bayes_factor_log_neffs_log": [[114, "gwinferno-pipeline-analysis-per-event-log-bayes-factor-log-neffs-log"]], "gwinferno.pipeline.parser": [[115, "module-gwinferno.pipeline.parser"]], "gwinferno.pipeline.parser.ConfigReader": [[116, "gwinferno-pipeline-parser-configreader"]], "gwinferno.pipeline.parser.PopMixtureModel": [[117, "gwinferno-pipeline-parser-popmixturemodel"]], "gwinferno.pipeline.parser.PopModel": [[118, "gwinferno-pipeline-parser-popmodel"]], "gwinferno.pipeline.parser.PopPrior": [[119, "gwinferno-pipeline-parser-popprior"]], "gwinferno.pipeline.parser.load_base_parser": [[120, "gwinferno-pipeline-parser-load-base-parser"]], "gwinferno.pipeline.parser.load_dist_from_string": [[121, "gwinferno-pipeline-parser-load-dist-from-string"]], "gwinferno.pipeline.parser.load_model_from_python_file": [[122, "gwinferno-pipeline-parser-load-model-from-python-file"]], "gwinferno.postprocess": [[123, "module-gwinferno.postprocess"]], "gwinferno.postprocess.calculate_ppds": [[124, "module-gwinferno.postprocess.calculate_ppds"]], "gwinferno.postprocess.calculate_ppds.calculate_chieff_bspline_ppds": [[125, "gwinferno-postprocess-calculate-ppds-calculate-chieff-bspline-ppds"]], "gwinferno.postprocess.calculate_ppds.calculate_iid_spin_bspline_ppds": [[126, "gwinferno-postprocess-calculate-ppds-calculate-iid-spin-bspline-ppds"]], "gwinferno.postprocess.calculate_ppds.calculate_iid_spin_bspline_weights": [[127, "gwinferno-postprocess-calculate-ppds-calculate-iid-spin-bspline-weights"]], "gwinferno.postprocess.calculate_ppds.calculate_ind_spin_bspline_ppds": [[128, "gwinferno-postprocess-calculate-ppds-calculate-ind-spin-bspline-ppds"]], "gwinferno.postprocess.calculate_ppds.calculate_m1_bspline_q_powerlaw_ppds": [[129, "gwinferno-postprocess-calculate-ppds-calculate-m1-bspline-q-powerlaw-ppds"]], "gwinferno.postprocess.calculate_ppds.calculate_m1m2_bspline_ppds": [[130, "gwinferno-postprocess-calculate-ppds-calculate-m1m2-bspline-ppds"]], "gwinferno.postprocess.calculate_ppds.calculate_m1q_bspline_ppds": [[131, "gwinferno-postprocess-calculate-ppds-calculate-m1q-bspline-ppds"]], "gwinferno.postprocess.calculate_ppds.calculate_m1q_bspline_weights": [[132, "gwinferno-postprocess-calculate-ppds-calculate-m1q-bspline-weights"]], "gwinferno.postprocess.calculate_ppds.calculate_m1q_ppds_plbspline_model": [[133, "gwinferno-postprocess-calculate-ppds-calculate-m1q-ppds-plbspline-model"]], "gwinferno.postprocess.calculate_ppds.calculate_powerbspline_rate_of_z_ppds": [[134, "gwinferno-postprocess-calculate-ppds-calculate-powerbspline-rate-of-z-ppds"]], "gwinferno.postprocess.calculate_ppds.calculate_powerlaw_rate_of_z_ppds": [[135, "gwinferno-postprocess-calculate-ppds-calculate-powerlaw-rate-of-z-ppds"]], "gwinferno.postprocess.plotting": [[136, "module-gwinferno.postprocess.plotting"]], "gwinferno.postprocess.plotting.plot_chieff_dist": [[137, "gwinferno-postprocess-plotting-plot-chieff-dist"]], "gwinferno.postprocess.plotting.plot_iid_spin_dist": [[138, "gwinferno-postprocess-plotting-plot-iid-spin-dist"]], "gwinferno.postprocess.plotting.plot_ind_spin_dist": [[139, "gwinferno-postprocess-plotting-plot-ind-spin-dist"]], "gwinferno.postprocess.plotting.plot_m1_vs_z_ppc": [[140, "gwinferno-postprocess-plotting-plot-m1-vs-z-ppc"]], "gwinferno.postprocess.plotting.plot_mass_dist": [[141, "gwinferno-postprocess-plotting-plot-mass-dist"]], "gwinferno.postprocess.plotting.plot_ppc_brontosaurus": [[142, "gwinferno-postprocess-plotting-plot-ppc-brontosaurus"]], "gwinferno.postprocess.plotting.plot_rofz": [[143, "gwinferno-postprocess-plotting-plot-rofz"]], "gwinferno.preprocess": [[144, "module-gwinferno.preprocess"]], "gwinferno.preprocess.conversions": [[145, "module-gwinferno.preprocess.conversions"]], "gwinferno.preprocess.conversions.alpha_beta_from_mu_var": [[146, "gwinferno-preprocess-conversions-alpha-beta-from-mu-var"]], "gwinferno.preprocess.conversions.chieff_from_q_component_spins": [[147, "gwinferno-preprocess-conversions-chieff-from-q-component-spins"]], "gwinferno.preprocess.conversions.chip_from_q_component_spins": [[148, "gwinferno-preprocess-conversions-chip-from-q-component-spins"]], "gwinferno.preprocess.conversions.mu_var_from_alpha_beta": [[149, "gwinferno-preprocess-conversions-mu-var-from-alpha-beta"]], "gwinferno.preprocess.data_collection": [[150, "module-gwinferno.preprocess.data_collection"]], "gwinferno.preprocess.data_collection.apply_priors": [[151, "gwinferno-preprocess-data-collection-apply-priors"]], "gwinferno.preprocess.data_collection.convert_component_spin_posteriors_to_chieff": [[152, "gwinferno-preprocess-data-collection-convert-component-spin-posteriors-to-chieff"]], "gwinferno.preprocess.data_collection.dl_2_prior_on_z": [[153, "gwinferno-preprocess-data-collection-dl-2-prior-on-z"]], "gwinferno.preprocess.data_collection.downsample_posteriors_to_consistent_nsamps": [[154, "gwinferno-preprocess-data-collection-downsample-posteriors-to-consistent-nsamps"]], "gwinferno.preprocess.data_collection.load_catalog_from_metadata": [[155, "gwinferno-preprocess-data-collection-load-catalog-from-metadata"]], "gwinferno.preprocess.data_collection.load_posterior_samples": [[156, "gwinferno-preprocess-data-collection-load-posterior-samples"]], "gwinferno.preprocess.data_collection.p_m1src_q_z_lal_pe_prior": [[157, "gwinferno-preprocess-data-collection-p-m1src-q-z-lal-pe-prior"]], "gwinferno.preprocess.data_collection.preprocess_data": [[158, "gwinferno-preprocess-data-collection-preprocess-data"]], "gwinferno.preprocess.data_collection.setup_posterior_samples_and_injections": [[159, "gwinferno-preprocess-data-collection-setup-posterior-samples-and-injections"]], "gwinferno.preprocess.priors": [[160, "module-gwinferno.preprocess.priors"]], "gwinferno.preprocess.priors.Di": [[161, "gwinferno-preprocess-priors-di"]], "gwinferno.preprocess.priors.chi_effective_prior_from_aligned_spins": [[162, "gwinferno-preprocess-priors-chi-effective-prior-from-aligned-spins"]], "gwinferno.preprocess.priors.chi_effective_prior_from_isotropic_spins": [[163, "gwinferno-preprocess-priors-chi-effective-prior-from-isotropic-spins"]], "gwinferno.preprocess.priors.chi_p_prior_from_isotropic_spins": [[164, "gwinferno-preprocess-priors-chi-p-prior-from-isotropic-spins"]], "gwinferno.preprocess.priors.chi_p_prior_given_chi_eff_q": [[165, "gwinferno-preprocess-priors-chi-p-prior-given-chi-eff-q"]], "gwinferno.preprocess.priors.joint_prior_from_isotropic_spins": [[166, "gwinferno-preprocess-priors-joint-prior-from-isotropic-spins"]], "gwinferno.preprocess.selection": [[167, "module-gwinferno.preprocess.selection"]], "gwinferno.preprocess.selection.convert_component_spin_injections_to_chieff": [[168, "gwinferno-preprocess-selection-convert-component-spin-injections-to-chieff"]], "gwinferno.preprocess.selection.get_injection_dict": [[169, "gwinferno-preprocess-selection-get-injection-dict"]], "gwinferno.preprocess.selection.get_semianlytic_injection_dict": [[170, "gwinferno-preprocess-selection-get-semianlytic-injection-dict"]], "gwinferno.preprocess.selection.load_injections": [[171, "gwinferno-preprocess-selection-load-injections"]], "gwinferno.preprocess.selection.resample_injections": [[172, "gwinferno-preprocess-selection-resample-injections"]], "Quick Start": [[173, "quick-start"]], "Welcome to GWInferno\u2019s documentation!": [[174, "welcome-to-gwinferno-s-documentation"]], "GWInferno: Gravitational-Wave Hierarchical Inference with NumPyro": [[174, "gwinferno-gravitational-wave-hierarchical-inference-with-numpyro"]], "Contents:": [[174, null]], "Tutorials:": [[174, null]], "API:": [[174, "module-gwinferno"]], "Citation": [[174, "citation"]], "Authors": [[174, "authors"]], "Installation": [[175, "installation"]]}, "indexentries": {"gwinferno.cosmology": [[1, "module-gwinferno.cosmology"]], "module": [[1, "module-gwinferno.cosmology"], [3, "module-gwinferno.distributions"], [11, "module-gwinferno.interpolation"], [19, "module-gwinferno.models"], [20, "module-gwinferno.models.bsplines"], [21, "module-gwinferno.models.bsplines.joint"], [24, "module-gwinferno.models.bsplines.separable"], [35, "module-gwinferno.models.bsplines.single"], [45, "module-gwinferno.models.bsplines.smoothing"], [50, "module-gwinferno.models.gwpopulation"], [51, "module-gwinferno.models.gwpopulation.gwpopulation"], [63, "module-gwinferno.models.mass_gap"], [70, "module-gwinferno.models.spline_perturbation"], [74, "module-gwinferno.numpyro_distributions"], [85, "module-gwinferno.parameter_estimation"], [86, "module-gwinferno.parameter_estimation.detectors"], [95, "module-gwinferno.parameter_estimation.likelihood"], [104, "module-gwinferno.pipeline"], [105, "module-gwinferno.pipeline.analysis"], [115, "module-gwinferno.pipeline.parser"], [123, "module-gwinferno.postprocess"], [124, "module-gwinferno.postprocess.calculate_ppds"], [136, "module-gwinferno.postprocess.plotting"], [144, "module-gwinferno.preprocess"], [145, "module-gwinferno.preprocess.conversions"], [150, "module-gwinferno.preprocess.data_collection"], [160, "module-gwinferno.preprocess.priors"], [167, "module-gwinferno.preprocess.selection"], [174, "module-gwinferno"]], "cosmology (class in gwinferno.cosmology)": [[2, "gwinferno.cosmology.Cosmology"]], "dl2z() (gwinferno.cosmology.cosmology method)": [[2, "gwinferno.cosmology.Cosmology.DL2z"]], "__call__() (gwinferno.cosmology.cosmology method)": [[2, "gwinferno.cosmology.Cosmology.__call__"]], "__init__() (gwinferno.cosmology.cosmology method)": [[2, "gwinferno.cosmology.Cosmology.__init__"]], "ddcdz() (gwinferno.cosmology.cosmology method)": [[2, "gwinferno.cosmology.Cosmology.dDcdz"]], "dvcdz() (gwinferno.cosmology.cosmology method)": [[2, "gwinferno.cosmology.Cosmology.dVcdz"]], "extend() (gwinferno.cosmology.cosmology method)": [[2, "gwinferno.cosmology.Cosmology.extend"]], "logdvcdz() (gwinferno.cosmology.cosmology method)": [[2, "gwinferno.cosmology.Cosmology.logdVcdz"]], "z2dl() (gwinferno.cosmology.cosmology method)": [[2, "gwinferno.cosmology.Cosmology.z2DL"]], "z2dc() (gwinferno.cosmology.cosmology method)": [[2, "gwinferno.cosmology.Cosmology.z2Dc"]], "z2e() (gwinferno.cosmology.cosmology method)": [[2, "gwinferno.cosmology.Cosmology.z2E"]], "gwinferno.distributions": [[3, "module-gwinferno.distributions"]], "betadist() (in module gwinferno.distributions)": [[4, "gwinferno.distributions.betadist"]], "ln_beta_fct() (in module gwinferno.distributions)": [[5, "gwinferno.distributions.ln_beta_fct"]], "log_logistic_unit() (in module gwinferno.distributions)": [[6, "gwinferno.distributions.log_logistic_unit"]], "logistic_unit() (in module gwinferno.distributions)": [[7, "gwinferno.distributions.logistic_unit"]], "powerlaw_logit_pdf() (in module gwinferno.distributions)": [[8, "gwinferno.distributions.powerlaw_logit_pdf"]], "powerlaw_pdf() (in module gwinferno.distributions)": [[9, "gwinferno.distributions.powerlaw_pdf"]], "truncnorm_pdf() (in module gwinferno.distributions)": [[10, "gwinferno.distributions.truncnorm_pdf"]], "gwinferno.interpolation": [[11, "module-gwinferno.interpolation"]], "bspline (class in gwinferno.interpolation)": [[12, "gwinferno.interpolation.BSpline"]], "__call__() (gwinferno.interpolation.bspline method)": [[12, "gwinferno.interpolation.BSpline.__call__"]], "__init__() (gwinferno.interpolation.bspline method)": [[12, "gwinferno.interpolation.BSpline.__init__"]], "bases() (gwinferno.interpolation.bspline method)": [[12, "gwinferno.interpolation.BSpline.bases"]], "eval() (gwinferno.interpolation.bspline method)": [[12, "gwinferno.interpolation.BSpline.eval"]], "get_coefficients() (gwinferno.interpolation.bspline method)": [[12, "gwinferno.interpolation.BSpline.get_coefficients"]], "norm() (gwinferno.interpolation.bspline method)": [[12, "gwinferno.interpolation.BSpline.norm"]], "project() (gwinferno.interpolation.bspline method)": [[12, "gwinferno.interpolation.BSpline.project"]], "basisspline (class in gwinferno.interpolation)": [[13, "gwinferno.interpolation.BasisSpline"]], "__call__() (gwinferno.interpolation.basisspline method)": [[13, "gwinferno.interpolation.BasisSpline.__call__"]], "__init__() (gwinferno.interpolation.basisspline method)": [[13, "gwinferno.interpolation.BasisSpline.__init__"]], "bases() (gwinferno.interpolation.basisspline method)": [[13, "gwinferno.interpolation.BasisSpline.bases"]], "eval() (gwinferno.interpolation.basisspline method)": [[13, "gwinferno.interpolation.BasisSpline.eval"]], "get_coefficients() (gwinferno.interpolation.basisspline method)": [[13, "gwinferno.interpolation.BasisSpline.get_coefficients"]], "norm() (gwinferno.interpolation.basisspline method)": [[13, "gwinferno.interpolation.BasisSpline.norm"]], "project() (gwinferno.interpolation.basisspline method)": [[13, "gwinferno.interpolation.BasisSpline.project"]], "logxbspline (class in gwinferno.interpolation)": [[14, "gwinferno.interpolation.LogXBSpline"]], "__call__() (gwinferno.interpolation.logxbspline method)": [[14, "gwinferno.interpolation.LogXBSpline.__call__"]], "__init__() (gwinferno.interpolation.logxbspline method)": [[14, "gwinferno.interpolation.LogXBSpline.__init__"]], "bases() (gwinferno.interpolation.logxbspline method)": [[14, "gwinferno.interpolation.LogXBSpline.bases"]], "eval() (gwinferno.interpolation.logxbspline method)": [[14, "gwinferno.interpolation.LogXBSpline.eval"]], "get_coefficients() (gwinferno.interpolation.logxbspline method)": [[14, "gwinferno.interpolation.LogXBSpline.get_coefficients"]], "norm() (gwinferno.interpolation.logxbspline method)": [[14, "gwinferno.interpolation.LogXBSpline.norm"]], "project() (gwinferno.interpolation.logxbspline method)": [[14, "gwinferno.interpolation.LogXBSpline.project"]], "logxlogybspline (class in gwinferno.interpolation)": [[15, "gwinferno.interpolation.LogXLogYBSpline"]], "__call__() (gwinferno.interpolation.logxlogybspline method)": [[15, "gwinferno.interpolation.LogXLogYBSpline.__call__"]], "__init__() (gwinferno.interpolation.logxlogybspline method)": [[15, "gwinferno.interpolation.LogXLogYBSpline.__init__"]], "bases() (gwinferno.interpolation.logxlogybspline method)": [[15, "gwinferno.interpolation.LogXLogYBSpline.bases"]], "eval() (gwinferno.interpolation.logxlogybspline method)": [[15, "gwinferno.interpolation.LogXLogYBSpline.eval"]], "get_coefficients() (gwinferno.interpolation.logxlogybspline method)": [[15, "gwinferno.interpolation.LogXLogYBSpline.get_coefficients"]], "norm() (gwinferno.interpolation.logxlogybspline method)": [[15, "gwinferno.interpolation.LogXLogYBSpline.norm"]], "project() (gwinferno.interpolation.logxlogybspline method)": [[15, "gwinferno.interpolation.LogXLogYBSpline.project"]], "logybspline (class in gwinferno.interpolation)": [[16, "gwinferno.interpolation.LogYBSpline"]], "__call__() (gwinferno.interpolation.logybspline method)": [[16, "gwinferno.interpolation.LogYBSpline.__call__"]], "__init__() (gwinferno.interpolation.logybspline method)": [[16, "gwinferno.interpolation.LogYBSpline.__init__"]], "bases() (gwinferno.interpolation.logybspline method)": [[16, "gwinferno.interpolation.LogYBSpline.bases"]], "eval() (gwinferno.interpolation.logybspline method)": [[16, "gwinferno.interpolation.LogYBSpline.eval"]], "get_coefficients() (gwinferno.interpolation.logybspline method)": [[16, "gwinferno.interpolation.LogYBSpline.get_coefficients"]], "norm() (gwinferno.interpolation.logybspline method)": [[16, "gwinferno.interpolation.LogYBSpline.norm"]], "project() (gwinferno.interpolation.logybspline method)": [[16, "gwinferno.interpolation.LogYBSpline.project"]], "naturalcubicunivariatespline (class in gwinferno.interpolation)": [[17, "gwinferno.interpolation.NaturalCubicUnivariateSpline"]], "__call__() (gwinferno.interpolation.naturalcubicunivariatespline method)": [[17, "gwinferno.interpolation.NaturalCubicUnivariateSpline.__call__"]], "__init__() (gwinferno.interpolation.naturalcubicunivariatespline method)": [[17, "gwinferno.interpolation.NaturalCubicUnivariateSpline.__init__"]], "rectbivariatebasisspline (class in gwinferno.interpolation)": [[18, "gwinferno.interpolation.RectBivariateBasisSpline"]], "__call__() (gwinferno.interpolation.rectbivariatebasisspline method)": [[18, "gwinferno.interpolation.RectBivariateBasisSpline.__call__"]], "__init__() (gwinferno.interpolation.rectbivariatebasisspline method)": [[18, "gwinferno.interpolation.RectBivariateBasisSpline.__init__"]], "bases() (gwinferno.interpolation.rectbivariatebasisspline method)": [[18, "gwinferno.interpolation.RectBivariateBasisSpline.bases"]], "norm_2d() (gwinferno.interpolation.rectbivariatebasisspline method)": [[18, "gwinferno.interpolation.RectBivariateBasisSpline.norm_2d"]], "project() (gwinferno.interpolation.rectbivariatebasisspline method)": [[18, "gwinferno.interpolation.RectBivariateBasisSpline.project"]], "gwinferno.models": [[19, "module-gwinferno.models"]], "gwinferno.models.bsplines": [[20, "module-gwinferno.models.bsplines"]], "gwinferno.models.bsplines.joint": [[21, "module-gwinferno.models.bsplines.joint"]], "bsplinejointmassratiochieffective (class in gwinferno.models.bsplines.joint)": [[22, "gwinferno.models.bsplines.joint.BSplineJointMassRatioChiEffective"]], "__call__() (gwinferno.models.bsplines.joint.bsplinejointmassratiochieffective method)": [[22, "gwinferno.models.bsplines.joint.BSplineJointMassRatioChiEffective.__call__"]], "__init__() (gwinferno.models.bsplines.joint.bsplinejointmassratiochieffective method)": [[22, "gwinferno.models.bsplines.joint.BSplineJointMassRatioChiEffective.__init__"]], "base2dbsplinemodel (class in gwinferno.models.bsplines.joint)": [[23, "gwinferno.models.bsplines.joint.Base2DBSplineModel"]], "__call__() (gwinferno.models.bsplines.joint.base2dbsplinemodel method)": [[23, "gwinferno.models.bsplines.joint.Base2DBSplineModel.__call__"]], "__init__() (gwinferno.models.bsplines.joint.base2dbsplinemodel method)": [[23, "gwinferno.models.bsplines.joint.Base2DBSplineModel.__init__"]], "gwinferno.models.bsplines.separable": [[24, "module-gwinferno.models.bsplines.separable"]], "bsplineeffectivespindims (class in gwinferno.models.bsplines.separable)": [[25, "gwinferno.models.bsplines.separable.BSplineEffectiveSpinDims"]], "__call__() (gwinferno.models.bsplines.separable.bsplineeffectivespindims method)": [[25, "gwinferno.models.bsplines.separable.BSplineEffectiveSpinDims.__call__"]], "__init__() (gwinferno.models.bsplines.separable.bsplineeffectivespindims method)": [[25, "gwinferno.models.bsplines.separable.BSplineEffectiveSpinDims.__init__"]], "bsplineiidcomponentmasses (class in gwinferno.models.bsplines.separable)": [[26, "gwinferno.models.bsplines.separable.BSplineIIDComponentMasses"]], "__call__() (gwinferno.models.bsplines.separable.bsplineiidcomponentmasses method)": [[26, "gwinferno.models.bsplines.separable.BSplineIIDComponentMasses.__call__"]], "__init__() (gwinferno.models.bsplines.separable.bsplineiidcomponentmasses method)": [[26, "gwinferno.models.bsplines.separable.BSplineIIDComponentMasses.__init__"]], "bsplineiidspinmagnitudes (class in gwinferno.models.bsplines.separable)": [[27, "gwinferno.models.bsplines.separable.BSplineIIDSpinMagnitudes"]], "__call__() (gwinferno.models.bsplines.separable.bsplineiidspinmagnitudes method)": [[27, "gwinferno.models.bsplines.separable.BSplineIIDSpinMagnitudes.__call__"]], "__init__() (gwinferno.models.bsplines.separable.bsplineiidspinmagnitudes method)": [[27, "gwinferno.models.bsplines.separable.BSplineIIDSpinMagnitudes.__init__"]], "bsplineiidspintilts (class in gwinferno.models.bsplines.separable)": [[28, "gwinferno.models.bsplines.separable.BSplineIIDSpinTilts"]], "__call__() (gwinferno.models.bsplines.separable.bsplineiidspintilts method)": [[28, "gwinferno.models.bsplines.separable.BSplineIIDSpinTilts.__call__"]], "__init__() (gwinferno.models.bsplines.separable.bsplineiidspintilts method)": [[28, "gwinferno.models.bsplines.separable.BSplineIIDSpinTilts.__init__"]], "bsplineindependentcomponentmasses (class in gwinferno.models.bsplines.separable)": [[29, "gwinferno.models.bsplines.separable.BSplineIndependentComponentMasses"]], "__call__() (gwinferno.models.bsplines.separable.bsplineindependentcomponentmasses method)": [[29, "gwinferno.models.bsplines.separable.BSplineIndependentComponentMasses.__call__"]], "__init__() (gwinferno.models.bsplines.separable.bsplineindependentcomponentmasses method)": [[29, "gwinferno.models.bsplines.separable.BSplineIndependentComponentMasses.__init__"]], "bsplineindependentspinmagnitudes (class in gwinferno.models.bsplines.separable)": [[30, "gwinferno.models.bsplines.separable.BSplineIndependentSpinMagnitudes"]], "__call__() (gwinferno.models.bsplines.separable.bsplineindependentspinmagnitudes method)": [[30, "gwinferno.models.bsplines.separable.BSplineIndependentSpinMagnitudes.__call__"]], "__init__() (gwinferno.models.bsplines.separable.bsplineindependentspinmagnitudes method)": [[30, "gwinferno.models.bsplines.separable.BSplineIndependentSpinMagnitudes.__init__"]], "bsplineindependentspintilts (class in gwinferno.models.bsplines.separable)": [[31, "gwinferno.models.bsplines.separable.BSplineIndependentSpinTilts"]], "__call__() (gwinferno.models.bsplines.separable.bsplineindependentspintilts method)": [[31, "gwinferno.models.bsplines.separable.BSplineIndependentSpinTilts.__call__"]], "__init__() (gwinferno.models.bsplines.separable.bsplineindependentspintilts method)": [[31, "gwinferno.models.bsplines.separable.BSplineIndependentSpinTilts.__init__"]], "bsplineprimarybsplineratio (class in gwinferno.models.bsplines.separable)": [[32, "gwinferno.models.bsplines.separable.BSplinePrimaryBSplineRatio"]], "__call__() (gwinferno.models.bsplines.separable.bsplineprimarybsplineratio method)": [[32, "gwinferno.models.bsplines.separable.BSplinePrimaryBSplineRatio.__call__"]], "__init__() (gwinferno.models.bsplines.separable.bsplineprimarybsplineratio method)": [[32, "gwinferno.models.bsplines.separable.BSplinePrimaryBSplineRatio.__init__"]], "bsplineprimarypowerlawratio (class in gwinferno.models.bsplines.separable)": [[33, "gwinferno.models.bsplines.separable.BSplinePrimaryPowerlawRatio"]], "__call__() (gwinferno.models.bsplines.separable.bsplineprimarypowerlawratio method)": [[33, "gwinferno.models.bsplines.separable.BSplinePrimaryPowerlawRatio.__call__"]], "__init__() (gwinferno.models.bsplines.separable.bsplineprimarypowerlawratio method)": [[33, "gwinferno.models.bsplines.separable.BSplinePrimaryPowerlawRatio.__init__"]], "plpeakprimarybsplineratio (class in gwinferno.models.bsplines.separable)": [[34, "gwinferno.models.bsplines.separable.PLPeakPrimaryBSplineRatio"]], "__call__() (gwinferno.models.bsplines.separable.plpeakprimarybsplineratio method)": [[34, "gwinferno.models.bsplines.separable.PLPeakPrimaryBSplineRatio.__call__"]], "__init__() (gwinferno.models.bsplines.separable.plpeakprimarybsplineratio method)": [[34, "gwinferno.models.bsplines.separable.PLPeakPrimaryBSplineRatio.__init__"]], "gwinferno.models.bsplines.single": [[35, "module-gwinferno.models.bsplines.single"]], "bsplinechieffective (class in gwinferno.models.bsplines.single)": [[36, "gwinferno.models.bsplines.single.BSplineChiEffective"]], "__call__() (gwinferno.models.bsplines.single.bsplinechieffective method)": [[36, "gwinferno.models.bsplines.single.BSplineChiEffective.__call__"]], "__init__() (gwinferno.models.bsplines.single.bsplinechieffective method)": [[36, "gwinferno.models.bsplines.single.BSplineChiEffective.__init__"]], "eval_spline() (gwinferno.models.bsplines.single.bsplinechieffective method)": [[36, "gwinferno.models.bsplines.single.BSplineChiEffective.eval_spline"]], "inj_pdf() (gwinferno.models.bsplines.single.bsplinechieffective method)": [[36, "gwinferno.models.bsplines.single.BSplineChiEffective.inj_pdf"]], "pe_pdf() (gwinferno.models.bsplines.single.bsplinechieffective method)": [[36, "gwinferno.models.bsplines.single.BSplineChiEffective.pe_pdf"]], "truncate_dmat() (gwinferno.models.bsplines.single.bsplinechieffective method)": [[36, "gwinferno.models.bsplines.single.BSplineChiEffective.truncate_dmat"]], "bsplinechiprecess (class in gwinferno.models.bsplines.single)": [[37, "gwinferno.models.bsplines.single.BSplineChiPrecess"]], "__call__() (gwinferno.models.bsplines.single.bsplinechiprecess method)": [[37, "gwinferno.models.bsplines.single.BSplineChiPrecess.__call__"]], "__init__() (gwinferno.models.bsplines.single.bsplinechiprecess method)": [[37, "gwinferno.models.bsplines.single.BSplineChiPrecess.__init__"]], "eval_spline() (gwinferno.models.bsplines.single.bsplinechiprecess method)": [[37, "gwinferno.models.bsplines.single.BSplineChiPrecess.eval_spline"]], "inj_pdf() (gwinferno.models.bsplines.single.bsplinechiprecess method)": [[37, "gwinferno.models.bsplines.single.BSplineChiPrecess.inj_pdf"]], "pe_pdf() (gwinferno.models.bsplines.single.bsplinechiprecess method)": [[37, "gwinferno.models.bsplines.single.BSplineChiPrecess.pe_pdf"]], "truncate_dmat() (gwinferno.models.bsplines.single.bsplinechiprecess method)": [[37, "gwinferno.models.bsplines.single.BSplineChiPrecess.truncate_dmat"]], "bsplinemass (class in gwinferno.models.bsplines.single)": [[38, "gwinferno.models.bsplines.single.BSplineMass"]], "__call__() (gwinferno.models.bsplines.single.bsplinemass method)": [[38, "gwinferno.models.bsplines.single.BSplineMass.__call__"]], "__init__() (gwinferno.models.bsplines.single.bsplinemass method)": [[38, "gwinferno.models.bsplines.single.BSplineMass.__init__"]], "eval_spline() (gwinferno.models.bsplines.single.bsplinemass method)": [[38, "gwinferno.models.bsplines.single.BSplineMass.eval_spline"]], "inj_pdf() (gwinferno.models.bsplines.single.bsplinemass method)": [[38, "gwinferno.models.bsplines.single.BSplineMass.inj_pdf"]], "pe_pdf() (gwinferno.models.bsplines.single.bsplinemass method)": [[38, "gwinferno.models.bsplines.single.BSplineMass.pe_pdf"]], "truncate_dmat() (gwinferno.models.bsplines.single.bsplinemass method)": [[38, "gwinferno.models.bsplines.single.BSplineMass.truncate_dmat"]], "bsplineratio (class in gwinferno.models.bsplines.single)": [[39, "gwinferno.models.bsplines.single.BSplineRatio"]], "__call__() (gwinferno.models.bsplines.single.bsplineratio method)": [[39, "gwinferno.models.bsplines.single.BSplineRatio.__call__"]], "__init__() (gwinferno.models.bsplines.single.bsplineratio method)": [[39, "gwinferno.models.bsplines.single.BSplineRatio.__init__"]], "eval_spline() (gwinferno.models.bsplines.single.bsplineratio method)": [[39, "gwinferno.models.bsplines.single.BSplineRatio.eval_spline"]], "inj_pdf() (gwinferno.models.bsplines.single.bsplineratio method)": [[39, "gwinferno.models.bsplines.single.BSplineRatio.inj_pdf"]], "pe_pdf() (gwinferno.models.bsplines.single.bsplineratio method)": [[39, "gwinferno.models.bsplines.single.BSplineRatio.pe_pdf"]], "truncate_dmat() (gwinferno.models.bsplines.single.bsplineratio method)": [[39, "gwinferno.models.bsplines.single.BSplineRatio.truncate_dmat"]], "bsplineredshift (class in gwinferno.models.bsplines.single)": [[40, "gwinferno.models.bsplines.single.BSplineRedshift"]], "__call__() (gwinferno.models.bsplines.single.bsplineredshift method)": [[40, "gwinferno.models.bsplines.single.BSplineRedshift.__call__"]], "__init__() (gwinferno.models.bsplines.single.bsplineredshift method)": [[40, "gwinferno.models.bsplines.single.BSplineRedshift.__init__"]], "eval_spline() (gwinferno.models.bsplines.single.bsplineredshift method)": [[40, "gwinferno.models.bsplines.single.BSplineRedshift.eval_spline"]], "inj_pdf() (gwinferno.models.bsplines.single.bsplineredshift method)": [[40, "gwinferno.models.bsplines.single.BSplineRedshift.inj_pdf"]], "norm() (gwinferno.models.bsplines.single.bsplineredshift method)": [[40, "gwinferno.models.bsplines.single.BSplineRedshift.norm"]], "pe_pdf() (gwinferno.models.bsplines.single.bsplineredshift method)": [[40, "gwinferno.models.bsplines.single.BSplineRedshift.pe_pdf"]], "truncate_dmat() (gwinferno.models.bsplines.single.bsplineredshift method)": [[40, "gwinferno.models.bsplines.single.BSplineRedshift.truncate_dmat"]], "bsplinespinmagnitude (class in gwinferno.models.bsplines.single)": [[41, "gwinferno.models.bsplines.single.BSplineSpinMagnitude"]], "__call__() (gwinferno.models.bsplines.single.bsplinespinmagnitude method)": [[41, "gwinferno.models.bsplines.single.BSplineSpinMagnitude.__call__"]], "__init__() (gwinferno.models.bsplines.single.bsplinespinmagnitude method)": [[41, "gwinferno.models.bsplines.single.BSplineSpinMagnitude.__init__"]], "eval_spline() (gwinferno.models.bsplines.single.bsplinespinmagnitude method)": [[41, "gwinferno.models.bsplines.single.BSplineSpinMagnitude.eval_spline"]], "inj_pdf() (gwinferno.models.bsplines.single.bsplinespinmagnitude method)": [[41, "gwinferno.models.bsplines.single.BSplineSpinMagnitude.inj_pdf"]], "pe_pdf() (gwinferno.models.bsplines.single.bsplinespinmagnitude method)": [[41, "gwinferno.models.bsplines.single.BSplineSpinMagnitude.pe_pdf"]], "truncate_dmat() (gwinferno.models.bsplines.single.bsplinespinmagnitude method)": [[41, "gwinferno.models.bsplines.single.BSplineSpinMagnitude.truncate_dmat"]], "bsplinespintilt (class in gwinferno.models.bsplines.single)": [[42, "gwinferno.models.bsplines.single.BSplineSpinTilt"]], "__call__() (gwinferno.models.bsplines.single.bsplinespintilt method)": [[42, "gwinferno.models.bsplines.single.BSplineSpinTilt.__call__"]], "__init__() (gwinferno.models.bsplines.single.bsplinespintilt method)": [[42, "gwinferno.models.bsplines.single.BSplineSpinTilt.__init__"]], "eval_spline() (gwinferno.models.bsplines.single.bsplinespintilt method)": [[42, "gwinferno.models.bsplines.single.BSplineSpinTilt.eval_spline"]], "inj_pdf() (gwinferno.models.bsplines.single.bsplinespintilt method)": [[42, "gwinferno.models.bsplines.single.BSplineSpinTilt.inj_pdf"]], "pe_pdf() (gwinferno.models.bsplines.single.bsplinespintilt method)": [[42, "gwinferno.models.bsplines.single.BSplineSpinTilt.pe_pdf"]], "truncate_dmat() (gwinferno.models.bsplines.single.bsplinespintilt method)": [[42, "gwinferno.models.bsplines.single.BSplineSpinTilt.truncate_dmat"]], "bsplinesymmetricchieffective (class in gwinferno.models.bsplines.single)": [[43, "gwinferno.models.bsplines.single.BSplineSymmetricChiEffective"]], "__call__() (gwinferno.models.bsplines.single.bsplinesymmetricchieffective method)": [[43, "gwinferno.models.bsplines.single.BSplineSymmetricChiEffective.__call__"]], "__init__() (gwinferno.models.bsplines.single.bsplinesymmetricchieffective method)": [[43, "gwinferno.models.bsplines.single.BSplineSymmetricChiEffective.__init__"]], "eval_spline() (gwinferno.models.bsplines.single.bsplinesymmetricchieffective method)": [[43, "gwinferno.models.bsplines.single.BSplineSymmetricChiEffective.eval_spline"]], "inj_pdf() (gwinferno.models.bsplines.single.bsplinesymmetricchieffective method)": [[43, "gwinferno.models.bsplines.single.BSplineSymmetricChiEffective.inj_pdf"]], "pe_pdf() (gwinferno.models.bsplines.single.bsplinesymmetricchieffective method)": [[43, "gwinferno.models.bsplines.single.BSplineSymmetricChiEffective.pe_pdf"]], "truncate_dmat() (gwinferno.models.bsplines.single.bsplinesymmetricchieffective method)": [[43, "gwinferno.models.bsplines.single.BSplineSymmetricChiEffective.truncate_dmat"]], "base1dbsplinemodel (class in gwinferno.models.bsplines.single)": [[44, "gwinferno.models.bsplines.single.Base1DBSplineModel"]], "__call__() (gwinferno.models.bsplines.single.base1dbsplinemodel method)": [[44, "gwinferno.models.bsplines.single.Base1DBSplineModel.__call__"]], "__init__() (gwinferno.models.bsplines.single.base1dbsplinemodel method)": [[44, "gwinferno.models.bsplines.single.Base1DBSplineModel.__init__"]], "eval_spline() (gwinferno.models.bsplines.single.base1dbsplinemodel method)": [[44, "gwinferno.models.bsplines.single.Base1DBSplineModel.eval_spline"]], "inj_pdf() (gwinferno.models.bsplines.single.base1dbsplinemodel method)": [[44, "gwinferno.models.bsplines.single.Base1DBSplineModel.inj_pdf"]], "pe_pdf() (gwinferno.models.bsplines.single.base1dbsplinemodel method)": [[44, "gwinferno.models.bsplines.single.Base1DBSplineModel.pe_pdf"]], "truncate_dmat() (gwinferno.models.bsplines.single.base1dbsplinemodel method)": [[44, "gwinferno.models.bsplines.single.Base1DBSplineModel.truncate_dmat"]], "gwinferno.models.bsplines.smoothing": [[45, "module-gwinferno.models.bsplines.smoothing"]], "apply_difference_prior() (in module gwinferno.models.bsplines.smoothing)": [[46, "gwinferno.models.bsplines.smoothing.apply_difference_prior"]], "apply_twod_difference_prior() (in module gwinferno.models.bsplines.smoothing)": [[47, "gwinferno.models.bsplines.smoothing.apply_twod_difference_prior"]], "get_adaptive_lambda() (in module gwinferno.models.bsplines.smoothing)": [[48, "gwinferno.models.bsplines.smoothing.get_adaptive_Lambda"]], "mixture_smoothing_parameter() (in module gwinferno.models.bsplines.smoothing)": [[49, "gwinferno.models.bsplines.smoothing.mixture_smoothing_parameter"]], "gwinferno.models.gwpopulation": [[50, "module-gwinferno.models.gwpopulation"]], "gwinferno.models.gwpopulation.gwpopulation": [[51, "module-gwinferno.models.gwpopulation.gwpopulation"]], "powerlawredshiftmodel (class in gwinferno.models.gwpopulation.gwpopulation)": [[52, "gwinferno.models.gwpopulation.gwpopulation.PowerlawRedshiftModel"]], "__call__() (gwinferno.models.gwpopulation.gwpopulation.powerlawredshiftmodel method)": [[52, "gwinferno.models.gwpopulation.gwpopulation.PowerlawRedshiftModel.__call__"]], "__init__() (gwinferno.models.gwpopulation.gwpopulation.powerlawredshiftmodel method)": [[52, "gwinferno.models.gwpopulation.gwpopulation.PowerlawRedshiftModel.__init__"]], "beta_spin_magnitude() (in module gwinferno.models.gwpopulation.gwpopulation)": [[53, "gwinferno.models.gwpopulation.gwpopulation.beta_spin_magnitude"]], "iid_spin_magnitude() (in module gwinferno.models.gwpopulation.gwpopulation)": [[54, "gwinferno.models.gwpopulation.gwpopulation.iid_spin_magnitude"]], "iid_spin_tilt() (in module gwinferno.models.gwpopulation.gwpopulation)": [[55, "gwinferno.models.gwpopulation.gwpopulation.iid_spin_tilt"]], "independent_spin_magnitude() (in module gwinferno.models.gwpopulation.gwpopulation)": [[56, "gwinferno.models.gwpopulation.gwpopulation.independent_spin_magnitude"]], "independent_spin_tilt() (in module gwinferno.models.gwpopulation.gwpopulation)": [[57, "gwinferno.models.gwpopulation.gwpopulation.independent_spin_tilt"]], "mixture_isoalign_spin_tilt() (in module gwinferno.models.gwpopulation.gwpopulation)": [[58, "gwinferno.models.gwpopulation.gwpopulation.mixture_isoalign_spin_tilt"]], "plpeak_primary_pdf() (in module gwinferno.models.gwpopulation.gwpopulation)": [[59, "gwinferno.models.gwpopulation.gwpopulation.plpeak_primary_pdf"]], "plpeak_primary_ratio_pdf() (in module gwinferno.models.gwpopulation.gwpopulation)": [[60, "gwinferno.models.gwpopulation.gwpopulation.plpeak_primary_ratio_pdf"]], "powerlaw_primary_ratio_falloff_pdf() (in module gwinferno.models.gwpopulation.gwpopulation)": [[61, "gwinferno.models.gwpopulation.gwpopulation.powerlaw_primary_ratio_falloff_pdf"]], "powerlaw_primary_ratio_pdf() (in module gwinferno.models.gwpopulation.gwpopulation)": [[62, "gwinferno.models.gwpopulation.gwpopulation.powerlaw_primary_ratio_pdf"]], "gwinferno.models.mass_gap": [[63, "module-gwinferno.models.mass_gap"]], "logistic_unit() (in module gwinferno.models.mass_gap)": [[64, "gwinferno.models.mass_gap.logistic_unit"]], "plpeak_gap_primary_ratio_pdf() (in module gwinferno.models.mass_gap)": [[65, "gwinferno.models.mass_gap.plpeak_gap_primary_ratio_pdf"]], "powerlaw_gap_cutoff_primary_ratio_pdf() (in module gwinferno.models.mass_gap)": [[66, "gwinferno.models.mass_gap.powerlaw_gap_cutoff_primary_ratio_pdf"]], "powerlaw_gap_logit_ben_primary_pdf() (in module gwinferno.models.mass_gap)": [[67, "gwinferno.models.mass_gap.powerlaw_gap_logit_ben_primary_pdf"]], "powerlaw_gap_logit_primary_pdf() (in module gwinferno.models.mass_gap)": [[68, "gwinferno.models.mass_gap.powerlaw_gap_logit_primary_pdf"]], "powerlaw_gap_primary_ratio_pdf() (in module gwinferno.models.mass_gap)": [[69, "gwinferno.models.mass_gap.powerlaw_gap_primary_ratio_pdf"]], "gwinferno.models.spline_perturbation": [[70, "module-gwinferno.models.spline_perturbation"]], "powerlawbasissplineprimarypowerlawratio (class in gwinferno.models.spline_perturbation)": [[71, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio"]], "__call__() (gwinferno.models.spline_perturbation.powerlawbasissplineprimarypowerlawratio method)": [[71, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio.__call__"]], "__init__() (gwinferno.models.spline_perturbation.powerlawbasissplineprimarypowerlawratio method)": [[71, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio.__init__"]], "norm_p_m1() (gwinferno.models.spline_perturbation.powerlawbasissplineprimarypowerlawratio method)": [[71, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio.norm_p_m1"]], "p_m1() (gwinferno.models.spline_perturbation.powerlawbasissplineprimarypowerlawratio method)": [[71, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio.p_m1"]], "p_q() (gwinferno.models.spline_perturbation.powerlawbasissplineprimarypowerlawratio method)": [[71, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio.p_q"]], "smoothing() (gwinferno.models.spline_perturbation.powerlawbasissplineprimarypowerlawratio method)": [[71, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryPowerlawRatio.smoothing"]], "powerlawbasissplineprimaryratio (class in gwinferno.models.spline_perturbation)": [[72, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio"]], "__call__() (gwinferno.models.spline_perturbation.powerlawbasissplineprimaryratio method)": [[72, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio.__call__"]], "__init__() (gwinferno.models.spline_perturbation.powerlawbasissplineprimaryratio method)": [[72, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio.__init__"]], "norm_pm1q() (gwinferno.models.spline_perturbation.powerlawbasissplineprimaryratio method)": [[72, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio.norm_pm1q"]], "p_m1() (gwinferno.models.spline_perturbation.powerlawbasissplineprimaryratio method)": [[72, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio.p_m1"]], "p_q() (gwinferno.models.spline_perturbation.powerlawbasissplineprimaryratio method)": [[72, "gwinferno.models.spline_perturbation.PowerlawBasisSplinePrimaryRatio.p_q"]], "powerlawsplineredshiftmodel (class in gwinferno.models.spline_perturbation)": [[73, "gwinferno.models.spline_perturbation.PowerlawSplineRedshiftModel"]], "__call__() (gwinferno.models.spline_perturbation.powerlawsplineredshiftmodel method)": [[73, "gwinferno.models.spline_perturbation.PowerlawSplineRedshiftModel.__call__"]], "__init__() (gwinferno.models.spline_perturbation.powerlawsplineredshiftmodel method)": [[73, "gwinferno.models.spline_perturbation.PowerlawSplineRedshiftModel.__init__"]], "normalization() (gwinferno.models.spline_perturbation.powerlawsplineredshiftmodel method)": [[73, "gwinferno.models.spline_perturbation.PowerlawSplineRedshiftModel.normalization"]], "prob() (gwinferno.models.spline_perturbation.powerlawsplineredshiftmodel method)": [[73, "gwinferno.models.spline_perturbation.PowerlawSplineRedshiftModel.prob"]], "gwinferno.numpyro_distributions": [[74, "module-gwinferno.numpyro_distributions"]], "bsplinedistribution (class in gwinferno.numpyro_distributions)": [[75, "gwinferno.numpyro_distributions.BSplineDistribution"]], "__call__() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[75, "gwinferno.numpyro_distributions.BSplineDistribution.__call__"]], "__init__() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[75, "gwinferno.numpyro_distributions.BSplineDistribution.__init__"]], "batch_shape (gwinferno.numpyro_distributions.bsplinedistribution property)": [[75, "gwinferno.numpyro_distributions.BSplineDistribution.batch_shape"]], "cdf() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[75, "gwinferno.numpyro_distributions.BSplineDistribution.cdf"]], "enumerate_support() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[75, "gwinferno.numpyro_distributions.BSplineDistribution.enumerate_support"]], "event_dim (gwinferno.numpyro_distributions.bsplinedistribution property)": [[75, "gwinferno.numpyro_distributions.BSplineDistribution.event_dim"]], "event_shape (gwinferno.numpyro_distributions.bsplinedistribution property)": [[75, "gwinferno.numpyro_distributions.BSplineDistribution.event_shape"]], "expand() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[75, "gwinferno.numpyro_distributions.BSplineDistribution.expand"]], "expand_by() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[75, "gwinferno.numpyro_distributions.BSplineDistribution.expand_by"]], "icdf() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[75, "gwinferno.numpyro_distributions.BSplineDistribution.icdf"]], "infer_shapes() (gwinferno.numpyro_distributions.bsplinedistribution class method)": [[75, "gwinferno.numpyro_distributions.BSplineDistribution.infer_shapes"]], "log_prob() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[75, "gwinferno.numpyro_distributions.BSplineDistribution.log_prob"]], "mask() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[75, "gwinferno.numpyro_distributions.BSplineDistribution.mask"]], "mean (gwinferno.numpyro_distributions.bsplinedistribution property)": [[75, "gwinferno.numpyro_distributions.BSplineDistribution.mean"]], "sample() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[75, "gwinferno.numpyro_distributions.BSplineDistribution.sample"]], "sample_with_intermediates() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[75, "gwinferno.numpyro_distributions.BSplineDistribution.sample_with_intermediates"]], "shape() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[75, "gwinferno.numpyro_distributions.BSplineDistribution.shape"]], "to_event() (gwinferno.numpyro_distributions.bsplinedistribution method)": [[75, "gwinferno.numpyro_distributions.BSplineDistribution.to_event"]], "variance (gwinferno.numpyro_distributions.bsplinedistribution property)": [[75, "gwinferno.numpyro_distributions.BSplineDistribution.variance"]], "cosine (class in gwinferno.numpyro_distributions)": [[76, "gwinferno.numpyro_distributions.Cosine"]], "__call__() (gwinferno.numpyro_distributions.cosine method)": [[76, "gwinferno.numpyro_distributions.Cosine.__call__"]], "__init__() (gwinferno.numpyro_distributions.cosine method)": [[76, "gwinferno.numpyro_distributions.Cosine.__init__"]], "batch_shape (gwinferno.numpyro_distributions.cosine property)": [[76, "gwinferno.numpyro_distributions.Cosine.batch_shape"]], "cdf() (gwinferno.numpyro_distributions.cosine method)": [[76, "gwinferno.numpyro_distributions.Cosine.cdf"]], "enumerate_support() (gwinferno.numpyro_distributions.cosine method)": [[76, "gwinferno.numpyro_distributions.Cosine.enumerate_support"]], "event_dim (gwinferno.numpyro_distributions.cosine property)": [[76, "gwinferno.numpyro_distributions.Cosine.event_dim"]], "event_shape (gwinferno.numpyro_distributions.cosine property)": [[76, "gwinferno.numpyro_distributions.Cosine.event_shape"]], "expand() (gwinferno.numpyro_distributions.cosine method)": [[76, "gwinferno.numpyro_distributions.Cosine.expand"]], "expand_by() (gwinferno.numpyro_distributions.cosine method)": [[76, "gwinferno.numpyro_distributions.Cosine.expand_by"]], "icdf() (gwinferno.numpyro_distributions.cosine method)": [[76, "gwinferno.numpyro_distributions.Cosine.icdf"]], "infer_shapes() (gwinferno.numpyro_distributions.cosine class method)": [[76, "gwinferno.numpyro_distributions.Cosine.infer_shapes"]], "log_prob() (gwinferno.numpyro_distributions.cosine method)": [[76, "gwinferno.numpyro_distributions.Cosine.log_prob"]], "mask() (gwinferno.numpyro_distributions.cosine method)": [[76, "gwinferno.numpyro_distributions.Cosine.mask"]], "mean (gwinferno.numpyro_distributions.cosine property)": [[76, "gwinferno.numpyro_distributions.Cosine.mean"]], "sample() (gwinferno.numpyro_distributions.cosine method)": [[76, "gwinferno.numpyro_distributions.Cosine.sample"]], "sample_with_intermediates() (gwinferno.numpyro_distributions.cosine method)": [[76, "gwinferno.numpyro_distributions.Cosine.sample_with_intermediates"]], "shape() (gwinferno.numpyro_distributions.cosine method)": [[76, "gwinferno.numpyro_distributions.Cosine.shape"]], "to_event() (gwinferno.numpyro_distributions.cosine method)": [[76, "gwinferno.numpyro_distributions.Cosine.to_event"]], "variance (gwinferno.numpyro_distributions.cosine property)": [[76, "gwinferno.numpyro_distributions.Cosine.variance"]], "cubicinterpolatedpowerlaw (class in gwinferno.numpyro_distributions)": [[77, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw"]], "__call__() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[77, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.__call__"]], "__init__() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[77, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.__init__"]], "batch_shape (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw property)": [[77, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.batch_shape"]], "cdf() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[77, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.cdf"]], "enumerate_support() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[77, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.enumerate_support"]], "event_dim (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw property)": [[77, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.event_dim"]], "event_shape (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw property)": [[77, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.event_shape"]], "expand() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[77, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.expand"]], "expand_by() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[77, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.expand_by"]], "icdf() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[77, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.icdf"]], "infer_shapes() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw class method)": [[77, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.infer_shapes"]], "log_prob() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[77, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.log_prob"]], "mask() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[77, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.mask"]], "mean (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw property)": [[77, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.mean"]], "sample() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[77, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.sample"]], "sample_with_intermediates() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[77, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.sample_with_intermediates"]], "shape() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[77, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.shape"]], "to_event() (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw method)": [[77, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.to_event"]], "variance (gwinferno.numpyro_distributions.cubicinterpolatedpowerlaw property)": [[77, "gwinferno.numpyro_distributions.CubicInterpolatedPowerlaw.variance"]], "linearinterpolatedpowerlaw (class in gwinferno.numpyro_distributions)": [[78, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw"]], "__call__() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.__call__"]], "__init__() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.__init__"]], "batch_shape (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw property)": [[78, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.batch_shape"]], "cdf() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.cdf"]], "enumerate_support() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.enumerate_support"]], "event_dim (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw property)": [[78, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.event_dim"]], "event_shape (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw property)": [[78, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.event_shape"]], "expand() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.expand"]], "expand_by() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.expand_by"]], "icdf() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.icdf"]], "infer_shapes() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw class method)": [[78, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.infer_shapes"]], "log_prob() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.log_prob"]], "mask() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.mask"]], "mean (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw property)": [[78, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.mean"]], "sample() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.sample"]], "sample_with_intermediates() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.sample_with_intermediates"]], "shape() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.shape"]], "to_event() (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw method)": [[78, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.to_event"]], "variance (gwinferno.numpyro_distributions.linearinterpolatedpowerlaw property)": [[78, "gwinferno.numpyro_distributions.LinearInterpolatedPowerlaw.variance"]], "numericallynormalizeddistribition (class in gwinferno.numpyro_distributions)": [[79, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition"]], "__call__() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[79, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.__call__"]], "__init__() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[79, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.__init__"]], "batch_shape (gwinferno.numpyro_distributions.numericallynormalizeddistribition property)": [[79, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.batch_shape"]], "cdf() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[79, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.cdf"]], "enumerate_support() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[79, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.enumerate_support"]], "event_dim (gwinferno.numpyro_distributions.numericallynormalizeddistribition property)": [[79, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.event_dim"]], "event_shape (gwinferno.numpyro_distributions.numericallynormalizeddistribition property)": [[79, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.event_shape"]], "expand() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[79, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.expand"]], "expand_by() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[79, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.expand_by"]], "icdf() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[79, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.icdf"]], "infer_shapes() (gwinferno.numpyro_distributions.numericallynormalizeddistribition class method)": [[79, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.infer_shapes"]], "log_prob() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[79, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.log_prob"]], "mask() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[79, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.mask"]], "mean (gwinferno.numpyro_distributions.numericallynormalizeddistribition property)": [[79, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.mean"]], "sample() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[79, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.sample"]], "sample_with_intermediates() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[79, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.sample_with_intermediates"]], "shape() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[79, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.shape"]], "to_event() (gwinferno.numpyro_distributions.numericallynormalizeddistribition method)": [[79, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.to_event"]], "variance (gwinferno.numpyro_distributions.numericallynormalizeddistribition property)": [[79, "gwinferno.numpyro_distributions.NumericallyNormalizedDistribition.variance"]], "psplinecoeficientprior (class in gwinferno.numpyro_distributions)": [[80, "gwinferno.numpyro_distributions.PSplineCoeficientPrior"]], "__call__() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[80, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.__call__"]], "__init__() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[80, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.__init__"]], "batch_shape (gwinferno.numpyro_distributions.psplinecoeficientprior property)": [[80, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.batch_shape"]], "cdf() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[80, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.cdf"]], "enumerate_support() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[80, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.enumerate_support"]], "event_dim (gwinferno.numpyro_distributions.psplinecoeficientprior property)": [[80, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.event_dim"]], "event_shape (gwinferno.numpyro_distributions.psplinecoeficientprior property)": [[80, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.event_shape"]], "expand() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[80, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.expand"]], "expand_by() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[80, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.expand_by"]], "icdf() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[80, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.icdf"]], "infer_shapes() (gwinferno.numpyro_distributions.psplinecoeficientprior class method)": [[80, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.infer_shapes"]], "log_prob() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[80, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.log_prob"]], "mask() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[80, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.mask"]], "mean (gwinferno.numpyro_distributions.psplinecoeficientprior property)": [[80, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.mean"]], "sample() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[80, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.sample"]], "sample_with_intermediates() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[80, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.sample_with_intermediates"]], "shape() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[80, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.shape"]], "to_event() (gwinferno.numpyro_distributions.psplinecoeficientprior method)": [[80, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.to_event"]], "variance (gwinferno.numpyro_distributions.psplinecoeficientprior property)": [[80, "gwinferno.numpyro_distributions.PSplineCoeficientPrior.variance"]], "powerlaw (class in gwinferno.numpyro_distributions)": [[81, "gwinferno.numpyro_distributions.Powerlaw"]], "__call__() (gwinferno.numpyro_distributions.powerlaw method)": [[81, "gwinferno.numpyro_distributions.Powerlaw.__call__"]], "__init__() (gwinferno.numpyro_distributions.powerlaw method)": [[81, "gwinferno.numpyro_distributions.Powerlaw.__init__"]], "batch_shape (gwinferno.numpyro_distributions.powerlaw property)": [[81, "gwinferno.numpyro_distributions.Powerlaw.batch_shape"]], "cdf() (gwinferno.numpyro_distributions.powerlaw method)": [[81, "gwinferno.numpyro_distributions.Powerlaw.cdf"]], "enumerate_support() (gwinferno.numpyro_distributions.powerlaw method)": [[81, "gwinferno.numpyro_distributions.Powerlaw.enumerate_support"]], "event_dim (gwinferno.numpyro_distributions.powerlaw property)": [[81, "gwinferno.numpyro_distributions.Powerlaw.event_dim"]], "event_shape (gwinferno.numpyro_distributions.powerlaw property)": [[81, "gwinferno.numpyro_distributions.Powerlaw.event_shape"]], "expand() (gwinferno.numpyro_distributions.powerlaw method)": [[81, "gwinferno.numpyro_distributions.Powerlaw.expand"]], "expand_by() (gwinferno.numpyro_distributions.powerlaw method)": [[81, "gwinferno.numpyro_distributions.Powerlaw.expand_by"]], "icdf() (gwinferno.numpyro_distributions.powerlaw method)": [[81, "gwinferno.numpyro_distributions.Powerlaw.icdf"]], "infer_shapes() (gwinferno.numpyro_distributions.powerlaw class method)": [[81, "gwinferno.numpyro_distributions.Powerlaw.infer_shapes"]], "log_prob() (gwinferno.numpyro_distributions.powerlaw method)": [[81, "gwinferno.numpyro_distributions.Powerlaw.log_prob"]], "mask() (gwinferno.numpyro_distributions.powerlaw method)": [[81, "gwinferno.numpyro_distributions.Powerlaw.mask"]], "mean (gwinferno.numpyro_distributions.powerlaw property)": [[81, "gwinferno.numpyro_distributions.Powerlaw.mean"]], "sample() (gwinferno.numpyro_distributions.powerlaw method)": [[81, "gwinferno.numpyro_distributions.Powerlaw.sample"]], "sample_with_intermediates() (gwinferno.numpyro_distributions.powerlaw method)": [[81, "gwinferno.numpyro_distributions.Powerlaw.sample_with_intermediates"]], "shape() (gwinferno.numpyro_distributions.powerlaw method)": [[81, "gwinferno.numpyro_distributions.Powerlaw.shape"]], "to_event() (gwinferno.numpyro_distributions.powerlaw method)": [[81, "gwinferno.numpyro_distributions.Powerlaw.to_event"]], "variance (gwinferno.numpyro_distributions.powerlaw property)": [[81, "gwinferno.numpyro_distributions.Powerlaw.variance"]], "powerlawredshift (class in gwinferno.numpyro_distributions)": [[82, "gwinferno.numpyro_distributions.PowerlawRedshift"]], "__call__() (gwinferno.numpyro_distributions.powerlawredshift method)": [[82, "gwinferno.numpyro_distributions.PowerlawRedshift.__call__"]], "__init__() (gwinferno.numpyro_distributions.powerlawredshift method)": [[82, "gwinferno.numpyro_distributions.PowerlawRedshift.__init__"]], "batch_shape (gwinferno.numpyro_distributions.powerlawredshift property)": [[82, "gwinferno.numpyro_distributions.PowerlawRedshift.batch_shape"]], "cdf() (gwinferno.numpyro_distributions.powerlawredshift method)": [[82, "gwinferno.numpyro_distributions.PowerlawRedshift.cdf"]], "enumerate_support() (gwinferno.numpyro_distributions.powerlawredshift method)": [[82, "gwinferno.numpyro_distributions.PowerlawRedshift.enumerate_support"]], "event_dim (gwinferno.numpyro_distributions.powerlawredshift property)": [[82, "gwinferno.numpyro_distributions.PowerlawRedshift.event_dim"]], "event_shape (gwinferno.numpyro_distributions.powerlawredshift property)": [[82, "gwinferno.numpyro_distributions.PowerlawRedshift.event_shape"]], "expand() (gwinferno.numpyro_distributions.powerlawredshift method)": [[82, "gwinferno.numpyro_distributions.PowerlawRedshift.expand"]], "expand_by() (gwinferno.numpyro_distributions.powerlawredshift method)": [[82, "gwinferno.numpyro_distributions.PowerlawRedshift.expand_by"]], "icdf() (gwinferno.numpyro_distributions.powerlawredshift method)": [[82, "gwinferno.numpyro_distributions.PowerlawRedshift.icdf"]], "infer_shapes() (gwinferno.numpyro_distributions.powerlawredshift class method)": [[82, "gwinferno.numpyro_distributions.PowerlawRedshift.infer_shapes"]], "log_prob() (gwinferno.numpyro_distributions.powerlawredshift method)": [[82, "gwinferno.numpyro_distributions.PowerlawRedshift.log_prob"]], "mask() (gwinferno.numpyro_distributions.powerlawredshift method)": [[82, "gwinferno.numpyro_distributions.PowerlawRedshift.mask"]], "mean (gwinferno.numpyro_distributions.powerlawredshift property)": [[82, "gwinferno.numpyro_distributions.PowerlawRedshift.mean"]], "sample() (gwinferno.numpyro_distributions.powerlawredshift method)": [[82, "gwinferno.numpyro_distributions.PowerlawRedshift.sample"]], "sample_with_intermediates() (gwinferno.numpyro_distributions.powerlawredshift method)": [[82, "gwinferno.numpyro_distributions.PowerlawRedshift.sample_with_intermediates"]], "shape() (gwinferno.numpyro_distributions.powerlawredshift method)": [[82, "gwinferno.numpyro_distributions.PowerlawRedshift.shape"]], "to_event() (gwinferno.numpyro_distributions.powerlawredshift method)": [[82, "gwinferno.numpyro_distributions.PowerlawRedshift.to_event"]], "variance (gwinferno.numpyro_distributions.powerlawredshift property)": [[82, "gwinferno.numpyro_distributions.PowerlawRedshift.variance"]], "sine (class in gwinferno.numpyro_distributions)": [[83, "gwinferno.numpyro_distributions.Sine"]], "__call__() (gwinferno.numpyro_distributions.sine method)": [[83, "gwinferno.numpyro_distributions.Sine.__call__"]], "__init__() (gwinferno.numpyro_distributions.sine method)": [[83, "gwinferno.numpyro_distributions.Sine.__init__"]], "batch_shape (gwinferno.numpyro_distributions.sine property)": [[83, "gwinferno.numpyro_distributions.Sine.batch_shape"]], "cdf() (gwinferno.numpyro_distributions.sine method)": [[83, "gwinferno.numpyro_distributions.Sine.cdf"]], "enumerate_support() (gwinferno.numpyro_distributions.sine method)": [[83, "gwinferno.numpyro_distributions.Sine.enumerate_support"]], "event_dim (gwinferno.numpyro_distributions.sine property)": [[83, "gwinferno.numpyro_distributions.Sine.event_dim"]], "event_shape (gwinferno.numpyro_distributions.sine property)": [[83, "gwinferno.numpyro_distributions.Sine.event_shape"]], "expand() (gwinferno.numpyro_distributions.sine method)": [[83, "gwinferno.numpyro_distributions.Sine.expand"]], "expand_by() (gwinferno.numpyro_distributions.sine method)": [[83, "gwinferno.numpyro_distributions.Sine.expand_by"]], "icdf() (gwinferno.numpyro_distributions.sine method)": [[83, "gwinferno.numpyro_distributions.Sine.icdf"]], "infer_shapes() (gwinferno.numpyro_distributions.sine class method)": [[83, "gwinferno.numpyro_distributions.Sine.infer_shapes"]], "log_prob() (gwinferno.numpyro_distributions.sine method)": [[83, "gwinferno.numpyro_distributions.Sine.log_prob"]], "mask() (gwinferno.numpyro_distributions.sine method)": [[83, "gwinferno.numpyro_distributions.Sine.mask"]], "mean (gwinferno.numpyro_distributions.sine property)": [[83, "gwinferno.numpyro_distributions.Sine.mean"]], "sample() (gwinferno.numpyro_distributions.sine method)": [[83, "gwinferno.numpyro_distributions.Sine.sample"]], "sample_with_intermediates() (gwinferno.numpyro_distributions.sine method)": [[83, "gwinferno.numpyro_distributions.Sine.sample_with_intermediates"]], "shape() (gwinferno.numpyro_distributions.sine method)": [[83, "gwinferno.numpyro_distributions.Sine.shape"]], "to_event() (gwinferno.numpyro_distributions.sine method)": [[83, "gwinferno.numpyro_distributions.Sine.to_event"]], "variance (gwinferno.numpyro_distributions.sine property)": [[83, "gwinferno.numpyro_distributions.Sine.variance"]], "cumtrapz() (in module gwinferno.numpyro_distributions)": [[84, "gwinferno.numpyro_distributions.cumtrapz"]], "gwinferno.parameter_estimation": [[85, "module-gwinferno.parameter_estimation"]], "gwinferno.parameter_estimation.detectors": [[86, "module-gwinferno.parameter_estimation.detectors"]], "detector (class in gwinferno.parameter_estimation.detectors)": [[87, "gwinferno.parameter_estimation.detectors.Detector"]], "__call__() (gwinferno.parameter_estimation.detectors.detector method)": [[87, "gwinferno.parameter_estimation.detectors.Detector.__call__"]], "__init__() (gwinferno.parameter_estimation.detectors.detector method)": [[87, "gwinferno.parameter_estimation.detectors.Detector.__init__"]], "h1 (class in gwinferno.parameter_estimation.detectors)": [[88, "gwinferno.parameter_estimation.detectors.H1"]], "__call__() (gwinferno.parameter_estimation.detectors.h1 method)": [[88, "gwinferno.parameter_estimation.detectors.H1.__call__"]], "__init__() (gwinferno.parameter_estimation.detectors.h1 method)": [[88, "gwinferno.parameter_estimation.detectors.H1.__init__"]], "l1 (class in gwinferno.parameter_estimation.detectors)": [[89, "gwinferno.parameter_estimation.detectors.L1"]], "__call__() (gwinferno.parameter_estimation.detectors.l1 method)": [[89, "gwinferno.parameter_estimation.detectors.L1.__call__"]], "__init__() (gwinferno.parameter_estimation.detectors.l1 method)": [[89, "gwinferno.parameter_estimation.detectors.L1.__init__"]], "v1 (class in gwinferno.parameter_estimation.detectors)": [[90, "gwinferno.parameter_estimation.detectors.V1"]], "__call__() (gwinferno.parameter_estimation.detectors.v1 method)": [[90, "gwinferno.parameter_estimation.detectors.V1.__call__"]], "__init__() (gwinferno.parameter_estimation.detectors.v1 method)": [[90, "gwinferno.parameter_estimation.detectors.V1.__init__"]], "construct_arm() (in module gwinferno.parameter_estimation.detectors)": [[91, "gwinferno.parameter_estimation.detectors.construct_arm"]], "get_detector_tensor() (in module gwinferno.parameter_estimation.detectors)": [[92, "gwinferno.parameter_estimation.detectors.get_detector_tensor"]], "get_geocentric_vertex() (in module gwinferno.parameter_estimation.detectors)": [[93, "gwinferno.parameter_estimation.detectors.get_geocentric_vertex"]], "make_get_polarization_tensor() (in module gwinferno.parameter_estimation.detectors)": [[94, "gwinferno.parameter_estimation.detectors.make_get_polarization_tensor"]], "gwinferno.parameter_estimation.likelihood": [[95, "module-gwinferno.parameter_estimation.likelihood"]], "inner_product() (in module gwinferno.parameter_estimation.likelihood)": [[96, "gwinferno.parameter_estimation.likelihood.inner_product"]], "log_likelihood() (in module gwinferno.parameter_estimation.likelihood)": [[97, "gwinferno.parameter_estimation.likelihood.log_likelihood"]], "log_likelihood_det() (in module gwinferno.parameter_estimation.likelihood)": [[98, "gwinferno.parameter_estimation.likelihood.log_likelihood_det"]], "matched_filter_snr() (in module gwinferno.parameter_estimation.likelihood)": [[99, "gwinferno.parameter_estimation.likelihood.matched_filter_snr"]], "noise_log_likelihood() (in module gwinferno.parameter_estimation.likelihood)": [[100, "gwinferno.parameter_estimation.likelihood.noise_log_likelihood"]], "noise_log_likelihood_det() (in module gwinferno.parameter_estimation.likelihood)": [[101, "gwinferno.parameter_estimation.likelihood.noise_log_likelihood_det"]], "noise_weighted_inner_product() (in module gwinferno.parameter_estimation.likelihood)": [[102, "gwinferno.parameter_estimation.likelihood.noise_weighted_inner_product"]], "optimal_snr_squared() (in module gwinferno.parameter_estimation.likelihood)": [[103, "gwinferno.parameter_estimation.likelihood.optimal_snr_squared"]], "gwinferno.pipeline": [[104, "module-gwinferno.pipeline"]], "gwinferno.pipeline.analysis": [[105, "module-gwinferno.pipeline.analysis"]], "totalvtcalculator (class in gwinferno.pipeline.analysis)": [[106, "gwinferno.pipeline.analysis.TotalVTCalculator"]], "__call__() (gwinferno.pipeline.analysis.totalvtcalculator method)": [[106, "gwinferno.pipeline.analysis.TotalVTCalculator.__call__"]], "__init__() (gwinferno.pipeline.analysis.totalvtcalculator method)": [[106, "gwinferno.pipeline.analysis.TotalVTCalculator.__init__"]], "construct_hierarchical_model() (in module gwinferno.pipeline.analysis)": [[107, "gwinferno.pipeline.analysis.construct_hierarchical_model"]], "find_map() (in module gwinferno.pipeline.analysis)": [[108, "gwinferno.pipeline.analysis.find_map"]], "hierarchical_likelihood() (in module gwinferno.pipeline.analysis)": [[109, "gwinferno.pipeline.analysis.hierarchical_likelihood"]], "hierarchical_likelihood_in_log() (in module gwinferno.pipeline.analysis)": [[110, "gwinferno.pipeline.analysis.hierarchical_likelihood_in_log"]], "logmu_logneff_injections_log() (in module gwinferno.pipeline.analysis)": [[111, "gwinferno.pipeline.analysis.logmu_logneff_injections_log"]], "mu_neff_injections() (in module gwinferno.pipeline.analysis)": [[112, "gwinferno.pipeline.analysis.mu_neff_injections"]], "per_event_log_bayes_factor_log_neffs() (in module gwinferno.pipeline.analysis)": [[113, "gwinferno.pipeline.analysis.per_event_log_bayes_factor_log_neffs"]], "per_event_log_bayes_factor_log_neffs_log() (in module gwinferno.pipeline.analysis)": [[114, "gwinferno.pipeline.analysis.per_event_log_bayes_factor_log_neffs_log"]], "gwinferno.pipeline.parser": [[115, "module-gwinferno.pipeline.parser"]], "configreader (class in gwinferno.pipeline.parser)": [[116, "gwinferno.pipeline.parser.ConfigReader"]], "__call__() (gwinferno.pipeline.parser.configreader method)": [[116, "gwinferno.pipeline.parser.ConfigReader.__call__"]], "__init__() (gwinferno.pipeline.parser.configreader method)": [[116, "gwinferno.pipeline.parser.ConfigReader.__init__"]], "popmixturemodel (class in gwinferno.pipeline.parser)": [[117, "gwinferno.pipeline.parser.PopMixtureModel"]], "__call__() (gwinferno.pipeline.parser.popmixturemodel method)": [[117, "gwinferno.pipeline.parser.PopMixtureModel.__call__"]], "__init__() (gwinferno.pipeline.parser.popmixturemodel method)": [[117, "gwinferno.pipeline.parser.PopMixtureModel.__init__"]], "popmodel (class in gwinferno.pipeline.parser)": [[118, "gwinferno.pipeline.parser.PopModel"]], "__call__() (gwinferno.pipeline.parser.popmodel method)": [[118, "gwinferno.pipeline.parser.PopModel.__call__"]], "__init__() (gwinferno.pipeline.parser.popmodel method)": [[118, "gwinferno.pipeline.parser.PopModel.__init__"]], "popprior (class in gwinferno.pipeline.parser)": [[119, "gwinferno.pipeline.parser.PopPrior"]], "__call__() (gwinferno.pipeline.parser.popprior method)": [[119, "gwinferno.pipeline.parser.PopPrior.__call__"]], "__init__() (gwinferno.pipeline.parser.popprior method)": [[119, "gwinferno.pipeline.parser.PopPrior.__init__"]], "load_base_parser() (in module gwinferno.pipeline.parser)": [[120, "gwinferno.pipeline.parser.load_base_parser"]], "load_dist_from_string() (in module gwinferno.pipeline.parser)": [[121, "gwinferno.pipeline.parser.load_dist_from_string"]], "load_model_from_python_file() (in module gwinferno.pipeline.parser)": [[122, "gwinferno.pipeline.parser.load_model_from_python_file"]], "gwinferno.postprocess": [[123, "module-gwinferno.postprocess"]], "gwinferno.postprocess.calculate_ppds": [[124, "module-gwinferno.postprocess.calculate_ppds"]], "calculate_chieff_bspline_ppds() (in module gwinferno.postprocess.calculate_ppds)": [[125, "gwinferno.postprocess.calculate_ppds.calculate_chieff_bspline_ppds"]], "calculate_iid_spin_bspline_ppds() (in module gwinferno.postprocess.calculate_ppds)": [[126, "gwinferno.postprocess.calculate_ppds.calculate_iid_spin_bspline_ppds"]], "calculate_iid_spin_bspline_weights() (in module gwinferno.postprocess.calculate_ppds)": [[127, "gwinferno.postprocess.calculate_ppds.calculate_iid_spin_bspline_weights"]], "calculate_ind_spin_bspline_ppds() (in module gwinferno.postprocess.calculate_ppds)": [[128, "gwinferno.postprocess.calculate_ppds.calculate_ind_spin_bspline_ppds"]], "calculate_m1_bspline_q_powerlaw_ppds() (in module gwinferno.postprocess.calculate_ppds)": [[129, "gwinferno.postprocess.calculate_ppds.calculate_m1_bspline_q_powerlaw_ppds"]], "calculate_m1m2_bspline_ppds() (in module gwinferno.postprocess.calculate_ppds)": [[130, "gwinferno.postprocess.calculate_ppds.calculate_m1m2_bspline_ppds"]], "calculate_m1q_bspline_ppds() (in module gwinferno.postprocess.calculate_ppds)": [[131, "gwinferno.postprocess.calculate_ppds.calculate_m1q_bspline_ppds"]], "calculate_m1q_bspline_weights() (in module gwinferno.postprocess.calculate_ppds)": [[132, "gwinferno.postprocess.calculate_ppds.calculate_m1q_bspline_weights"]], "calculate_m1q_ppds_plbspline_model() (in module gwinferno.postprocess.calculate_ppds)": [[133, "gwinferno.postprocess.calculate_ppds.calculate_m1q_ppds_plbspline_model"]], "calculate_powerbspline_rate_of_z_ppds() (in module gwinferno.postprocess.calculate_ppds)": [[134, "gwinferno.postprocess.calculate_ppds.calculate_powerbspline_rate_of_z_ppds"]], "calculate_powerlaw_rate_of_z_ppds() (in module gwinferno.postprocess.calculate_ppds)": [[135, "gwinferno.postprocess.calculate_ppds.calculate_powerlaw_rate_of_z_ppds"]], "gwinferno.postprocess.plotting": [[136, "module-gwinferno.postprocess.plotting"]], "plot_chieff_dist() (in module gwinferno.postprocess.plotting)": [[137, "gwinferno.postprocess.plotting.plot_chieff_dist"]], "plot_iid_spin_dist() (in module gwinferno.postprocess.plotting)": [[138, "gwinferno.postprocess.plotting.plot_iid_spin_dist"]], "plot_ind_spin_dist() (in module gwinferno.postprocess.plotting)": [[139, "gwinferno.postprocess.plotting.plot_ind_spin_dist"]], "plot_m1_vs_z_ppc() (in module gwinferno.postprocess.plotting)": [[140, "gwinferno.postprocess.plotting.plot_m1_vs_z_ppc"]], "plot_mass_dist() (in module gwinferno.postprocess.plotting)": [[141, "gwinferno.postprocess.plotting.plot_mass_dist"]], "plot_ppc_brontosaurus() (in module gwinferno.postprocess.plotting)": [[142, "gwinferno.postprocess.plotting.plot_ppc_brontosaurus"]], "plot_rofz() (in module gwinferno.postprocess.plotting)": [[143, "gwinferno.postprocess.plotting.plot_rofz"]], "gwinferno.preprocess": [[144, "module-gwinferno.preprocess"]], "gwinferno.preprocess.conversions": [[145, "module-gwinferno.preprocess.conversions"]], "alpha_beta_from_mu_var() (in module gwinferno.preprocess.conversions)": [[146, "gwinferno.preprocess.conversions.alpha_beta_from_mu_var"]], "chieff_from_q_component_spins() (in module gwinferno.preprocess.conversions)": [[147, "gwinferno.preprocess.conversions.chieff_from_q_component_spins"]], "chip_from_q_component_spins() (in module gwinferno.preprocess.conversions)": [[148, "gwinferno.preprocess.conversions.chip_from_q_component_spins"]], "mu_var_from_alpha_beta() (in module gwinferno.preprocess.conversions)": [[149, "gwinferno.preprocess.conversions.mu_var_from_alpha_beta"]], "gwinferno.preprocess.data_collection": [[150, "module-gwinferno.preprocess.data_collection"]], "apply_priors() (in module gwinferno.preprocess.data_collection)": [[151, "gwinferno.preprocess.data_collection.apply_priors"]], "convert_component_spin_posteriors_to_chieff() (in module gwinferno.preprocess.data_collection)": [[152, "gwinferno.preprocess.data_collection.convert_component_spin_posteriors_to_chieff"]], "dl_2_prior_on_z() (in module gwinferno.preprocess.data_collection)": [[153, "gwinferno.preprocess.data_collection.dl_2_prior_on_z"]], "downsample_posteriors_to_consistent_nsamps() (in module gwinferno.preprocess.data_collection)": [[154, "gwinferno.preprocess.data_collection.downsample_posteriors_to_consistent_nsamps"]], "load_catalog_from_metadata() (in module gwinferno.preprocess.data_collection)": [[155, "gwinferno.preprocess.data_collection.load_catalog_from_metadata"]], "load_posterior_samples() (in module gwinferno.preprocess.data_collection)": [[156, "gwinferno.preprocess.data_collection.load_posterior_samples"]], "p_m1src_q_z_lal_pe_prior() (in module gwinferno.preprocess.data_collection)": [[157, "gwinferno.preprocess.data_collection.p_m1src_q_z_lal_pe_prior"]], "preprocess_data() (in module gwinferno.preprocess.data_collection)": [[158, "gwinferno.preprocess.data_collection.preprocess_data"]], "setup_posterior_samples_and_injections() (in module gwinferno.preprocess.data_collection)": [[159, "gwinferno.preprocess.data_collection.setup_posterior_samples_and_injections"]], "gwinferno.preprocess.priors": [[160, "module-gwinferno.preprocess.priors"]], "di() (in module gwinferno.preprocess.priors)": [[161, "gwinferno.preprocess.priors.Di"]], "chi_effective_prior_from_aligned_spins() (in module gwinferno.preprocess.priors)": [[162, "gwinferno.preprocess.priors.chi_effective_prior_from_aligned_spins"]], "chi_effective_prior_from_isotropic_spins() (in module gwinferno.preprocess.priors)": [[163, "gwinferno.preprocess.priors.chi_effective_prior_from_isotropic_spins"]], "chi_p_prior_from_isotropic_spins() (in module gwinferno.preprocess.priors)": [[164, "gwinferno.preprocess.priors.chi_p_prior_from_isotropic_spins"]], "chi_p_prior_given_chi_eff_q() (in module gwinferno.preprocess.priors)": [[165, "gwinferno.preprocess.priors.chi_p_prior_given_chi_eff_q"]], "joint_prior_from_isotropic_spins() (in module gwinferno.preprocess.priors)": [[166, "gwinferno.preprocess.priors.joint_prior_from_isotropic_spins"]], "gwinferno.preprocess.selection": [[167, "module-gwinferno.preprocess.selection"]], "convert_component_spin_injections_to_chieff() (in module gwinferno.preprocess.selection)": [[168, "gwinferno.preprocess.selection.convert_component_spin_injections_to_chieff"]], "get_injection_dict() (in module gwinferno.preprocess.selection)": [[169, "gwinferno.preprocess.selection.get_injection_dict"]], "get_semianlytic_injection_dict() (in module gwinferno.preprocess.selection)": [[170, "gwinferno.preprocess.selection.get_semianlytic_injection_dict"]], "load_injections() (in module gwinferno.preprocess.selection)": [[171, "gwinferno.preprocess.selection.load_injections"]], "resample_injections() (in module gwinferno.preprocess.selection)": [[172, "gwinferno.preprocess.selection.resample_injections"]], "gwinferno": [[174, "module-gwinferno"]]}})